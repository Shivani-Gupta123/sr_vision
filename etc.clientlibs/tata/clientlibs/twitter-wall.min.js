var urlF = "/bin/socialFeedsServlet?socialTypes=twitter,facebook,instagram";
// this for loading page from top very time refresh page is done
// if ('scrollRestoration' in history) {
//   history.scrollRestoration = 'manual';
// }

/* adding code for GA global search*/

document.getElementsByClassName("globalSearchIcon")[0].addEventListener("click", function () {
  dataLayer.push({
    event: "GASearchEvent",
    eventCategory: "Search",
    eventAction: "Click",
    eventLabel: document.getElementById("searchInputG").value
  });
  dataLayer.push({
    event: "GASearchPage",
    eventCategory: "Search",
    eventAction: "Click",
    eventLabel: window.location.origin + window.location.pathname
  });
});
//landscape view changes
var keys = { 37: 1, 38: 1, 39: 1, 40: 1 };

function preventDefault(e) {
    e.preventDefault();
}

function preventDefaultForScrollKeys(e) {
    if (keys[e.keyCode]) {
        preventDefault(e);
        return false;
    }
}

// modern Chrome requires { passive: false } when adding event
var supportsPassive = false;
try {
    window.addEventListener("test", null, Object.defineProperty({}, 'passive', {
        get: function () { supportsPassive = true; }
    }));
} catch (e) { }

var wheelOpt = supportsPassive ? { passive: false } : false;
var wheelEvent = 'onwheel' in document.createElement('div') ? 'wheel' : 'mousewheel';

// call this to Disable
function disableScroll() {
    window.addEventListener('DOMMouseScroll', preventDefault, false); // older FF
    window.addEventListener(wheelEvent, preventDefault, wheelOpt); // modern desktop
    window.addEventListener('touchmove', preventDefault, wheelOpt); // mobile
    window.addEventListener('keydown', preventDefaultForScrollKeys, false);
}

// call this to Enable
function enableScroll() {
    window.removeEventListener('DOMMouseScroll', preventDefault, false);
    window.removeEventListener(wheelEvent, preventDefault, wheelOpt);
    window.removeEventListener('touchmove', preventDefault, wheelOpt);
    window.removeEventListener('keydown', preventDefaultForScrollKeys, false);
}
//Landscape view overlay
landscapeOverlay = document.getElementsByClassName('landscapeOverlay')[0];
window.addEventListener("orientationchange", (event) => {

    if (window.orientation == 90 || window.orientation == 270 || window.orientation == -90) {
        landscapeOverlay.style.display = 'flex';
        disableScroll();
        document.activeElement.blur();
    }
    else {
        landscapeOverlay.style.display = 'none';
        enableScroll();

    }
});
if (window.orientation == 90 || window.orientation == 270 || window.orientation == -90) {
    landscapeOverlay.style.display = 'flex';
    disableScroll();
    document.activeElement.blur();
}
else {
    
    enableScroll();

}

//handling of parallax share icon
if ((window.innerWidth > 767) && (document.querySelector('.parallaxControlsStory'))) {
    var maxHeightParallax =  document.querySelector('.parallaxControlsStory').scrollHeight;
    window.addEventListener('scroll', shareIconHandler );
    window.addEventListener('DOMContentLoaded',shareIconHandler);
    //adjusting position if Date is not present 
    var saltDate = document.getElementsByClassName("saltDate")[0];
    var forStoryPages = document.getElementsByClassName("forStoryPages")[0];
    var parallX = document.querySelector('.parallaxControlsStory');
    if ((!saltDate) && (forStoryPages)) {
        parallX.classList.add('shareIconsPos');
    }
}
//remove class for parallax in touch devices
else if (document.querySelector('.parallaxControlsStory')){
    let shareIcons = document.querySelector('.parallaxControlsStory');
    shareIcons.classList.remove('animm');
    shareIcons.classList.remove("parallaxControlsStory");

}

/*GA for view more*/
var GAReadTrack = document.getElementsByClassName("GAReadTrack");
if (GAReadTrack.length !== 0) {
  GAReadTrack[0].addEventListener("click", function () {
    dataLayer.push({
      event: "GAViewMore",
      eventCategory: "Story View More",
      eventAction: "Click",
      eventLabel: window.location.href.replace(window.location.origin, "")
    });
  });
}

document.getElementById("searchInputG").addEventListener("keypress", function (e) {
  if (e.keyCode === 13) {
    dataLayer.push({
      event: "GASearchEvent",
      eventCategory: "Search",
      eventAction: "Enter",
      eventLabel: document.getElementById("searchInputG").value
    });
    dataLayer.push({
      event: "GASearchPage",
      eventCategory: "Search",
      eventAction: "Click",
      eventLabel: window.location.origin + window.location.pathname
    });
  }
});
/* GA global search code ends*/

var isSafari = /constructor/i.test(window.HTMLElement) || (function (p) {
  return p.toString() === "[object SafariRemoteNotification]";
})(!window['safari'] || (typeof safari !== 'undefined' && safari.pushNotification));
var iOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;
if (navigator.platform === "MacIntel"){
  if (navigator.maxTouchPoints > 0){
      iOS = true;
  }
}

var logoFlag = false;
var headerFlag = false;
var sliderObj = new Array();
var flagCopy = false;

// this for setting time interval of various carousel components 
document.addEventListener('DOMContentLoaded', function () {
  addFunc("scrollableDiv", "mousewheel", divWheel);
  for (var i = 0; i < document.getElementsByClassName("heroCarousel").length; i++) {
    sliderObj[sliderObj.length] = new CarousalComp(document.getElementsByClassName("heroCarousel")[i], 18000);
  }
  for (var i = 0; i < document.getElementsByClassName("commCarousel").length; i++) {
    sliderObj[sliderObj.length] = new CarousalComp(document.getElementsByClassName("commCarousel")[i], 15000);
  }
  for (var i = 0; i < document.getElementsByClassName("imgCarousel").length; i++) {
    sliderObj[sliderObj.length] = new CarousalComp(document.getElementsByClassName("imgCarousel")[i], 7000);
  }
  for (var i = 0; i < document.getElementsByClassName("slidesCarousel").length; i++) {
          sliderObj[sliderObj.length] = new CarousalComp(document.getElementsByClassName("slidesCarousel")[i], 15000);
  }
  for (var i = 0; i < document.getElementsByClassName("twitter-carousel").length; i++) {
    sliderObj[sliderObj.length] = new CarousalComp(document.getElementsByClassName("twitter-carousel")[i], 7000);
  }
  for (var i = 0; i < document.getElementsByClassName("jobsCarouselHome").length; i++) {
    sliderObj[sliderObj.length] = new CarousalComp(document.getElementsByClassName("jobsCarouselHome")[i], 7000);
  }
  for (var i = 0; i < document.getElementsByClassName("storyCarousel").length; i++) {
    sliderObj[sliderObj.length] = new CarousalComp(document.getElementsByClassName("storyCarousel")[i], 7000);
  }
  for (var i = 0; i < document.getElementsByClassName("holdingsCarousel").length; i++) {
    sliderObj[sliderObj.length] = new CarousalComp(document.getElementsByClassName("holdingsCarousel")[i], 7000);
  }
  for (var i = 0; i < document.getElementsByClassName("careerCarousel").length; i++) {
    sliderObj[sliderObj.length] = new CarousalComp(document.getElementsByClassName("careerCarousel")[i], 7000);
  }
  for (var i = 0; i < document.getElementsByClassName("jobs-carousel").length; i++) {
    sliderObj[sliderObj.length] = new CarousalComp(document.getElementsByClassName("jobs-carousel")[i], 7000);
  }
  if (window.innerWidth > 576) {
    for (var i = 0; i < document.getElementsByClassName("brandsCrousel").length; i++) {
      sliderObj[sliderObj.length] = new CarousalComp(document.getElementsByClassName("brandsCrousel")[i], 10000);
    }
  }
  for (var i = 0; i < document.getElementsByClassName("brandCarousel").length; i++) {
    sliderObj[sliderObj.length] = new CarousalComp(document.getElementsByClassName("brandCarousel")[i], 10000);
  }
  if (document.getElementsByClassName("slideDownDiv").length != 0) {
    var slideDown = document.getElementsByClassName("slideDownDiv")[0];
    slideDown.addEventListener('click', function (event) {
     // var elems = document.getElementsByClassName("mainSliderElem");
     // var elem = elems[1];
      //scrollTo(elem.offsetTop, event, elem, 2000);
    });
  }
  setTimeout(function () { }, 1000);
});

// this for loading page from top very time refresh page is done
function scrollToTop() {
  document.documentElement.scrollTop = 0;
  document.body.parentNode.scrollTop = 0;
  document.body.scrollTop = 0;
}

//this for redirecting user to homepage on click of TATA logo in footer
var footerLogo = document.querySelectorAll(".footerLogo > a")[0];
if (footerLogo.length != 0) {
  footerLogo.addEventListener("click", function () {
    logoFlag = true;
    window.open("/home-page", "_self");
  });
}
// window.addEventListener("pageshow", function (event) {
//   logoFlag = false;
//   var headerbg = document.getElementsByClassName("navbar")[0];
//   if (headerbg.classList.contains("backLight")) {
//     navBar.classList.remove("backLight");
//   }
//   var historyTraversal = event.persisted || (typeof window.performance != "undefined" && window.performance.navigation.type === 2);
//   if (historyTraversal) {
//     var modalPopup = document.getElementsByClassName("managementModal")[0];
//     if (!modalPopup) {
//       scrollToTop();
//       window.location.reload();
//     }
//   }
// });

function divWheel(event) {
  if (event.wheelDelta > 0 || event.detail < 0) {
    if (event.currentTarget.scrollTop == 0) {
      modalOpen = false;
    }
  } else {
    if (event.currentTarget.scrollHeight - event.currentTarget.scrollTop == event.currentTarget.offsetHeight) {
      modalOpen = false;
    }
  }
}

function addFunc(elemName, event, functionE) {
  var elemList = document.getElementsByClassName(elemName);
  for (var i = 0; i < elemList.length; i++) {
    elemList[i].addEventListener(event, functionE);
  }
}

//this for changing style of navbar in mobile and tabs making it as a side bar 
if (window.innerWidth < 992) {
  var nav = document.getElementsByClassName("navbar");
  var mainSliderElem = document.getElementsByClassName("mainSliderElem");
  window.onscroll = function () {
    navChange();
  };
  window.addEventListener('load', function () {
    nav[0].style.visibility = "visible";
  });

  function navChange() {
    if (document.body.scrollTop > 30 || document.documentElement.scrollTop > 30) {
      for (var i = 0; i < mainSliderElem.length; i++) {
        mainSliderElem[i].classList.add("customScroll");
        nav[0].style.visibility = "visible";
        nav[0].classList.add("navBackground");
        mainSliderElem[i].classList.remove("grayNav");
      }
    } else if (document.body.scrollTop == 0 || document.documentElement.scrollTop == 0) {
      nav[0].classList.remove("navBackground");
    }
  }
}

// this for animating cards
var moduleCard = [];
var borderAnimCards = [];
moduleCard = document.querySelectorAll(".module");
borderAnimCards = document.querySelectorAll(".borderAnimCards");
var startAnim = document.querySelectorAll(".startAnim");
var jobFigures = document.querySelectorAll(".jobFigures");
var animFlag = true;

function animateCard(partial, moduleCard) {
  var viewTop = document.documentElement.scrollTop;
  var viewBtm = viewTop + document.documentElement.clientHeight;
  var animTop = moduleCard.getBoundingClientRect().top + document.documentElement.scrollTop;
  var animBtm = animTop + moduleCard.offsetHeight;
  var compareTop = partial === true ? animBtm : animTop;
  var compareBottom = partial === true ? animTop : animBtm;
  return ((compareBottom <= viewBtm) && (compareTop >= viewTop));
}
for (var i = 0; i < moduleCard.length; i++) {
  if (animateCard(true, moduleCard[i])) {
    moduleCard[i].classList.add("already-visible");
  }
}
var modalAnim = document.getElementById('modalD');
if (modalAnim !== null) {
  if (!iOS) {
    modalAnim.addEventListener('scroll', function (event) {
      var moduleCard = [];
      var borderAnimCards = [];
      moduleCard = document.querySelectorAll(".module");
      borderAnimCards = document.querySelectorAll(".borderAnimCards");
      for (var i = 0; i < moduleCard.length; i++) {
        if (animateCard(true, moduleCard[i])) {
          moduleCard[i].classList.add("come-in");
          document.querySelector(".modal .headingDiv").style.zIndex = "99";
        }
      }
      for (var i = 0; i < borderAnimCards.length; i++) {
        if (animateLine(true, borderAnimCards[i])) {
          borderAnimCards[i].classList.add("comeInBorder");
        }
      }
    });
  }
}
var startAnim = document.querySelectorAll(".startAnim");

var checkIfAnimated = false;

window.addEventListener("scroll", function (event) {
  if (checkIfAnimated === true) {
    numberAnim("active");
  }
});

//this for twitterWall counter animation as the cards are loaded without any scroll
window.addEventListener("load", function (event) {
  if (document.getElementsByClassName("twitterMentions").length === 0) {
    numberAnim("active");
    checkIfAnimated = true;
  } else {
    var twitterMentionServlet = "/bin/tweetMentionsServlet?";
    var twitterMentionServletJobLanding = "/bin/tata/jobPostingsCountServlet?";
    var tweeterMention = document.getElementsByClassName("careers");
    var tweeterMentionJoblanding = document.getElementsByClassName("jobcareers");
    if (tweeterMention.length > 0) {
      var xhttpTwitterMention = new XMLHttpRequest();
      xhttpTwitterMention.open("GET", twitterMentionServlet, true);
      xhttpTwitterMention.onload = function () {

        if (xhttpTwitterMention.readyState == 4 && xhttpTwitterMention.status === 200) {
          for (var j = 0; j < tweeterMention.length; j++) {
            if (tweeterMention[j].classList.value == "careers") {
              var temp = JSON.parse(JSON.parse(xhttpTwitterMention.response).response);
              tweeterMention[j].children[1].innerHTML = temp[j];

              checkIfAnimated = true;
            } else {
              console.log('Request failed.  Returned status of ' + xhttp.status);
            }

          }
          numberAnim("active");
        } else {
          console.log('Request failed.  Returned status of ' + xhttp.status);
        }

      };

      xhttpTwitterMention.send();
    } else {
      var xhttpTwitterMention = new XMLHttpRequest();
      xhttpTwitterMention.open("GET", twitterMentionServletJobLanding, true);
      xhttpTwitterMention.onload = function () {
        if (xhttpTwitterMention.readyState == 4 && xhttpTwitterMention.status === 200) {
          var temp = JSON.parse(xhttpTwitterMention.response).response;
          var tt = document.querySelectorAll('.startAnim');
          if (tweeterMentionJoblanding[0].getAttribute('data-usedynamicjobcountcard1') == 'true') {
            tweeterMentionJoblanding[0].children[1].innerHTML = temp.totalCount
          } else {
            tweeterMentionJoblanding[0].children[1].innerHTML = tt[0].innerHTML;
          }

          if (tweeterMentionJoblanding[1].getAttribute('data-usedynamicjobcountcard2') == 'true') {
            tweeterMentionJoblanding[1].children[1].innerHTML = temp.lastMonth;
          } else {
            tweeterMentionJoblanding[1].children[1].innerHTML = tt[1].innerHTML;
          }

          if (tweeterMentionJoblanding[2].getAttribute('data-usedynamicjobcountcard3') == 'true') {
            tweeterMentionJoblanding[2].children[1].innerHTML = temp.lastWeek;
          } else {
            tweeterMentionJoblanding[2].children[1].innerHTML = tt[2].innerHTML;
          }

          numberAnim("active");
          checkIfAnimated = true;
        } else {
          console.log('Request failed.  Returned status of ' + xhttp.status);
        }

      };
      xhttpTwitterMention.send();
    }


  }
});

//this for counter animation modified starts
var animationCount = 0;
var animationFlag = [];
var cardCount = document.querySelectorAll(".module").length;
for (var i = 0; i < cardCount; i++) {
  animationFlag[i] = true;
}

function numberAnim(postion) {
  moduleCard = document.querySelectorAll(".module");
  borderAnimCards = document.querySelectorAll(".borderAnimCards");
  for (var i = 0; i < moduleCard.length; i++) {
    if (animateCard(true, moduleCard[i])) {
      moduleCard[i].classList.add("come-in");
      if (moduleCard[i].getElementsByClassName("startAnim").length != 0 && animFlag && animationFlag[i] && (moduleCard[i].getBoundingClientRect().top > 0) && (moduleCard[i].getBoundingClientRect().top < window.innerHeight)) {
        moduleCard[i].getElementsByClassName("startAnim")[0].classList.add("jobFigures");
        if (moduleCard[i].getElementsByClassName("startAnim").length == 2)
          moduleCard[i].getElementsByClassName("startAnim")[1].classList.add("jobFigures2");
        var valFromHtml = moduleCard[i].getElementsByClassName("jobFigures")[0].innerText.trim();
        if (moduleCard[i].getElementsByClassName("jobFigures2")[0])
          var valFromHtml2 = moduleCard[i].getElementsByClassName("jobFigures2")[0].innerText.trim();

        function animateValue(id, start, end, duration, animateModule) {
          var isComma = /[0-9]+,[0-9]+/.test(end);
          var usd = /^-?(?:0|[1-9]\d{0,2}(?:,?\d{3})*)(?:\.\d+)?$/.test(end); //check for usd
          end = end.replace(/,/g, '');
          var obj = animateModule.getElementsByClassName(id)[0];
          var range = end - start;
          var minTimer = 50;
          var stepTime = Math.abs(Math.floor(duration / range));
          stepTime = Math.max(stepTime, minTimer);
          var startTime = new Date().getTime();
          var endTime = startTime + duration;
          var timer;

          function run() {
            var now = new Date().getTime();
            var remaining = Math.max((endTime - now) / duration, 0);
            var value = Math.round(end - (remaining * range));
            obj.innerHTML = value;
            if (value == end) {
              clearInterval(timer);
              obj.innerHTML = end;
            }
            //usd
            if (usd) {
              if (/(\d)(?=(\d{3})+(?!\d))/g.test(value.toString())) {
                value = value.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1,");
                obj.innerHTML = value;
              }
              //normal inr
            } else if (isComma) {
              if (value > 99999) {
                if (/(\d+)(\d{2})(\d{3})/.test(value.toString())) {
                  value = value.toString().replace(/(\d+)(\d{2})(\d{3})/, '$1' + ',' + '$2' + ',' + '$3');
                  obj.innerHTML = value;
                }
              } else {
                var temp = value % 1000;
                if (temp < 10) {
                  temp = "00" + temp;
                } else if (temp < 100) {
                  temp = "0" + temp;
                }
                obj.innerHTML = Math.floor(value / 1000) + "," + temp;
              }
            }
          }
          var timer = setInterval(run, stepTime);
          run();
        }
        animationFlag[i] = false;
        if (animationFlag[i])
          animationCount++;
        animateValue("jobFigures", 100, valFromHtml, 2000, moduleCard[i]);
        if (moduleCard[i].getElementsByClassName("jobFigures2").length != 0)
          animateValue("jobFigures2", 100, valFromHtml2, 2000, moduleCard[i]);
      }
    }
  }
  if (animationCount >= 3) {
    animFlag = false;
  }
}
// this for counter animation modified ends

// line animation
function animateLine(partial, borderAnimCards) {
  var viewTop = document.documentElement.scrollTop;
  var viewBtm = viewTop + document.documentElement.clientHeight;
  var animTop = borderAnimCards.getBoundingClientRect().top + document.documentElement.scrollTop;
  var animBtm = animTop + borderAnimCards.offsetHeight;
  var compareTop = partial === true ? animBtm : animTop;
  var compareBottom = partial === true ? animTop : animBtm;
  return ((compareBottom <= viewBtm) && (compareTop >= viewTop));
}
for (var i = 0; i < borderAnimCards.length; i++) {
  if (animateLine(true, borderAnimCards[i])) {
    borderAnimCards[i].classList.add("already-visible");
  }
}
window.addEventListener("scroll", function (event) {
  for (var i = 0; i < borderAnimCards.length; i++) {
    if (animateLine(true, borderAnimCards[i])) {
      borderAnimCards[i].classList.add("comeInBorder");
    }
  }
});

// for word limits inside div
var feeds = document.getElementsByClassName("feeds");
var fJobs = document.getElementsByClassName("fJobs");
var feedsTwitter = document.getElementsByClassName("feedsTwitter");
var managementInfo = document.getElementsByClassName("infoDiv");
for (var i = 0; i < managementInfo.length; i++) {
  var len = managementInfo[i].innerHTML.length;
  if (len >= 135) {
    managementInfo[i].innerHTML = managementInfo[i].innerHTML.substring(0, 135) + "...";
  }
}
for (var i = 0; i < feedsTwitter.length; i++) {
  if (feedsTwitter[i].className = "feedsTwitter") {
    var len = feedsTwitter[i].innerHTML.length;
    if (len >= 255) {
      feedsTwitter[i].innerHTML = feedsTwitter[i].innerHTML.substring(0, 255) + "...";
    }
  }
}
for (var i = 0; i < feeds.length; i++) {
  if (feeds[i].className == "feeds") {
    var len = feeds[i].innerHTML.length;
    if (len >= 75) {
      feeds[i].innerHTML = feeds[i].innerHTML.substring(0, 75) + "...";
    }
  }
}
for (var i = 0; i < fJobs.length; i++) {
  if (fJobs[i].className == "fJobs") {
    var len = fJobs[i].innerHTML.length;
    if (len >= 35) {
      fJobs[i].innerHTML = fJobs[i].innerHTML.substring(0, 35) + "...";
    }
  }
}
var ymlArticle = document.getElementsByClassName("ymlFeedArticle");
var ymlArticleW = document.getElementsByClassName("ymlFeedArticleW");
var ymlArticleincW = document.getElementsByClassName("ymlFeedArticleW incWidth");
var ymlTextArticle = document.getElementsByClassName("ymlTextArticle");
var infoFeedArticle = document.getElementsByClassName("infoFeedArticle");
var companyFeedArticle = document.getElementsByClassName("companyFeedArticle");

for (var i = 0; i < infoFeedArticle.length; i++) {
  if (infoFeedArticle[i].className == "infoFeedArticle") {
    var len = infoFeedArticle[i].innerHTML.length;
    if (len >= 360) {
      infoFeedArticle[i].innerHTML = infoFeedArticle[i].innerHTML.substring(0, 360) + "...";
    }
  }
}

for (var i = 0; i < companyFeedArticle.length; i++) {
  if (companyFeedArticle[i].className == "companyFeedArticle") {
    var len = companyFeedArticle[i].innerHTML.length;
    if (len >= 420) {
      if ((window.innerWidth > 991)||(window.innerWidth < 576)){
                companyFeedArticle[i].innerHTML = companyFeedArticle[i].innerHTML.substring(0, 650) + "...";
            }
      else{
                companyFeedArticle[i].innerHTML = companyFeedArticle[i].innerHTML.substring(0, 450) + "...";
            }
    }
  }
}


for (var i = 0; i < ymlArticle.length; i++) {
    var ymlarticleClosetSection = ymlArticle[i].closest('section');//added code for never-rest 1st card text
    if (ymlArticle[i].className == "ymlFeedArticle" && !ymlarticleClosetSection.classList.contains('neverRestCardsSection')) {
    var len = ymlArticle[i].innerHTML.length;
    if (len >= 90) {
      ymlArticle[i].innerHTML = ymlArticle[i].innerHTML.substring(0, 90) + "...";
    }
  }
}
for (var i = 0; i < ymlTextArticle.length; i++) {
  if (ymlTextArticle[i].className == "ymlTextArticle") {
    var len = ymlTextArticle[i].innerHTML.length;
    if (len >= 90) {
      ymlTextArticle[i].innerHTML = ymlTextArticle[i].innerHTML.substring(0, 90) + "...";
    }
  }
}
for (var i = 0; i < ymlArticleincW.length; i++) {
  if (ymlArticleincW[i].className == "ymlFeedArticleW incWidth") {
    var len = ymlArticleincW[i].innerHTML.length;
    if (len >= 90) {
      ymlArticleincW[i].innerHTML = ymlArticleincW[i].innerHTML.substring(0, 90) + "...";
    }
  }
}

for (var i = 0; i < ymlArticleW.length; i++) {
  if (ymlArticleW[i].className == "ymlFeedArticleW") {
    var len = ymlArticleW[i].innerHTML.length;
    if (len >= 90) {
      ymlArticleW[i].innerHTML = ymlArticleW[i].innerHTML.substring(0, 90) + "...";
    }
  }
}

//code for copy url Link
var isSafari = /constructor/i.test(window.HTMLElement) || (function (p) {
  return p.toString() === "[object SafariRemoteNotification]";
})(!window['safari'] || (typeof safari !== 'undefined' && safari.pushNotification));
var iOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;
if (navigator.platform === "MacIntel"){
  if (navigator.maxTouchPoints > 0){
      iOS = true;
  }
}

var linkCopy = document.querySelectorAll(".linkCopy")[0];
if (linkCopy) {
  linkCopy.addEventListener("click", copyUrl);
}

function copyUrl() {
  var imgsrc = linkCopy.getElementsByTagName("img")[0].getAttribute("src");
  var hoverimgsrc = linkCopy.getElementsByTagName("img")[1].getAttribute("src");
  linkCopy.getElementsByTagName("img")[0].src = hoverimgsrc;
  setTimeout(function () {
    linkCopy.getElementsByTagName("img")[0].src = imgsrc;
  }, 200);

  var urlCopied = document.getElementsByClassName("urlCopied")[0];

  if (iOS && (window.innerWidth < 991)) {
    urlCopied.readOnly = false;
    urlCopied.style.display = "block";
    urlCopied.classList.add("urlCopiediOs");
    urlCopied.innerHTML = window.location.href;
    urlCopied.focus();
    urlCopied.setSelectionRange(0, 99999);
    flagCopy = false;
    urlCopied.readOnly = true;
  } else {
    urlCopied.style.display = "block";
    urlCopied.style.width = "0";
    urlCopied.style.height = "0";
    urlCopied.style.opacity = "0";
    urlCopied.style.zIndex = "2";
    urlCopied.innerHTML = window.location.href;
    urlCopied.readOnly = true;
    var copyText = document.getElementsByClassName("urlCopied")[0];
    copyText.select();
    document.execCommand("copy");
  }
}

function closeOnOutsideClickCopy() {
  if (flagCopy && iOS && linkCopy) {
    var urlCopied = document.getElementsByClassName("urlCopied")[0];
    urlCopied.style.display = "none";
    urlCopied.classList.remove("urlCopiediOs");
    urlCopied.readOnly = false;
  } else {
    flagCopy = true;
  }
}
document.addEventListener("click", closeOnOutsideClickCopy);

//code for share functionality
var fb = document.querySelectorAll(".fb > .fbAnchor");
var twitter = document.querySelectorAll(".twitter > .twitterAnchor");
var linkedin = document.querySelectorAll(".linkedin > .linkedinAnchor");
var mailto = document.querySelectorAll(".mailto > .mailtoAnchor");

for (var i = 0; i < fb.length; i++) {
  if (fb || twitter || linkedin || mailto) {
    if (fb[i]) {
      fb[i].addEventListener("mouseenter", chngImgColorfb);

      function chngImgColorfb() {
        this.style.backgroundImage = "url(/etc.clientlibs/tata/clientlibs/assets/resources/img/common/shareOptions/color/FB.svg)";
      }
      fb[i].addEventListener("mouseleave", chngImgfb);

      function chngImgfb() {
        this.style.backgroundImage = "url(/etc.clientlibs/tata/clientlibs/assets/resources/img/common/shareOptions/FB.svg)";
      }
    }
    if (twitter[i]) {
      twitter[i].addEventListener("mouseenter", chngImgColortwitter);

      function chngImgColortwitter() {
        this.style.backgroundImage = "url(/etc.clientlibs/tata/clientlibs/assets/resources/img/common/shareOptions/color/x-icon.svg)";
      }
      twitter[i].addEventListener("mouseleave", chngImgtwitter);

      function chngImgtwitter() {
        this.style.backgroundImage = "url(/etc.clientlibs/tata/clientlibs/assets/resources/img/common/shareOptions/x-icon.svg)";
      }
    }
    if (linkedin[i]) {
      linkedin[i].addEventListener("mouseenter", chngImgColorlinkedin);

      function chngImgColorlinkedin() {
        this.style.backgroundImage = "url(/etc.clientlibs/tata/clientlibs/assets/resources/img/common/shareOptions/color/LinkedIn.svg)";
      }
      linkedin[i].addEventListener("mouseleave", chngImglinkedin);

      function chngImglinkedin() {
        this.style.backgroundImage = "url(/etc.clientlibs/tata/clientlibs/assets/resources/img/common/shareOptions/LinkedIn.svg)";
      }
    }
    if (mailto[i]) {
      mailto[i].addEventListener("mouseenter", chngImgColormailto);

      function chngImgColormailto() {
        this.style.backgroundImage = "url(/etc.clientlibs/tata/clientlibs/assets/resources/img/common/shareOptions/color/Contact_Us.svg)";
      }
      mailto[i].addEventListener("mouseleave", chngImgmailto);

      function chngImgmailto() {
        this.style.backgroundImage = "url(/etc.clientlibs/tata/clientlibs/assets/resources/img/common/shareOptions/Contact_Us.svg)";
      }
    }
    if (fb[i].parentElement.getAttribute("pageshare")) {
      var currentUrl = fb[i].parentElement.getAttribute("pageshare");
      if (!currentUrl.includes("tata.com")) {
        currentUrl = window.location.origin + currentUrl;
      }
      currentUrl = currentUrl.replace("/content/tata/en", "");
    } else
      var currentUrl = window.location.href;

    var twitterShareParams = "";

    if (fb[i].parentElement.hasAttribute("pagedescription")) {
      var currentDescription = fb[i].parentElement.getAttribute("pagedescription");
      if (currentDescription !== "") {
        twitterShareParams += "&text=" + encodeURIComponent(currentDescription);
      }
    } else if (document.querySelector("[name='description']")) {
      var currentDescription = document.querySelector("[name='description']").content;
      twitterShareParams += "&text=" + encodeURIComponent(currentDescription);
    }

    if (fb[i].parentElement.hasAttribute("pagehashtags")) {
      var currentHashtags = fb[i].parentElement.getAttribute("pagehashtags");
      if (currentHashtags !== "") {
        twitterShareParams += "&hashtags=" + currentHashtags;
      }
    } else if (document.querySelector("[name='hashtags']")) {
      var currentHashtags = document.querySelector("[name='hashtags']").content;
      twitterShareParams += "&hashtags=" + currentHashtags;
    }
    if (currentUrl.includes('?')) {
      let urlParts = currentUrl.split("?");
      urlParts[1] = encodeURIComponent(urlParts[1]);
      currentUrl = urlParts[0] + "?" + urlParts[1];
    }
    if (currentUrl.includes("http")) {
      fb[i].setAttribute(
        "href",
        "https://www.facebook.com/sharer/sharer.php?u=" + currentUrl
      );
      twitter[i].setAttribute(
        "href",
        "https://twitter.com/share?url=" + currentUrl + twitterShareParams
      );
      linkedin[i].setAttribute(
        "href",
        "https://www.linkedin.com/shareArticle?mini=true&url=" + currentUrl
      );
      mailto[i].setAttribute(
        "href",
        "mailto:?subject= Tata.com url&body=%20" + currentUrl
      );
    } else {
      fb[i].setAttribute(
        "href",
        "https://www.facebook.com/sharer/sharer.php?u=https://" + currentUrl
      );
      twitter[i].setAttribute(
        "href",
        "https://twitter.com/share?url=" + currentUrl + twitterShareParams
      );
      linkedin[i].setAttribute(
        "href",
        "https://www.linkedin.com/shareArticle?mini=true&url=https://" + currentUrl
      );
      mailto[i].setAttribute(
        "href",
        "mailto:?subject= Tata.com url&body=%20https://" + currentUrl
      );
    }

    var isMobile = {
      Android: function () {
        return navigator.userAgent.match(/Android/i);
      },
      BlackBerry: function () {
        return navigator.userAgent.match(/BlackBerry/i);
      },
      iOS: function () {
        return navigator.userAgent.match(/iPhone|iPad|iPod/i);
      },
      Opera: function () {
        return navigator.userAgent.match(/Opera Mini/i);
      },
      Windows: function () {
        return navigator.userAgent.match(/IEMobile/i);
      },
      any: function () {
        return (isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows());
      }
    };
    var whatsApp = document.getElementsByClassName("whatsApp");
    for (var j = 0; j < whatsApp.length; j++) {
      whatsApp[j].addEventListener("click", function () {
        if (isMobile.any()) {
          var whatsapp_url = "whatsapp://send?text=" + currentUrl;
          window.location.href = whatsapp_url;
        } else {
          console.log("Please share this article in mobile device");
        }
      });
    }
  }
}

var shareBtn = document.getElementsByClassName("shareBtn")[0];
var shareBtnParent = document.getElementsByClassName("shareBtnParent");
var shareOptions = document.getElementsByClassName("shareOptions");
var shareFlag = false;
for (var i = 0; i < shareBtnParent.length; i++) {
  shareBtnParent[i].addEventListener("click", sharePanelOpenfn);
  if (window.innerWidth > 992) {
    shareBtnParent[i].addEventListener("mouseover", function () {
      var el = this;
      if (!el.classList.contains("activeShare")) {
        el.children[0].style.display = "none";
        el.children[1].style.display = "inline-block";
      }
    });
    shareBtnParent[i].addEventListener("mouseout", function () {
      var el = this;
      if (!el.classList.contains("activeShare")) {
        el.children[0].style.display = "inline-block";
        el.children[1].style.display = "none";
      }
    });
  }
}

//this for opening share panel
function sharePanelOpenfn() {
  var el = this;
  shareFlag = true;
  if (!el.classList.contains("activeShare")) {
    for (var i = 0; i < shareBtnParent.length; i++) {
      shareBtnParent[i].classList.remove("activeShare");
      shareOptions[i].classList.remove("active");
      shareBtnParent[i].children[0].style.display = "inline-block";
      shareBtnParent[i].children[1].style.display = "none";
    }
    el.classList.add("activeShare");
    el.children[0].style.display = "none";
    el.children[1].style.display = "inline-block";

    var sharePanel = el.parentElement.nextElementSibling;
    sharePanel.classList.add("active");
    document.addEventListener("click", closeSharePanel);
  } else {
    for (var i = 0; i < shareOptions.length; i++) {
      shareOptions[i].classList.remove("active");
      shareBtnParent[i].classList.remove("activeShare");
    }
    var el = this;
    el.children[0].style.display = "inline-block";
    el.children[1].style.display = "none";
  }
}

// this for share panel in story pages
function shareLabels() {
  if (window.innerWidth < 767) {
    var parallaxControls = document.querySelectorAll(".forStoryPages > .parallaxControls")[0];
    if (parallaxControls) {
      parallaxControls.classList.remove("parallaxControls");
    }
  }
}

// this for closing share panel
function closeSharePanel() {
  if (shareFlag == false) {
    for (var i = 0; i < shareBtnParent.length; i++) {
      shareBtnParent[i].classList.remove("activeShare");
      shareOptions[i].classList.remove("active");
      shareBtnParent[i].children[0].style.display = "inline-block";
      shareBtnParent[i].children[1].style.display = "none";
    }
  }
  shareFlag = false;
  shareLabels();
}
if (window.innerWidth < 767) {
  shareLabels();
}

//heroBanner indicator
var heroArrow = document.querySelectorAll(".heroControlsArrow > .carousel-control");
window.addEventListener('resize', function () {
  if (heroArrow) {
    for (var i = 0; i < heroArrow.length; i++) {
      heroArrow[i].addEventListener("touchstart", touchedStartFn);
      heroArrow[i].addEventListener("touchend", touchedEndFn);
    }
  }
}, true);

if (heroArrow) {
  for (var i = 0; i < heroArrow.length; i++) {
    heroArrow[i].addEventListener("touchstart", touchedStartFn);
    heroArrow[i].addEventListener("touchend", touchedEndFn);
  }
}

function touchedStartFn() {
  this.style.opacity = 1;
}

function touchedEndFn() {
  this.style.opacity = 0.5;
}

//this for load more btn animation in touch devices
var loadMoreBtn = document.getElementsByClassName("simButton");
if (window.innerWidth < 992) {
  for (var i = 0; i < loadMoreBtn.length; i++) {
    if (loadMoreBtn.length != 0) {
      loadMoreBtn[i].addEventListener("touchstart", function () {
        this.classList.add("buttonMr");
      });
      loadMoreBtn[i].addEventListener("touchend", function () {
        this.classList.remove("buttonMr");
      });
    }
  }
}

// this for banner video running in loop using jwplayer
var bannerVideo = document.getElementsByClassName("bannerVideoContdiv");
var src, posterImage;
if (bannerVideo.length !== 0) {
  bannerVideo[0].id = "bannerVideo";
  var videoDiv = bannerVideo[0].dataset;
  src = videoDiv.href;
  posterImage = videoDiv.image;
  var playerInstance = jwplayer(bannerVideo[0].id);
  playerInstance.setup({
    "skin": {
      "name": "myskin"
    },
    file: src,
    image: posterImage,
    width: "100%",
    aspectratio: "16:9",
    autostart: true,
    repeat: true,
    mute: true
  });
}

/* to hide share panel and remove actice state of share icon when scolled out of desired folds */
function sharePanelActiveScroll() {
  var shareBtnParent = document.querySelector(".shareBtnParent");
  var sharePanelImg = document.querySelectorAll(".shareBtnParent .stIcons");
  shareBtnParent.classList.remove("activeShare");
  if (sharePanelImg[0].style.display == "none") {
    sharePanelImg[0].style.display = "block";
    sharePanelImg[1].style.display = "none";
  }
}
/*handling alignment of extrabuttons if the count is 4*/
var extraBtns = document.querySelectorAll(".buttons .extrabutton");
if (window.innerWidth < 575) {
  if (extraBtns.length == 4) {
    for (var i = 0; i < extraBtns.length; i++) {
      extraBtns[i].style.marginRight = "2rem";
    }
  }
}

// this for cookie popup and setting local storage in case user accepts
if (localStorage.getItem("firstTime") == null) {
  window.addEventListener("load", openModal);
  var overlay = document.getElementsByClassName("overlayPop");

  function openModal() {
    if (overlay.length != 0) {
      setTimeout(function () {
        overlay[0].classList.remove("hide");
      }, 3000);
    }
  }
}
var accept = document.getElementsByClassName("accept");
if (accept.length > 0) {
  accept[0].addEventListener("click", setCookie);
}

function setCookie() {
  localStorage.setItem("firstTime", "done");
}

var closeCookieModal = document.getElementsByClassName("closeCookieModal");
for (var i = 0; i < closeCookieModal.length; i++) {
  closeCookieModal[i].addEventListener("click", closeModal);
}

function closeModal() {
  overlay[0].classList.add("hide");
  document.body.style.overflow = "auto";
}

//facts cards 
var factsParent = document.querySelectorAll(".facts");
var colors = ["#1BA2F5", "#076AA6", "#043A5B"];
var colorHeri = ["#285874", "#333333", "#307FE2"];
var urlFacts = "/bin/factDataServlet?";
var sheetName = "";
var excelPath = "";
var URLCommon = urlFacts + "excelPath=" + excelPath + "&excelSheet=" + sheetName;
var elemColor;

if (factsParent) {
  for (var i = 0; i < factsParent.length; i++) {
    firstLoad(i, factsParent[i]);
  }
}

/*setting data from backend to individual card with their data appending
 individual sheet name and excel sheet path onload*/
function firstLoad(factsParentIndex, factCard) {
  //background color card
  if (factCard.children[0].children[2].children[2] != undefined) {
    sheetName = factCard.children[0].children[2].children[2].innerHTML;
    excelPath = factCard.children[0].children[2].children[3].innerHTML;
  } else {
    //background image card
    sheetName = factCard.children[2].children[2].children[2].innerHTML;
    excelPath = factCard.children[2].children[2].children[3].innerHTML;
  }

  URLCommon = urlFacts + "excelPath=" + excelPath + "&excelSheet=" + sheetName;

  var xhttp = new XMLHttpRequest();
  xhttp.open("GET", URLCommon, true);
  xhttp.onload = function () { //setting data to html on first time load
    if (xhttp.readyState == 4 && xhttp.status === 200) {
      var elemHeriToChange = factsParent[factsParentIndex].querySelectorAll(".heritageBG .titleContent");
      var elementToChange = factsParent[factsParentIndex].querySelectorAll(".changeBG .titleContent");
      var facts = factsParent[factsParentIndex].querySelectorAll(".facts .ymlFeedArticleW");
      var factsLabel = factsParent[factsParentIndex].querySelectorAll(".facts .urlLabel");
      var nextFeed = factsParent[factsParentIndex].querySelectorAll('.nextFeed');
      var data = xhttp.response;
      var res = JSON.parse(data);
      if (facts) {
        for (var i = 0; i < elemHeriToChange.length; i++) {
          elemHeriToChange[i].style.backgroundColor = colorHeri[0];
        }
        for (var i = 0; i < elementToChange.length; i++) {
          elementToChange[i].style.backgroundColor = colors[0];
        }
        for (var i = 0; i < nextFeed.length; i++) {
          facts[i].innerHTML = res.response.msg;
          factsLabel[i].innerHTML = res.response.urlLabel;
          factsLabel[i].setAttribute("href", res.response.url);
          if (res.response.url == "NA" || res.response.url == "na") { //if url is NA/na in excel
            factsLabel[i].style.display = "none";
          } else {
            factsLabel[i].style.display = "inline-block";
          }
          //handling hover effect in mobiles and ipad
          if (window.innerWidth < 992) {
            for (var j = 0; j < factsLabel.length; j++) {
              if (factsLabel.length != 0) {
                factsLabel[j].addEventListener("touchstart", function () {
                  this.style.cssText = "opacity:0.5";

                });
                factsLabel[j].addEventListener("touchend", function () {
                  this.style.cssText = "opacity:1 !important";
                });
              }
            }
          }
          nextFeed[i].setAttribute("refreshIndex", 0);
          nextFeed[i].addEventListener("click", refreshTextImg);
        }
      }
    } else {
      console.log('Request failed.  Returned status of ' + xhttp.status);
    }
  };
  xhttp.send();
}

/*changing data with individual click refresh button click*/
function refreshTextImg(e) {
  e.preventDefault();
  var elem = this;
  var factsElem = elem.previousElementSibling.children[0];
  var factsURLElem = elem.previousElementSibling.children[1];
  var lineElem = elem.previousElementSibling.children[4];
  elemColor = elem.parentElement;

  var refreshIndex = parseInt(elem.getAttribute("refreshindex")); //for color
  var refeshIndexPlus = ++refreshIndex;

  refeshIndexPlus %= colors.length;
  refeshIndexPlus %= colorHeri.length;
  elem.setAttribute("refreshindex", refeshIndexPlus);

  sheetName = elem.parentElement.children[2].children[2].innerHTML;
  excelPath = elem.parentElement.children[2].children[3].innerHTML;

  var xhttpFacts = new XMLHttpRequest();
  var newUrl = urlFacts + "excelPath=" + excelPath + "&excelSheet=" + sheetName;

  xhttpFacts.onreadystatechange = function () { //change data on individual card click
    if (xhttpFacts.readyState == 4 && xhttpFacts.status === 200) {
      //if card with changing background color, change color from array
      if (elemColor.parentElement.classList.contains("changeBG")) {
        elemColor.style.backgroundColor = colors[refeshIndexPlus];
      }
      if (elemColor.parentElement.classList.contains("heritageBG")) {
        elemColor.style.backgroundColor = colorHeri[refeshIndexPlus];
      }
      factsElem.style.opacity = 0;
      factsURLElem.style.opacity = 0;
      if (factsElem.classList.contains("fadeInText")) {
        factsElem.classList.remove("fadeInText");
        factsElem.style.opacity = 0;
        factsURLElem.classList.remove("fadeInText");
        factsURLElem.style.opacity = 0;
      }
      if (lineElem.classList.contains("comeInBorder")) {
        lineElem.classList.remove("comeInBorder");
        lineElem.style.opacity = 0;
      }

      //appending data from backend to html
      var jsonParse = JSON.parse(xhttpFacts.response);
      factsElem.innerHTML = jsonParse.response.msg;
      factsURLElem.innerHTML = jsonParse.response.urlLabel;
      factsURLElem.setAttribute("href", jsonParse.response.url);
      if (jsonParse.response.url == "NA" || jsonParse.response.url == "na") { //if url is NA/na in excel
        factsURLElem.style.display = "none";
      } else {
        factsURLElem.style.display = "inline-block";
      }
      addOpacityText(factsElem);
      addBorderLine(factsElem);
    }
  }
  xhttpFacts.open("GET", newUrl, true);
  xhttpFacts.send();
}

/*adding animation on text*/
function addOpacityText(a) {
  setTimeout(function () {
    a.classList.add("fadeInText");
    a.style.opacity = 1;
    a.nextElementSibling.classList.add("fadeInText");
    a.nextElementSibling.style.opacity = 1;
  }, 200);
}

/*adding animation on line*/
function addBorderLine(b) {
  setTimeout(function () {
    b.parentElement.children[4].classList.add("comeInBorder");
    b.parentElement.children[4].style.opacity = 1;
  }, 100);
}

//banner video autoplay in case it doesnot work
// window.onload = function () {
//   var bannerVideo = document.getElementById("bannerVideo");
//   if (bannerVideo)
//     bannerVideo.play();
// }

//this for styling if main para contains digits/decimals/single quote/double quotes at start
var mainpara = document.getElementsByClassName("mainPara");
if (mainpara.length != 0) {
  var splitText = mainpara[0].innerHTML.match(/^(\S+)\s(.*)/).slice(1); //split innertext into eg. "11", "abc def ghf"
  if ((hasDblQuote(splitText[0]) == true) && hasNumber(splitText[0]) == true) {
    var splitAfterDbl = splitText[0].split(/["\“\""]+/);
    mainpara[0].classList.add("mainActive");
    mainpara[0].classList.remove("mainPara");
    if (splitAfterDbl[0] == "<i>") {
      document.getElementsByClassName("mainActive")[0].innerHTML = `<span style="float: left;">` + "“" + `</span><span style="float: left;font-size: 72px;line-height: 58px;padding-top: 4px;padding-right: 8px;"><i>` + splitAfterDbl[1] +
        `</span>` + splitText[1];
      if (window.innerWidth < 575) {
        document.getElementsByClassName("mainActive")[0].innerHTML = `<span style="float: left;">` + "“" + `</span><span style="float: left;font-size: 52px;line-height: 40px;padding-top: 4px;padding-right: 8px; font-weight: normal"><i>` + splitAfterDbl[1] +
          `</span>` + splitText[1];
      } else if (window.innerWidth > 767 && window.innerWidth < 991) {
        document.getElementsByClassName("mainActive")[0].innerHTML = `<span style="float: left;">` + "“" + `</span><span style="float: left;font-size: 70px;line-height: 55px;padding-top: 4px;padding-right: 8px; font-weight: normal"><i>` + splitAfterDbl[1] +
          `</span>` + splitText[1];
      }
    } else {
      document.getElementsByClassName("mainActive")[0].innerHTML = `<span style="float: left;">` + "“" + `</span><span style="float: left;font-size: 72px;line-height: 58px;padding-top: 4px;padding-right: 8px;">` + splitAfterDbl[1] +
        `</span>` + splitText[1];
      if (window.innerWidth < 575) {
        document.getElementsByClassName("mainActive")[0].innerHTML = `<span style="float: left;">` + "“" + `</span><span style="float: left;font-size: 52px;line-height: 40px;padding-top: 4px;padding-right: 8px; font-weight: normal">` + splitAfterDbl[1] +
          `</span>` + splitText[1];
      } else if (window.innerWidth > 767 && window.innerWidth < 991) {
        document.getElementsByClassName("mainActive")[0].innerHTML = `<span style="float: left;">` + "“" + `</span><span style="float: left;font-size: 70px;line-height: 55px;padding-top: 4px;padding-right: 8px; font-weight: normal">` + splitAfterDbl[1] +
          `</span>` + splitText[1];
      }
    }

  } else if ((hasSingleQuote(splitText[0]) == true) && hasNumber(splitText[0]) == true) {
    var splitAfterDbl = splitText[0].split(/["\‘\'"]+/);
    mainpara[0].classList.add("mainActive");
    mainpara[0].classList.remove("mainPara");
    if (splitAfterDbl[0] == "<i>") {
      document.getElementsByClassName("mainActive")[0].innerHTML = `<span style="float: left;">` + "‘" + `</span><span style="float: left;font-size: 72px;line-height: 58px;padding-top: 4px;padding-right: 8px;"><i>` + splitAfterDbl[1] +
        `</span>` + splitText[1];
      if (window.innerWidth < 575) {
        document.getElementsByClassName("mainActive")[0].innerHTML = `<span style="float: left;">` + "‘" + `</span><span style="float: left;font-size: 52px;line-height: 40px;padding-top: 4px;padding-right: 8px; font-weight: normal"><i>` + splitAfterDbl[1] +
          `</span>` + splitText[1];
      } else if (window.innerWidth > 767 && window.innerWidth < 991) {
        document.getElementsByClassName("mainActive")[0].innerHTML = `<span style="float: left;">` + "‘" + `</span><span style="float: left;font-size: 70px;line-height: 55px;padding-top: 4px;padding-right: 8px; font-weight: normal"><i>` + splitAfterDbl[1] +
          `</span>` + splitText[1];
      }
    } else {
      document.getElementsByClassName("mainActive")[0].innerHTML = `<span style="float: left;">` + "‘" + `</span><span style="float: left;font-size:72px;line-height: 58px;padding-top: 4px;padding-right: 8px;">` + splitAfterDbl[1] +
        `</span>` + splitText[1];
      if (window.innerWidth < 575) {
        document.getElementsByClassName("mainActive")[0].innerHTML = `<span style="float: left;">` + "‘" + `</span><span style="float: left;font-size: 52px;line-height: 40px;padding-top: 4px;padding-right: 8px; font-weight: normal">` + splitAfterDbl[1] +
          `</span>` + splitText[1];
      } else if (window.innerWidth > 767 && window.innerWidth < 991) {
        document.getElementsByClassName("mainActive")[0].innerHTML = `<span style="float: left;">` + "‘" + `</span><span style="float: left;font-size: 70px;line-height: 55px;padding-top: 4px;padding-right: 8px; font-weight: normal">` + splitAfterDbl[1] +
          `</span>` + splitText[1];
      }
    }
  } else if (hasDblQuote(splitText[0]) == true) {
    var splitAfterDbl = splitText[0].split(/["\“\""]+/); //split into double quotes and text eg. "“" , "abc"
    if (splitAfterDbl[0] == "<i>") {
      document.getElementsByClassName("mainPara")[0].innerHTML = `<span style="float: left;">` + "“" + `</span><span style="display: block;"><i>` + splitAfterDbl[1] + " " + splitText[1] + `</span>`;
    } else
      document.getElementsByClassName("mainPara")[0].innerHTML = `<span style="float: left;">` + "“" + `</span><span style="display: block;">` + splitAfterDbl[1] + " " + splitText[1] + `</span>`;
  } else if (hasSingleQuote(splitText[0]) == true) {
    var splitAfterDbl = splitText[0].split(/["\‘\'"]+/); //split into single quote and text eg. "‘" , "abc"
    if (splitAfterDbl[0] == "<i>") {
      document.getElementsByClassName("mainPara")[0].innerHTML = `<span style="float: left;">` + "‘" + `</span><span style="display: block;"><i>` + splitAfterDbl[1] + " " + splitText[1] + `</span>`;
    } else
      document.getElementsByClassName("mainPara")[0].innerHTML = `<span style="float: left;">` + "‘" + `</span><span style="display: block;">` + splitAfterDbl[1] + " " + splitText[1] + `</span>`;
  } else if (hasNumber(splitText[0]) == true) {
    mainpara[0].classList.add("mainActive");
    mainpara[0].classList.remove("mainPara");
    document.getElementsByClassName("mainActive")[0].innerHTML = `<span style="float: left;font-size: 72px;line-height: 58px;padding-top: 4px;padding-right: 8px;">` + splitText[0] +
      `</span>` + splitText[1];
    if (window.innerWidth < 575) {
      document.getElementsByClassName("mainActive")[0].innerHTML = `<span style="float: left;font-size: 52px;line-height: 40px;padding-top: 4px;padding-right: 8px; font-weight: normal;">` + splitText[0] +
        `</span>` + splitText[1];
    } else if (window.innerWidth > 767 && window.innerWidth < 991) {
      document.getElementsByClassName("mainActive")[0].innerHTML = `<span style="float: left;font-size: 70px;line-height: 55px;padding-top: 4px;padding-right: 8px; font-weight: normal;">` + splitText[0] +
        `</span>` + splitText[1];
    }
  }
}

function hasNumber(myString) {
  return /\d*\.?\d+$/.test(myString);
}

function hasDblQuote(myString) {
  return /[“||"]/.test(myString);
}

function hasSingleQuote(myString) {
  return /['||‘]/.test(myString);
}

var slideCount, slide, indicatorWidth;
slide = document.getElementsByClassName("homeBannerSlide");
if (slide.length > 0) {
  for (let n = 0; n < slide.length; n++) {
    slideCount = slide[n].getElementsByTagName("li").length;
    indicatorWidth = 100 / slideCount;
    for (let i = 0; i < slideCount; i++) {
      slide[0].getElementsByTagName("li")[i].style.width = indicatorWidth + "%";
    }
  }
}
//handling of parallax share icon
function shareIconHandler(){
    

        var parallaxControls = document.querySelector('.parallaxControlsStory').getBoundingClientRect();
        var parallX = document.querySelector('.parallaxControlsStory');
        var articleSectionOld = [...document.querySelectorAll('.paraDiv,.paraIconDiv, .richtext')].filter((x) => { return (x.scrollHeight > (maxHeightParallax * 1.7)) }).filter(x=>!x.classList.contains("parallaxControlsStory")).map(x => x.getBoundingClientRect());
        var articleSection = [];

        var shareOptions = document.querySelector('.shareOptions ');
        var largeImg = document.querySelectorAll(".largeImg");
        var fullImg = document.querySelectorAll(".fullImg");
        var dataBoxRow = document.querySelectorAll(".dataBoxRow");

        if (parallX.scrollHeight > maxHeightParallax){
            maxHeightParallax = parallX.scrollHeight;
        }
		 for (let i = 0;i < articleSectionOld.length; i++){
            articleSection.push({"top": articleSectionOld[i].top,"bottom": articleSectionOld[i].bottom});
            for (let j = 0; j < articleSectionOld.length; j++){
                if (articleSectionOld[i].bottom >= articleSectionOld[j].top){
                    if (i != j){
                        articleSection.push({"top": articleSectionOld[i].top,"bottom": articleSectionOld[j].bottom})
                    }
                }
            }
        }

        let articleCurrent = false;
        for (let article of articleSection) {
            if ((article.top <= parallaxControls.top + (maxHeightParallax/4)) && (article.bottom >= parallaxControls.top + maxHeightParallax)) {
                parallX.classList.remove('notActive');
                articleCurrent = true;
				parallX.classList.add('inView');
            }
        }

        if (!articleCurrent) {
            parallX.classList.add('notActive');
            shareOptions.classList.remove('active');
            sharePanelActiveScroll();
        }

    //Code to hide side icon for expanded/large images
    for(let i = 0; i<largeImg.length;i++){
      if((largeImg[i].getBoundingClientRect().top<=parallaxControls.top + (maxHeightParallax )) && !(largeImg[i].getBoundingClientRect().bottom <parallaxControls.top) ){
          parallX.classList.add('notActive');
          shareOptions.classList.remove('active');
          sharePanelActiveScroll();
        }
      }
      //Code to hide side icon for full width images
    for(let i = 0; i<fullImg.length;i++){
      if((fullImg[i].getBoundingClientRect().top<=parallaxControls.top + (maxHeightParallax )) && !(fullImg[i].getBoundingClientRect().bottom <parallaxControls.top) ){
          parallX.classList.add('notActive');
          shareOptions.classList.remove('active');
          sharePanelActiveScroll();
        }
      }
      	//code for hide side icon for data box row 
    if(window.innerWidth > 991 && window.innerWidth <= 1200){
      for(let i = 0; i<dataBoxRow.length;i++){
          if((dataBoxRow[i].getBoundingClientRect().top<=parallaxControls.top + (maxHeightParallax )) && !(dataBoxRow[i].getBoundingClientRect().bottom <parallaxControls.top) ){
              parallX.classList.add('notActive');
              shareOptions.classList.remove('active');
              sharePanelActiveScroll();
          }
      }
  }
}

//this is for health page community full card clickable
function CardClickable(event){

    event.stopImmediatePropagation();
var info = event.currentTarget.querySelector('.infoContent a').getAttribute("href");
var target=event.currentTarget.querySelector('.infoContent a').getAttribute("target")
window.open(info,target);
}  

var emphasis = document.querySelectorAll(".emphasisBox");
for (var i = 0; i < emphasis.length; i++) {
  var currentEmphasisBox = emphasis[i].parentElement;
  while(currentEmphasisBox){
      if(currentEmphasisBox.tagName == "P" || currentEmphasisBox.tagName == "UL"){
          currentEmphasisBox.classList.add(...emphasis[i].classList);
          emphasis[i].classList = [];
          break;
      }
      currentEmphasisBox = currentEmphasisBox.parentElement;
  }
}
var emphasis_doublecol_para = document.querySelectorAll(".emphasis_doublecol_para");
for (var i = 0; i < emphasis_doublecol_para.length; i++) {
  var currentEmphasis = emphasis_doublecol_para[i].parentElement;
  while(currentEmphasis){
      if(currentEmphasis.tagName == "P" || currentEmphasis.tagName == "UL"){
          currentEmphasis.classList.add(...emphasis_doublecol_para[i].classList);
          emphasis_doublecol_para[i].classList = [];
          break;
      }    
      currentEmphasis = currentEmphasis.parentElement;
  }
}
var blueEmphasis = document.querySelectorAll(".blueEmphasis");
var greyEmphasis = document.querySelectorAll(".greyEmphasis");
var orangeEmphasis = document.querySelectorAll(".orangeEmphasis");
for (var i = 0; i < blueEmphasis.length; i++){   
  if (blueEmphasis[i].nextElementSibling && blueEmphasis[i].nextElementSibling.classList.contains("blueEmphasis")){
    if(!blueEmphasis[i].nextElementSibling.classList.contains("emphasis_doublecol_para")){
   blueEmphasis[i].classList.add("noBottomSpace");
  }
   if (blueEmphasis[i].getElementsByClassName("emphasisHeading").length > 0){
       blueEmphasis[i].nextElementSibling.setAttribute('style', 'padding-top:0px !important');
    }
  }
  else if (blueEmphasis[i].nextElementSibling && blueEmphasis[i].nextElementSibling.children[0] && blueEmphasis[i].nextElementSibling.children[0].classList.contains("subHeadingsHok")){
   blueEmphasis[i].classList.add("lessBottomSpace");
  }

}
for (var i = 0; i < greyEmphasis.length; i++){   
   if (greyEmphasis[i].nextElementSibling  && greyEmphasis[i].nextElementSibling.classList.contains("greyEmphasis")){
    if(!greyEmphasis[i].nextElementSibling.classList.contains("emphasis_doublecol_para")){
       greyEmphasis[i].classList.add("noBottomSpace");
      }
       if (greyEmphasis[i].getElementsByClassName("emphasisHeading").length > 0){
           greyEmphasis[i].nextElementSibling.setAttribute('style', 'padding-top:0px !important');
       }
   }
  else if (greyEmphasis[i].nextElementSibling && greyEmphasis[i].nextElementSibling.children[0] && greyEmphasis[i].nextElementSibling.children[0].classList.contains("subHeadingsHok")){
   greyEmphasis[i].classList.add("lessBottomSpace");
  }
}
for (var i = 0; i < orangeEmphasis.length; i++){   
   if (orangeEmphasis[i].nextElementSibling && orangeEmphasis[i].nextElementSibling.classList.contains("orangeEmphasis")){
    if(!orangeEmphasis[i].nextElementSibling.classList.contains("emphasis_doublecol_para")){
       orangeEmphasis[i].classList.add("noBottomSpace");
      }
       if (orangeEmphasis[i].getElementsByClassName("emphasisHeading").length > 0){
           orangeEmphasis[i].nextElementSibling.setAttribute('style', 'padding-top:0px !important');
       }
   }
  else if (orangeEmphasis[i].nextElementSibling && orangeEmphasis[i].nextElementSibling.children[0] && orangeEmphasis[i].nextElementSibling.children[0].classList.contains("subHeadingsHok")){
   orangeEmphasis[i].classList.add("lessBottomSpace");
}
}

var ImageEmphasis = document.querySelectorAll(".ImageEmphasis");
for (var i = 0; i < ImageEmphasis.length; i++){
if (ImageEmphasis[i].nextElementSibling  && ImageEmphasis[i].nextElementSibling.classList.contains("emphasisBox")){
        ImageEmphasis[i].classList.add(...ImageEmphasis[i].nextElementSibling.classList,"noBottomSpace");
        if(ImageEmphasis[i].previousElementSibling && ImageEmphasis[i].previousElementSibling.classList.contains("emphasisBox") && ImageEmphasis[i].previousElementSibling.classList.contains("noBottomSpace")){
      ImageEmphasis[i].previousElementSibling.classList.remove("noBottomSpace")
        }
    }
}
var emphasis = document.querySelectorAll(".emphasisBox");
var emphasis_doublecol_para = document.querySelectorAll(".emphasis_doublecol_para");
for (var i = 0; i < emphasis.length; i++){
    if(emphasis[i].classList.contains('blueEmphasis') &&  emphasis[i].classList.contains("emphasis_doublecol_para") && !emphasis[i].classList.contains("hockeyImg") && !emphasis[i].getElementsByClassName("emphasisHeading").length > 0){
            var blueNewDiv1;
            var blueNewDiv2;
            if(emphasis[i].previousElementSibling){
                blueNewDiv1 = emphasis[i].previousElementSibling;
            }else if(!emphasis[i].previousElementSibling && emphasis[i].parentElement){
                blueNewDiv2 = emphasis[i].parentElement;
            }
            var blueEmphasisPara = [emphasis[i]]; 
            var blueCurrentEmphsis = emphasis[i].nextElementSibling;
            while(blueCurrentEmphsis){
                if(blueCurrentEmphsis.classList.contains("emphasis_doublecol_para") && blueCurrentEmphsis.classList.contains('blueEmphasis') && !blueCurrentEmphsis.classList.contains("hockeyImg") && !blueCurrentEmphsis.getElementsByClassName("emphasisHeading").length > 0){
                    blueEmphasisPara.push(blueCurrentEmphsis);
                    blueCurrentEmphsis = blueCurrentEmphsis.nextElementSibling;
                }else{
                    break;
                }    
            }
            var  twoColDivBlue = document.createElement('div');
            twoColDivBlue.classList.add("emphasis2ColP","emphasisBox","blueEmphasis");
            blueEmphasisPara.forEach(b => {
                twoColDivBlue.appendChild(b);
                b.classList = [];
                b.classList.add("doubleParagraph");
            });
            if(blueNewDiv1){
                blueNewDiv1.insertAdjacentElement('afterend', twoColDivBlue);
                blueNewDiv1="";
            }else if(blueNewDiv2){
                blueNewDiv2.insertBefore(twoColDivBlue, blueNewDiv2.firstChild);
                blueNewDiv2="";
            }
             //
        if(twoColDivBlue.previousElementSibling && twoColDivBlue.previousElementSibling.classList.contains("blueEmphasis") && twoColDivBlue.previousElementSibling.classList.contains("emphasis_doublecol_para") && !twoColDivBlue.previousElementSibling.classList.contains("hockeyImg")){
            twoColDivBlue.previousElementSibling.classList.add("noBottomSpace");
            twoColDivBlue.setAttribute('style', 'padding-top:0px !important');
        }
        if(twoColDivBlue.nextElementSibling && twoColDivBlue.nextElementSibling.classList.contains("blueEmphasis") && twoColDivBlue.nextElementSibling.classList.contains("emphasis_doublecol_para") && !twoColDivBlue.nextElementSibling.classList.contains("hockeyImg")){
            twoColDivBlue.classList.add('noBottomSpace');
                    } 
    }
    if(emphasis[i].classList.contains('greyEmphasis') &&  emphasis[i].classList.contains("emphasis_doublecol_para") && !emphasis[i].classList.contains("hockeyImg") && !emphasis[i].getElementsByClassName("emphasisHeading").length > 0){
            var greyNewDiv1;
            var greyNewDiv2;
            if(emphasis[i].previousElementSibling){
                greyNewDiv1 = emphasis[i].previousElementSibling;
            }else if(!emphasis[i].previousElementSibling && emphasis[i].parentElement){
                greyNewDiv2 = emphasis[i].parentElement;
            }
            var greyEmphasisPara = [emphasis[i]];   
            var greyCurrentEmphsis = emphasis[i].nextElementSibling;
            while(greyCurrentEmphsis){
                if(greyCurrentEmphsis.classList.contains("emphasis_doublecol_para") && greyCurrentEmphsis.classList.contains('greyEmphasis') && !greyCurrentEmphsis.classList.contains("hockeyImg") && !greyCurrentEmphsis.getElementsByClassName("emphasisHeading").length > 0){
                    greyEmphasisPara.push(greyCurrentEmphsis);
                    greyCurrentEmphsis = greyCurrentEmphsis.nextElementSibling;
                }else{
                    break;
                }    
            }
            var  twoColDivgrey = document.createElement('div');
            twoColDivgrey.classList.add("emphasis2ColP","emphasisBox","greyEmphasis");
            greyEmphasisPara.forEach(g => {
                twoColDivgrey.appendChild(g);
                g.classList = [];
                g.classList.add("doubleParagraph");
            });
            if(greyNewDiv1){
                greyNewDiv1.insertAdjacentElement('afterend', twoColDivgrey);
                greyNewDiv1="";
            }else if(greyNewDiv2){
                greyNewDiv2.insertBefore(twoColDivgrey, greyNewDiv2.firstChild);
                greyNewDiv2="";
            }
        //
        if(twoColDivgrey.previousElementSibling && twoColDivgrey.previousElementSibling.classList.contains("greyEmphasis") && twoColDivgrey.previousElementSibling.classList.contains("emphasis_doublecol_para") && !twoColDivgrey.previousElementSibling.classList.contains("hockeyImg")){
            twoColDivgrey.previousElementSibling.classList.add("noBottomSpace");
            twoColDivgrey.setAttribute('style', 'padding-top:0px !important');
        }
        if(twoColDivgrey.nextElementSibling && twoColDivgrey.nextElementSibling.classList.contains("greyEmphasis") && twoColDivgrey.nextElementSibling.classList.contains("emphasis_doublecol_para") && !twoColDivgrey.nextElementSibling.classList.contains("hockeyImg")){
            twoColDivgrey.classList.add('noBottomSpace');
                    }
    }
    if(emphasis[i].classList.contains('orangeEmphasis') &&  emphasis[i].classList.contains("emphasis_doublecol_para") && !emphasis[i].classList.contains("hockeyImg") && !emphasis[i].getElementsByClassName("emphasisHeading").length > 0){
            var orangeNewDiv1;
            var orangeNewDiv2;
            if(emphasis[i].previousElementSibling){
                orangeNewDiv1 = emphasis[i].previousElementSibling;
            }else if(!emphasis[i].previousElementSibling && emphasis[i].parentElement){
                orangeNewDiv2 = emphasis[i].parentElement;
            }
            var orangeEmphasisPara = [emphasis[i]];   
            var orangeCurrentEmphsis = emphasis[i].nextElementSibling;
            while(orangeCurrentEmphsis){
                if(orangeCurrentEmphsis.classList.contains("emphasis_doublecol_para") && orangeCurrentEmphsis.classList.contains('orangeEmphasis') && !orangeCurrentEmphsis.classList.contains("hockeyImg") && !orangeCurrentEmphsis.getElementsByClassName("emphasisHeading").length > 0){
                    orangeEmphasisPara.push(orangeCurrentEmphsis);
                    orangeCurrentEmphsis = orangeCurrentEmphsis.nextElementSibling;
                }else{
                    break;
                }    
            }
            var  twoColDivorange = document.createElement('div');
            twoColDivorange.classList.add("emphasis2ColP","emphasisBox","orangeEmphasis");
            orangeEmphasisPara.forEach(o => {
                twoColDivorange.appendChild(o);
                o.classList = [];
                o.classList.add("doubleParagraph");
            });
            if(orangeNewDiv1){
                orangeNewDiv1.insertAdjacentElement('afterend', twoColDivorange);
                orangeNewDiv1="";
            }else if(orangeNewDiv2){
                orangeNewDiv2.insertBefore(twoColDivorange, orangeNewDiv2.firstChild);
                orangeNewDiv2="";
            }
        //
        if(twoColDivorange.previousElementSibling && twoColDivorange.previousElementSibling.classList.contains("orangeEmphasis") && twoColDivorange.previousElementSibling.classList.contains("emphasis_doublecol_para") && !twoColDivorange.previousElementSibling.classList.contains("hockeyImg")){
            twoColDivorange.previousElementSibling.classList.add("noBottomSpace");
            twoColDivorange.setAttribute('style', 'padding-top:0px !important');
        }
        if(twoColDivorange.nextElementSibling && twoColDivorange.nextElementSibling.classList.contains("orangeEmphasis") && twoColDivorange.nextElementSibling.classList.contains("emphasis_doublecol_para") && !twoColDivorange.nextElementSibling.classList.contains("hockeyImg")){
          twoColDivorange.classList.add('noBottomSpace');
        }    
    }
}
var ymlCardVideoTag = document.querySelectorAll(".ymlCardVideo");

if(ymlCardVideoTag){
var ymlVideo1 = document.getElementById('ymlVideo1');//video1
var ymlVideo2 = document.getElementById('ymlVideo2');//video2
var ymlVideoCard1 = document.querySelector('.ymlVideoCard1');//card1
var ymlVideoCard2 = document.querySelector('.ymlVideoCard2');//card2
var isCard1Hovered = false;
var isCard2Hovered = false;
var isCard1Visible = false;
var isCard2Visible = false;
var isCard1VideoPlaying = false;
var isCard2VideoPlaying = false;
var hasVideo1Ended = false;
var hasVideo2Ended = false;
var isScrolled = false;

function isFullyVisibleCard(element){
    var vid = element.getBoundingClientRect();
    return vid.top >= 0 && vid.bottom <= window.innerHeight;
}

function playVideo(video){
    if(video.paused === true){
        try{
            video.play().catch(function(error){
            })
        } catch(error){
        }
    }
}
function pauseVideo(video){
    video.pause();
}

function handleCard1Hover(){
    if(ymlVideo1){
        if(hasVideo1Ended){
            isCard1Hovered = true;
            if(isCard1Hovered && isFullyVisibleCard(ymlVideoCard1) && ymlVideo1.paused === true){
            playVideo(ymlVideo1);
        }
        }
    }
}
function handleCard1HoverOut(){
    if(ymlVideo1){
        if(hasVideo1Ended){
            isCard1Hovered = false;
            if(ymlVideo1.paused === false){
            pauseVideo(ymlVideo1);
        }
        }
    }
}

function handleCard2Hover(){
    if(ymlVideo2){
        if(hasVideo2Ended){
            isCard2Hovered = true;
            if(isCard2Hovered && isFullyVisibleCard(ymlVideoCard2) && ymlVideo2.paused === true){
                playVideo(ymlVideo2);
            }
        }
    }
}
function handleCard2HoverOut(){
    if(ymlVideo2){
        if(hasVideo2Ended){
            isCard2Hovered = false;
            if(ymlVideo2.paused === false){
                pauseVideo(ymlVideo2);
            }
        }
    }
}

function handleCard1VideoEnd(){
    hasVideo1Ended = true;
    pauseVideo(ymlVideo1);
    if(ymlVideo1){
        ymlVideo1.loop = true;
    }
}
function handleCard2VideoEnd(){
    hasVideo2Ended = true;
    pauseVideo(ymlVideo2);
    if(ymlVideo2){
        ymlVideo2.loop = true;
    }
}
function checkVisibility(){
    if(document.visibilityState === "hidden"){
        if(ymlVideo1){
            isCard1Hovered = false;
            pauseVideo(ymlVideo1);
        };
        if(ymlVideo2){
            isCard2Hovered = false;
             pauseVideo(ymlVideo2);
        };
    } 
    if(document.visibilityState === "visible"){
        if(ymlVideo1){
            if((isCard1Hovered && isFullyVisibleCard(ymlVideoCard1) && hasVideo1Ended) || (isFullyVisibleCard(ymlVideoCard1) && !hasVideo1Ended)){
                isCard1Hovered = false;
                playVideo(ymlVideo1);
            }
        } 
        if(ymlVideo2){   
            if((isCard2Hovered && isFullyVisibleCard(ymlVideoCard2) && hasVideo2Ended) || (isFullyVisibleCard(ymlVideoCard2) && !hasVideo2Ended)){
                isCard2Hovered = false;
                playVideo(ymlVideo2);
            }
        }    
    }
}
 
if(ymlVideo1){
    ymlVideo1.addEventListener('ended',function() {
        handleCard1VideoEnd();
    });
}
if(ymlVideo2){
    ymlVideo2.addEventListener('ended',function(){
        handleCard2VideoEnd();
    });
}


window.addEventListener("DOMContentLoaded", function(){
    ymlCardVideoload();
    playPauseVideoVisibility();
    windowSizeForiOS();
})

window.addEventListener('scroll',function(){
    playPauseVideoVisibility();
    isScrollHover();
});

window.addEventListener("focus", function () {
    playPauseVideoVisibility(); 
    checkVisibility(); 
})

window.addEventListener("blur", function () {
    if(ymlVideo1){pauseVideo(ymlVideo1)};
    if(ymlVideo2){ pauseVideo(ymlVideo2)};
});

if(ymlVideo1){
    ymlVideoCard1.parentElement.parentElement.addEventListener('mouseenter',handleCard1Hover);
    ymlVideoCard1.parentElement.parentElement.addEventListener('mouseleave',handleCard1HoverOut);
}
if(ymlVideo2){
    ymlVideoCard2.parentElement.parentElement.addEventListener('mouseenter',handleCard2Hover);
    ymlVideoCard2.parentElement.parentElement.addEventListener('mouseleave',handleCard2HoverOut);
}

window.addEventListener('visibilitychange',function(){
    checkVisibility();
});



function ymlCardVideoload(){
    for (var i = 0; i < ymlCardVideoTag.length; i++) {
        if(!(ymlCardVideoTag[i].children[0].getAttribute('src').trim() == "")){
            ymlCardVideoTag[i].parentElement.children[0].lastElementChild.classList.add("noDisplay")
            ymlCardVideoTag[i].setAttribute("poster",ymlCardVideoTag[i].parentElement.children[0].lastElementChild.src);
        }else{
            ymlCardVideoTag[i].remove();
        }
    } 
}
window.onpageshow = function(){
    setTimeout(() => {
    playPauseVideoVisibility();
    }, 500);
}
function playPauseVideoVisibility(){
    if(ymlVideo1){
        if(isFullyVisibleCard(ymlVideoCard1) && !hasVideo1Ended){
            isCard1Visible = true;
            if(!isCard1VideoPlaying){
                playVideo(ymlVideo1);
                isCard1VideoPlaying = true;
            }
        }
        else {
            if(isCard1Visible && !hasVideo1Ended){
                pauseVideo(ymlVideo1)
                isCard1VideoPlaying = false;
            }else{
                isCard1Visible = false;
            }

        }
    }
    if(ymlVideo2){
        if(isFullyVisibleCard(ymlVideoCard2) && !hasVideo2Ended){
            isCard2Visible = true;
            if(!isCard2VideoPlaying){
                playVideo(ymlVideo2)
                isCard2VideoPlaying = true;
            }
        }
        else {
            if(isCard2Visible && !hasVideo2Ended){
                pauseVideo(ymlVideo2);
                isCard2VideoPlaying = false;
            }else{
                isCard2Visible = false;
            }

        }
    }
}

function isScrollHover(){
    isScrolled= true;
    if(ymlVideo1){
        if(isScrolled && isCard1Hovered && isFullyVisibleCard(ymlVideoCard1)){
            playVideo(ymlVideo1);
        }else if(isScrolled && isCard1Hovered && !isFullyVisibleCard(ymlVideoCard1)){
            pauseVideo(ymlVideo1)
        }
    }
    if(ymlVideo2){
        if(isScrolled && isCard2Hovered && isFullyVisibleCard(ymlVideoCard2)){
            playVideo(ymlVideo2);
        }else if(isScrolled && isCard2Hovered && !isFullyVisibleCard(ymlVideoCard2)){
            pauseVideo(ymlVideo2)
        }
    }
}
function windowSizeForiOS(){
    if(window.innerWidth < 991){
        if(ymlVideo1){
            ymlVideo1.loop = true;
        }
        if(ymlVideo2){
            ymlVideo2.loop = true;
        }
    }
    var isIOSDevices = /(Mac|iPhone|iPod|iPad)/i.test(navigator.userAgent);
    if(isIOSDevices){
        var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);
        if(isSafari){
            var browserVersion = navigator.userAgent.match(/Version\/(\d+\.\d+)/);
            var versionIs = parseFloat(browserVersion[1]);
            if(versionIs === 15.6){
                for(var i = 0; i<ymlCardVideoTag.length; i++){
                    ymlCardVideoTag[i].style= "object-fit:cover";
                }
            }
        }
        //Check mac firefox browser 
        if(navigator.userAgent.toLowerCase().indexOf('mac') >= 0 && navigator.userAgent.toLowerCase().indexOf('firefox') > -1){
            for (var i = 0; i < ymlCardVideoTag.length; i++) {
                ymlCardVideoTag[i].parentElement.children[0].lastElementChild.classList.remove("noDisplay");
                ymlCardVideoTag[i].remove();
            }
        }
    }
}
}
var jobAlertStrip = document.querySelector(".jobAlertStrip");
var jobUpdateImg = document.querySelector(".jobAlertStrip .contntD .stripBg");
function jobUpdatesStrip(){
  if(!jobUpdateImg.hasAttribute('src')){
        jobUpdateImg.parentElement.remove();
    } 
}
document.addEventListener('DOMContentLoaded', function () {
    if(jobAlertStrip){
        jobUpdatesStrip();
    }
});

var dataBox = document.querySelectorAll(".dataBox");
var dataBoxImg = document.querySelectorAll(".dataBoxImg");
var animDiv = document.querySelectorAll(".animDiv");
if(animDiv){
for (var i = 0; i < animDiv.length; i++) {
var integerValue =parseInt(animDiv[i].innerText.trim());
	animDiv[i].innerText =integerValue;

}
}

if(dataBox){
    for (var i = 0; i < dataBoxImg.length; i++) {
        if(dataBoxImg[i].getAttribute('src').trim() == ""){
            if(dataBoxImg[i].nextElementSibling.className == "imageOverlay20"){
                dataBoxImg[i].nextElementSibling.remove()
            }
            dataBoxImg[i].remove();
        }
    }

}

var ymlFFcardVideo = document.getElementsByClassName("ymlFFcardVideo");

if(ymlFFcardVideo){
var isCardVisible = [];
var hasVideoEnded =[];
var isCardVideoPlaying = [];
var isCardHovered = [];
function ymlFFcardVideoload(){
    const ymlFFcard = document.querySelectorAll(".ymlFFcardVideo");
    for (var i = 0; i < ymlFFcard.length; i++) {
                if(ymlFFcard[i].children[0].hasAttribute('src')){
            ymlFFcard[i].parentElement.children[0].lastElementChild.classList.add("noDisplay")
            ymlFFcard[i].setAttribute("poster",ymlFFcard[i].parentElement.children[0].lastElementChild.src);
        }else{
            ymlFFcard[i].remove();
        }
    }
    for(let i = 0; i < ymlFFcardVideo.length; i++){
        isCardVisible.push(false);
        hasVideoEnded.push(false);
        isCardVideoPlaying.push(false);
        isCardHovered.push(false);
    }
}
ymlFFcardVideoload();
if(ymlFFcardVideo.length != 0){
function isYMLFFCardVisible(element){
    var vid = element.getBoundingClientRect();
var windowHeight = window.innerHeight;
        var cardvisible20 = windowHeight*0.20;
        if(window.innerWidth > 991){
            return vid.top <= windowHeight - cardvisible20 && vid.bottom >= cardvisible20;
        }else{
    return vid.top <= window.innerHeight && vid.bottom >= 0;
}
}
function playVideo(video){
    if(video.paused === true){
        try{
            video.play().catch(function(error){
            })
        } catch(error){
        }
    }
}
function pauseVideo(video){
    video.pause();
}
function playPauseYMLFFVideoVisibility(){
    for(var i = 0; i < ymlFFcardVideo.length; i++){
        if(isYMLFFCardVisible(ymlFFcardVideo[i]) && !hasVideoEnded[i]){
            isCardVisible[i]=true;
            if(!isCardVideoPlaying[i] && ymlFFcardVideo[i].paused === true){
                playVideo(ymlFFcardVideo[i]);
                isCardVideoPlaying[i] = false;
            }
        }else{
            if(isCardVisible[i] && !hasVideoEnded[i] && ymlFFcardVideo[i].paused === false){
                pauseVideo(ymlFFcardVideo[i]);
                isCardVideoPlaying[i] = false;
            }else{
                isCardVisible[i] = false;
            }
        }
    }
}

function checkVideoVisibility(){
    if(document.visibilityState === "hidden"){
        for(let i = 0; i < ymlFFcardVideo.length; i++){
            if(ymlFFcardVideo[i].paused === false){
                isCardHovered[i] = false;
                pauseVideo(ymlFFcardVideo[i]);
            }
        }
    } 
    else if(document.visibilityState === "visible"){
        for(let i = 0; i < ymlFFcardVideo.length; i++){
            if((isCardHovered[i] && isYMLFFCardVisible(ymlFFcardVideo[i]) && hasVideoEnded[i]) || (isYMLFFCardVisible(ymlFFcardVideo[i]) && !hasVideoEnded[i])){
                isCardHovered[i] = false;
                playVideo(ymlFFcardVideo[i]);
            }
        }   
    }
}
function ymlwindowSizeForiOS(){
    if(window.innerWidth < 991){
        for(let i = 0; i < ymlFFcardVideo.length; i++){
            ymlFFcardVideo[i].loop=true;
        }
    }
    var isIOSDevices = /(Mac|iPhone|iPod|iPad)/i.test(navigator.userAgent);
    if(isIOSDevices){
        var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);
        if(isSafari){
            var browserVersion = navigator.userAgent.match(/Version\/(\d+\.\d+)/);
            var versionIs = parseFloat(browserVersion[1]);
            if(versionIs === 15.5 || versionIs === 15.6){
                for(var i = 0; i<ymlFFcardVideo.length; i++){
                    ymlFFcardVideo[i].style= "object-fit:cover";
                }
            }
        }
        //Check mac firefox browser 
        if(navigator.userAgent.toLowerCase().indexOf('mac') >= 0 && navigator.userAgent.toLowerCase().indexOf('firefox') > -1){
            for (var i = 0; i < ymlFFcardVideo.length; i++) {
                ymlFFcardVideo[i].parentElement.children[0].lastElementChild.classList.remove("noDisplay");
                ymlFFcardVideo[i].remove();
            }
        }
    }
}
isScrolling = false;
    function hasScrollVisible(){
        isScrolling = true;
        for(let i = 0; i < ymlFFcardVideo.length; i++){
            if(isCardHovered[i] && isScrolling && isYMLFFCardVisible(ymlFFcardVideo[i]) && hasVideoEnded[i]){
                playVideo(ymlFFcardVideo[i]);
                
            }
            else if(isCardHovered[i] && isScrolling && !isYMLFFCardVisible(ymlFFcardVideo[i]) && hasVideoEnded[i]){
                pauseVideo(ymlFFcardVideo[i]);
                
            }
        }
    }
window.addEventListener("DOMContentLoaded", function(){
    //ymlFFcardVideoload();
    ymlwindowSizeForiOS();
    playPauseYMLFFVideoVisibility();
  })
window.addEventListener('scroll',function(){
    playPauseYMLFFVideoVisibility();
    hasScrollVisible();
});
window.addEventListener("focus", function () {
    playPauseYMLFFVideoVisibility();
    checkVideoVisibility()
})
window.addEventListener("blur", function () {
    for(let i = 0; i < ymlFFcardVideo.length; i++){
        pauseVideo(ymlFFcardVideo[i]);
    }
});
window.addEventListener('visibilitychange',function(){
    checkVideoVisibility();
});
for(let i = 0; i < ymlFFcardVideo.length; i++){
    ymlFFcardVideo[i].addEventListener('ended',function(){
        hasVideoEnded[i] = true;
        ymlFFcardVideo[i].loop=true;
        pauseVideo(ymlFFcardVideo[i])
if(hasVideoEnded[i] && ymlFFcardVideo[i].paused == true && isCardHovered[i]){
            playVideo(ymlFFcardVideo[i]);
        }
    });

    ymlFFcardVideo[i].parentElement.addEventListener('mouseenter',function(){
        isCardHovered[i] = true;
        if(isYMLFFCardVisible(ymlFFcardVideo[i]) && ymlFFcardVideo[i].paused === true){
            playVideo(ymlFFcardVideo[i]);
        }
    })

    ymlFFcardVideo[i].parentElement.addEventListener('mouseleave',function(){
        isCardHovered[i] = false;
        if(hasVideoEnded[i] && !ymlFFcardVideo[i].paused){
            pauseVideo(ymlFFcardVideo[i]);
        }
    })
  }
}
}
var quotesParent = document.querySelectorAll(".quoteBoxSection");
var quoteBoxDesc = document.getElementsByClassName("quoteBoxDesc");
var colorsQ = ["#0a8ee0", "#076AA6", "#043A5B"];
var urlQuote = "/bin/factDataServlet?";
var sheetNameQ = "";
var excelPathQ = "";
var elemColorQ;

var quoteURL = urlQuote + "excelPath=" + excelPathQ + "&excelSheet=" + sheetNameQ;
if (quotesParent) {
    for (var i = 0; i < quotesParent.length; i++) {
        firstLoadquote(i, quotesParent[i]);
    }
}

function firstLoadquote(quotesParentIndex, quoteBox) {
    if (quoteBox.children[0].children[0].children[0].children[0].children[1].children[4] != undefined) {
        sheetNameQ = quoteBox.children[0].children[0].children[0].children[0].children[1].children[4].innerHTML;
        excelPathQ = quoteBox.children[0].children[0].children[0].children[0].children[1].children[5].innerHTML;
    } 

    quoteURL = urlQuote + "excelPath=" + excelPathQ + "&excelSheet=" + sheetNameQ;
    var xhttpQ = new XMLHttpRequest();
    xhttpQ.open("GET", quoteURL, true);
    xhttpQ.onload = function () { 
        if (xhttpQ.readyState == 4 && xhttpQ.status === 200) {
            var quoteBoxToChange = quotesParent[quotesParentIndex].querySelectorAll(".quoteMain");
            var quoteBoxHeadline = quotesParent[quotesParentIndex].querySelectorAll(".quoteBox .quoteBoxHeadline");
            var quoteBoxDesc = quotesParent[quotesParentIndex].querySelectorAll(".quoteBox .quoteBoxDesc");
            var quoteBoxnextFeed = quotesParent[quotesParentIndex].querySelectorAll('.quoteBoxnextFeed');
            var readQuoteBox = quotesParent[quotesParentIndex].querySelectorAll('.readQuoteBox');
            
            var data = xhttpQ.response;
            var res = JSON.parse(data);
            if (quoteBoxHeadline) {
                for (var i = 0; i < quoteBoxToChange.length; i++) {
                  if(quoteBoxToChange[i].children[2].lastElementChild.hasAttribute('src')){
                      quoteBoxToChange[i].style.backgroundColor = "none";
                        
                    }else{
                      quoteBoxToChange[i].children[3].remove();
                      quoteBoxToChange[i].children[2].remove();
                      quoteBoxToChange[i].style.backgroundColor = colorsQ[i];
                        
                    }

                }
                for (var i = 0; i < quoteBoxnextFeed.length; i++) {
                    quoteBoxHeadline[i].innerHTML = res.response.msg;
                    quoteBoxDesc[i].innerHTML = res.response.urlLabel;
                    readQuoteBox[i].setAttribute("href", res.response.url);
                    DscptLength();
                    if (res.response.url == "NA" || res.response.url === "na" || res.response.url.trim() === "") { 
                        readQuoteBox[i].style.display = "none";
                    } else {
                        readQuoteBox[i].style.display = "block";
                    }
                    if (res.response.urlLabel == "NA" || res.response.urlLabel == "na"|| res.response.url.trim() === "") { 
                        quoteBoxDesc[i].style.display = "none";
                    } else {
                        quoteBoxDesc[i].style.display = "block";
                    }
                    quoteBoxnextFeed[i].setAttribute("quoterefreshIndex", 0);
                    quoteBoxnextFeed[i].addEventListener("click", refreshQuoteText);
                }
            }
        } else {
            console.log('Request failed.  Returned status of ' + xhttpQ.status);
        }
    };
    xhttpQ.send();
}
function refreshQuoteText(e) {
    e.preventDefault();
    var elem = this;
    var quotesElm = elem.previousElementSibling.children[0].children[0].children[1].children[0];
    var quotesDescElm = elem.previousElementSibling.children[0].children[0].children[1].children[1];
    var quotesUrlElm = elem.previousElementSibling.children[0].children[0].children[1].children[2];
    elemColorQ = elem.parentElement;

    var quoterefreshIndex = parseInt(elem.getAttribute("quoterefreshIndex"));
    var qrefeshIndexPlus = ++quoterefreshIndex;

    qrefeshIndexPlus %= colorsQ.length;
    elem.setAttribute("quoterefreshIndex", qrefeshIndexPlus);

    sheetNameQ = elem.previousElementSibling.children[0].children[0].children[1].children[4].innerHTML;
    excelPathQ = elem.previousElementSibling.children[0].children[0].children[1].children[5].innerHTML;

    var xhttpQuote = new XMLHttpRequest();
    var newQuoteUrl = urlQuote + "excelPath=" + excelPathQ + "&excelSheet=" + sheetNameQ;
    
    xhttpQuote.onreadystatechange = function () { //change data on individual card click
        if (xhttpQuote.readyState == 4 && xhttpQuote.status === 200) {
            if (elemColorQ.parentElement.classList.contains("quoteBoxSection") && !elemColorQ.nextElementSibling) {
                elemColorQ.style.backgroundColor = colorsQ[qrefeshIndexPlus];
            }
            quotesElm.style.opacity = 0;
            quotesDescElm.style.opacity = 0;
            if (quotesElm.classList.contains("fadeInText")) {
                quotesElm.classList.remove("fadeInText");
                quotesElm.style.opacity = 0;
                quotesDescElm.classList.remove("fadeInText");
                quotesDescElm.style.opacity = 0;
            }
            var jsonParse = JSON.parse(xhttpQuote.response);
            quotesElm.innerHTML = jsonParse.response.msg;
            quotesDescElm.innerHTML = jsonParse.response.urlLabel;
            quotesUrlElm.setAttribute("href", jsonParse.response.url);
            DscptLength();
            if (jsonParse.response.url == "NA" || jsonParse.response.url == "na" || jsonParse.response.url.trim() === "") {
                quotesUrlElm.style.display = "none";
            } else {
                quotesUrlElm.style.display = "block";
            }
            if (jsonParse.response.urlLabel == "NA" || jsonParse.response.urlLabel == "na" || jsonParse.response.url.trim() === "") { 
                quotesDescElm.style.display = "none";
            } else {
                quotesDescElm.style.display = "block";
            }
            addOpacityText(quotesElm);
        }
    }
    xhttpQuote.open("GET", newQuoteUrl, true);
    xhttpQuote.send();
}
function DscptLength(){
    for (var i = 0; i < quotesParent.length; i++) {
        if(quoteBoxDesc[i]){
            var len = quoteBoxDesc[i].innerHTML.length;
            if(window.innerHeight <= 768 && window.innerWidth <= 575 && len > 135){
                quoteBoxDesc[i].innerHTML =quoteBoxDesc[i].innerHTML.substring(0, 135) + "...";
            }
            else if(len > 190) {
                quoteBoxDesc[i].innerHTML =quoteBoxDesc[i].innerHTML.substring(0, 190) + "...";
            }
  }
}
}
var quoteBoxnextFeed = document.querySelectorAll(".quoteBoxnextFeed");
for (var i = 0; i < quoteBoxnextFeed.length; i++) {
    if (window.innerWidth > 992) {
        quoteBoxnextFeed[i].addEventListener("mouseover", function () {
            var el = this;
            el.children[0].style.display = "none";
            el.children[1].style.display = "inline-block";
        });
        quoteBoxnextFeed[i].addEventListener("mouseout", function () {
            var el = this;
            el.children[0].style.display = "inline-block";
            el.children[1].style.display = "none";
        });
    }
}
var startAni = true;
var modalOpen = false;
var manualSrollSet = true;
var noSliderDiv = false;
var timeoutS;
var viewBuc = false;
var lastScrollTop = window.pageYOffset || 0;
var frompagename = "";
var scrollFlagCountForManageTeam = false;
var ComunityFlagSet = false;
var returnScroll = false;
var mouseScrolling = true;
var winScrollFlag = false;
var sideScroll = true;
var parallaxCtrlClicked = false;
var banners = [...document.querySelectorAll("section.bannerSection, section.headerFade, section.aboutUsSection")];
(function () {
    var scrolled = false;
    var anchorVal = 0;
    var scrollFlag = true;
    var activeIndex = 0;
    var touchDirY = 0;
    var touchFlag = true;
    var touchDirX = 0
    var downArrClicked = false;
    var elemList = document.getElementsByClassName("mainSliderElem");
    elemList[anchorVal].classList.add("active");
    var nav = document.getElementsByTagName('nav');
    nav[0].addEventListener("mouseenter", () => nav[0].style.opacity = 1);
    nav[0].addEventListener("mouseleave", (e) => { if (!window.location.hash) { return changeNavColor(e); } });
    var mainDiv = document.getElementsByTagName("section");
    /*Initialise the variables and function*/
    setInterval(function () {
        var checkPostion = position();
        if (checkPostion == 0 && anchorVal == 1) {
            anchorVal = 0;
        }
    }, 1000)

    function init() {
        sideScroll = true;

        banners = banners.filter((x) => x.scrollHeight > 0);
        if (document.getElementsByClassName('arrowSection').length != 0) {
            var btnClick = document.getElementsByClassName('arrowSection')[0];
            btnClick.addEventListener("click", function (e) {
                arrowClickEvent(e)
                if (e.currentTarget.attributes.length > 1) {
                    frompagename = e.currentTarget.attributes[1].value;
                }
            }, false); //for arrowClick pointing down
        }
        /* added for manualSroll from sideScroll */
        for (var i = 0; i < elemList.length; i++) {
            elemList[i].setAttribute("anchorval", i);
        }
        /*If Slider element is present and is not hidden*/
        for (var i = 1; i < mainDiv.length; i++) {
            if (document.getElementsByClassName("sliderElem").length != 0 && window.getComputedStyle(document.getElementsByClassName("sliderElem")[0], null).getPropertyValue("display") !== "none") {
                document.addEventListener("wheel", function (e) {
                    mouseWheelEvent(e);
                }, {
                    passive: false
                });
               
                window.addEventListener("scroll", function (e) {
                    if (sideScroll) {
                        winScrollEvent(e);
                    }
                }, false);
                mainDiv[i].addEventListener("touchstart", function (e) {
                    touchDirY = e.touches[0].clientY;
                    touchDirX = e.touches[0].clientX;
                    scrollFlag = false;
                }, false);
                mainDiv[i].addEventListener("touchend", function (e) {
                    if (Math.abs(e.changedTouches[0].clientY - touchDirY) > Math.abs(e.changedTouches[0].clientX - touchDirX)) {
                        if (touchDirY > e.changedTouches[0].clientY || touchDirY < e.changedTouches[0].clientY) {
                            if (touchDirY > e.changedTouches[0].clientY)
                                touchFlag = false;
                            else
                                touchFlag = true;
                            if (event.target.parentNode.classList.contains("scrollableDiv") || event.target.classList.contains("scrollableDiv")) {
                                if (touchDirY > e.changedTouches[0].clientY) {
                                    if (event.target.parentNode.scrollTop == 0) {
                                        modalOpen = false;
                                    }
                                } else {
                                    if (event.target.parentNode.scrollHeight - event.target.parentNode.scrollTop == event.target.parentNode.offsetHeight) {
                                        modalOpen = false;
                                    }
                                }
                            }
                            mouseWheelEvent(event, touchFlag);
                        }
                    } else if (Math.abs(e.changedTouches[0].clientY - touchDirY) < Math.abs(e.changedTouches[0].clientX - touchDirX)) {
                        if (dropPar(composedPath(event.target))) {
                            var elem = dropPar(composedPath(event.target));
                            var result = compObj(sliderObj, elem[1]);
                            if (result != "false") {
                                var self = sliderObj[result];
                                if (self.el.getElementsByClassName("carItemParent").length == 0) {
                                    swipeScroll(self, e.changedTouches[0], document.querySelectorAll(".carItem.active")[0], touchDirX)
                                } else {
                                    swipeScroll(self, e.changedTouches[0], "", touchDirX)
                                }
                            }
                        }
                    }
                }, false);
            } else {
                mainDiv[i].addEventListener("touchstart", function (e) {
                    touchDirY = e.touches[0].clientY;
                    touchDirX = e.touches[0].clientX;
                    scrollFlag = false;
                }, false);
                mainDiv[i].addEventListener("touchend", function (e) {
                    if (Math.abs(e.changedTouches[0].clientY - touchDirY) < Math.abs(e.changedTouches[0].clientX - touchDirX)) {
                        //safari swipe functionality
                        if (dropPar(composedPath(event.target))) {
                            var elem = dropPar(composedPath(event.target));
                            var result = compObj(sliderObj, elem[1]);
                            if (result != "false") {
                                var self = sliderObj[result];
                                if (self.el.getElementsByClassName("carItemParent").length == 0) {
                                    swipeScroll(self, e.changedTouches[0], document.querySelectorAll(".carItem.active")[0], touchDirX)
                                } else {
                                    swipeScroll(self, e.changedTouches[0], "", touchDirX)
                                }
                            }
                        }
                    }
                }, false);
            }
        }

        //swipe functionality safari
        function composedPath(event) {
            var path = [];
            while (event) {
                path.push(event);
                if (event.tagName === 'HTML') {
                    path.push(document);
                    path.push(window);
                    return path;
                }
                event = event.parentElement;
            }
        }

        /*If parallex controls are present*/
        if (document.getElementsByClassName("parallaxControls").length != 0) {
            document.addEventListener('DOMContentLoaded', function () {
                initParallexE();
            });
        }
        document.addEventListener("scroll", function (e) {
            if (timeoutS != undefined)
                clearTimeout(timeoutS);
            timeoutS = setTimeout(function () {
                if (document.getElementsByClassName("jw-flag-fullscreen").length == 0) {
                    scrollEvent(e);
                }
            }, 50);

        }, false);
        if (!nav[0].classList.contains("navSlideDown")) {
            nav[0].classList.add('navSlideDown'); //navBar appearance
            nav[0].style.visibility = "visible";
        }
        let sec = document.querySelectorAll(".mainSliderElem");

        //let currPosition = document.documentElement.scrollTop;
        let currPosition = position();
         for (i = 0; i < sec.length; i++) {
            let elemSec = sec[i];
            if (currPosition >= elemSec.offsetTop) {
                if (elemSec.getAttribute("anchorval") && (elemSec.scrollHeight > 0)) {
                    anchorVal = parseInt(elemSec.getAttribute("anchorval"));
                }
            }
        }
        if (window, innerWidth > 991) {
            winScrollEvent({ "type": "scroll" });
        }

        if (document.querySelectorAll("section.active").length < 1) {
            noSliderDiv = true;
            modalOpen = true;
        }
        let sectionList = [...document.querySelectorAll("section.customScroll")].filter((x) => { return ((x.scrollHeight > 0) && (!x.closest(".modal-dialog"))) });
        for (let section of sectionList) {
            if ((section.offsetTop <= position()) && (section.offsetTop + section.scrollHeight > position())) {
                nav[0].classList.add('navBackground');
            }
        }
        sectionList = [...document.querySelectorAll("section.noSlider")].filter((x) => { return ((x.scrollHeight > 0) && (!x.closest(".modal-dialog"))) });
        for (let section of sectionList) {
            if ((section.offsetTop <= position()) && (section.offsetTop + section.scrollHeight > position())) {
                noSliderDiv = true;
                modalOpen = true;
            }
        }
        if (document.querySelectorAll(".modal.in").length > 0) {
            modalOpen = true;
        }
        if (window.innerWidth > 992) {
            changeNavColor({});
        }
        else if (position() > 0) {
            nav[0].classList.add('navBackground');
        }
    }
    //this event for window side scroll event
    function winScrollEvent(event) {

        if (event.type === "scroll") {
            winScrollFlag = true;
            var sec = document.querySelectorAll(".mainSliderElem");
            var nav = document.getElementsByClassName('navbar');
            var pagefooter = document.querySelector('.footer-bottom').parentElement;
            var parallX = document.querySelector('.parallaxControls');
            var parallaxControls = document.querySelector('.parallaxControls');
            var currPosition = document.documentElement.scrollTop;
           
            if (parallaxControls) {
                parallaxControls.getBoundingClientRect();
            }
            for (i = 0; i < sec.length; i++) {

                let elemSec = sec[i];
                if (currPosition >= elemSec.offsetTop && currPosition < (elemSec.offsetTop + elemSec.offsetHeight)) {
                    if (!elemSec.classList.contains("active")) {
                        elemSec.classList.add('active');
                        if (!parallaxCtrlClicked) {
                            if (window.innerWidth > 992) {
                                if (elemSec.getAttribute("anchorval")) {
                                    anchorVal = parseInt(elemSec.getAttribute("anchorval"));
                                }
                            }
                        }
                            if (elemList[anchorVal].classList.contains("grayNav")) {
                                nav[0].classList.add('grayMenu');
                            } else if (nav[0].classList.contains('grayMenu')) {
                                nav[0].classList.remove('grayMenu');
                            }

                    }
                } else if (elemSec.classList.contains("active")) {
                    elemSec.classList.remove('active');
                }

                if (parallX) {
                    if (pagefooter.getBoundingClientRect().top < (parallX.offsetTop + parallX.offsetHeight)) {
                        if (!parallX.classList.contains("notActive")) {
                            parallX.classList.add("notActive");
                        }
                    } else {
                        parallX.classList.remove("notActive");
                    }

                }
                parallaxCtrlClicked = false;
            };
            changeNavColor(event);
        } else {
            winScrollFlag = false;
        }
    }
    /*On mousewheel*/
    function mouseWheelEvent(event, flagG) {
        sideScroll = false;
        if (document.querySelectorAll(".modal.in").length < 1) {
            if (viewBuc) {
                noSliderDiv = true;
                modalOpen = true;
                viewBuc = false;
            }
            if ((-event.deltaY) > 0 || event.detail < 0) {
            }
            if (noSliderDiv) {
                if ((-event.deltaY) > 0 || event.detail < 0) {
                    if (elemList[anchorVal].offsetTop >= position()) {
                        modalOpen = false;
                        if (localStorage.searchBar == "true" && window.location.hash == "#/searchPanel") {
                            modalOpen = true;
                        }
                        noSliderDiv = false;
                    }
                    if (elemList[anchorVal].offsetTop >= position()) {
                        for (i = anchorVal - 1; i >= 0; i = i - 1) {
                            if (elemList[i].offsetTop >= position()) {
                                anchorVal = i;
                                break;
                            }
                        }

                    }
                } else if (flagG != undefined) {
                    if ((anchorVal != elemList.length - 1 && elemList[anchorVal + 1].offsetTop >= position() &&
                        (elemList[anchorVal + 1].offsetTop < position() + document.documentElement.clientHeight)
                    ) ||
                        (anchorVal != 0 && (elemList[anchorVal - 1].offsetTop + elemList[anchorVal - 1].clientHeight) >= position() &&
                            (elemList[anchorVal - 1].offsetTop < position())
                        )
                    ) {
                        modalOpen = false;
                        noSliderDiv = false;
                    }
                }
            }
            if (!modalOpen) {
                if (scrolled) {
                    event.preventDefault();
                }
                if (window.location.hash === "#/searchPanel") {
                    return false;
                }
                if (!scrolled) {
                    animateElem(event, flagG);
                    if (document.getElementsByClassName("navbar").length != 0) {
                        for (var i = 0; i < elemList.length; i++) {
                            if (!window.scrollY == 0) {
                                if (window.innerWidth > 992 && !returnScroll) {
                                    changeNavColor(event);
                                }
                            }
                            if (scrolled) {
                                if (window.innerWidth > 992) {

                                    if (!nav[0].classList.contains("navBackground")) {

                                        nav[0].style.opacity = 0;
                                        nav[0].classList.remove("navSlideDown");
                                    }  
                                }
                            }
                        }
                    }
                }
            }
        }
        return false;
    }

    //for arrowClick pointing down
    var IncressAnchorValCountFlg = false;

    function arrowClickEvent(e) {
        IncressAnchorValCountFlg = true;
        if (elemList.length > (anchorVal + 1)) {
            if (window.innerWidth >= 992) {
            nav[0].style.opacity = 0;
            nav[0].classList.remove("navSlideDown");
        }
            anchorVal = 0;
            downArrClicked = true;
            parallaxCtrlClicked = true;
            var elem = elemList[++anchorVal];
            removeActive(document.getElementsByClassName("mainSliderElem"), "active")
            document.getElementsByClassName("mainSliderElem")[anchorVal].classList.add("active")
            scrollTo(elem.offsetTop, e, document.getElementsByClassName("mainSliderElem")[anchorVal], 1500)
        }
    }
    /*On scroll of vertical scrollbar*/
    function scrollEvent(e) {
        var audioCtrlAll = document.querySelector(".audioCtrlAll");
        var audioIcon = document.querySelector(".audioIcon");
        var audioIcons = document.querySelector(".audioIcons");
        var isTop = position();
        if (isTop === 0 || isTop <= 600) {
            if (audioIcon) {
                audioIcon.classList.remove("audioSpeakerIconFixed");
            }
            if (audioIcons) {
                audioIcons.classList.remove("audioIconFixed")
            }
            var audioCtrlAllUp = document.querySelector(".audioCtrlAllUp");
            if (audioCtrlAllUp !== "" && audioCtrlAllUp !== null && audioCtrlAllUp !== undefined) {
                audioCtrlAllUp.classList.remove("audioCtrlAllUp");
                audioCtrlAllUp.classList.add("audioCtrlAll");
            }
            if (audioIcon !== "" && audioIcon !== null && audioIcon !== undefined) {
                audioIcon.classList.remove("noDisplay");
                if (audioIcon.classList.contains("iconsMap")) {
                    audioIcon.classList.remove("iconsMap");
                }
                if (audioIcon.parentElement.parentElement.parentElement.classList.contains("marker-3")) {
                    audioIcon.parentElement.parentElement.parentElement.classList.remove("marker-3");
                }
            }
        } else if (isTop > 600 && audioCtrlAll !== "" && audioCtrlAll !== null && audioCtrlAll !== undefined) {
            if (window.innerHeight < document.querySelector(".coffExp").getBoundingClientRect().top && audioIcon.classList.contains("closeSoundImg")) {
                if (audioIcon) {
                    audioIcon.classList.add("audioSpeakerIconFixed");
                }
                if (audioIcons) {
                    audioIcons.classList.add("audioIconFixed")
                }
            } else {
                audioIcon.classList.remove("audioSpeakerIconFixed");
                audioIcons.classList.remove("audioIconFixed")
            }
        }

        //code for animation in about us page and management page
        /*New code change for iPad scroll issue */
            if (innerWidth < 992) {
            var sec = document.querySelectorAll(".mainSliderElem");
            for (i = 0; i < sec.length; i++) {
                var elemSec = sec[i];
                var abtTop = position();
                var currPosition = abtTop;
                if (currPosition >= elemSec.offsetTop && currPosition < (elemSec.offsetTop + elemSec.offsetHeight)) {
                    animateFrame(elemSec);
                }
            };
        }
        var closeSearch = document.querySelectorAll(".searchBoxIcon")[0];
        if (closeSearch) {
            if (closeSearch.classList.contains("closeSearch")) {
                setTimeout(function () {
                    nav[0].classList.remove('navSlideDown');
                }, 40);
            } //nav appearance on closeIcon
        }
        if (document.getElementsByClassName("parallaxControls").length != 0) {
            parCont();
        }
        if (document.getElementsByClassName("navbar").length != 0) {
            if (window.innerWidth > 992) {
                changeNavColor(e); //navBar color change as per the sections
            }
        }
        /*Only vertical scroll bar is acrolled*/
        if (scrollFlag) {
            var elemTop = position();
            var elemL = document.getElementsByClassName("mainSliderElem");
            for (var i = 0; i < elemL.length; i++) {
                if ((elemL[i].offsetTop >= elemTop) && (elemL[i].offsetTop < elemTop + document.documentElement.clientHeight)) {
                    if (elemList[i].getElementsByClassName("scrollableDiv").length != 0) {
                        var curE = elemList[i].getElementsByClassName("scrollableDiv")[0]
                        if ((curE.scrollHeight - curE.scrollTop === curE.clientHeight) || (lastScrollTop > window.pageYOffset && curE.scrollTop == 0)) {
                            lastScrollTop = window.pageYOffset;
                            modalOpen = false;
                        }
                        lastScrollTop = window.pageYOffset;
                        anchorVal = i;
                        animateFrame(elemL[i])
                        return false;
                    } else {
                        if (elemList[i].classList.contains("noSlider")) {
                            if (elemList[i]) {
                                modalOpen = true;
                                noSliderDiv = true;
                                if (!sideScroll) {
                                    anchorVal = i;
                                }
                                ComunityFlagSet = false;
                            }
                        } else {
                            modalOpen = false;
                            stopSlide(findSlidingElem(elemL[anchorVal].getElementsByClassName("carouselDiv")))
                            stopSlide(findSlidingElem(elemL[i].getElementsByClassName("carouselDiv")))
                            animateFrame(elemL[i])
                            if (i == 0) {
                                anchorVal = i;
                                ComunityFlagSet = false;
                            } else {
                                if (anchorVal < i) {
                                    if (IncressAnchorValCountFlg == true) {
                                        ComunityFlagSet = true;
                                        anchorVal = i;
                                    } else {
                                        ComunityFlagSet = false;
                                        anchorVal = i - 1;
                                    }
                                } else if (anchorVal == i) {
                                    if (frompagename == "managementTeamPage" || frompagename == "aboutUsPage" || frompagename == "communityPage") {
                                        anchorVal++;
                                        scrollFlagCountForManageTeam = true;
                                        ComunityFlagSet = false;
                                    }
                                }
                            }
                            startSlide(findSlidingElem(elemL[i].getElementsByClassName("carouselDiv")))
                        }
                    }
                    break;
                } else if ((elemL[i].offsetTop < elemTop)) {
                    animateFrame(elemL[i]);
                }
            }
        }
    }

    /*Initialise parallex components*/
    function initParallexE() {
        if (document.getElementsByClassName("parallaxControls").length != 0) {
            if (document.getElementsByClassName("mainSliderElem").length != 0) {
                if (document.querySelector(".mainSliderElem.active")) {
                     if (!document.querySelector(".mainSliderElem.active").classList.contains("parallaxWrapper")) {
                    document.getElementsByClassName("parallaxControls")[0].classList.add("notActive")
                }
                else {
                    parCont();
                }
            }

        }
        }
        for (var j = 0; j < document.getElementsByClassName("parallaxControls").length; j++) {
            if (!document.getElementsByClassName("parallaxControls")[j].classList.contains("positioning")) {
                var slideObj = document.getElementsByClassName("parallaxControls")[j].getElementsByClassName("pointerDiv");
                for (var i = 0; i < slideObj.length; i++) {
                    slideObj[i].addEventListener('click', function (event) {
                        var elems = document.getElementsByClassName("parallaxWrapper");
                        var elem = elems[event.currentTarget.children[0].getAttribute("data-slide")];
                        if (elem) {
                            anchorVal = findElemIndex(elemList, elems[event.currentTarget.children[0].getAttribute("data-slide")]);
                            scrollTo(elem.offsetTop, event, elem, 1500);
                        }
                        parallaxCtrlClicked = true;
                    });
                }
            }
        }
    }
    /*Find index of current section from list of sections for parallex*/
    function findIndex(elems, currentElem) {
        var i = 0;
        for (i; i < elems.length; i++) {
            if (elems[i] === currentElem)
                break
        }
        return i
    }
    /*Find index of current section from list of sections for parallex*/
    function parCont() {
        var pos = position();
        var elemTop = document.getElementsByClassName("parallaxControls")[0].offsetTop + document.getElementsByClassName("parallaxControls")[0].clientHeight / 2;
        var elemL = document.getElementsByClassName("mainSliderElem");
        var elemW = document.getElementsByClassName("parallaxWrapper");
        var elem_shareOptions = document.getElementsByClassName("shareOptions");
        var elem_shareBtnParent = document.getElementsByClassName("shareBtnParent");

        for (var i = elemL.length - 1; i >= 0; i--) {
            var elementOffset = elemL[i].offsetTop - pos;
            if ((Math.abs(elementOffset) <= elemTop && activeIndex == elemL.length - 1) || (elementOffset <= elemTop && activeIndex != elemL.length - 1)) {
                if (activeIndex != i) {
                    var pointerElemPar = document.getElementsByClassName("parallaxControls")[0]
                    if (elemL[i].classList.contains("parallaxWrapper")) {
                        var ind = findIndex(elemW, elemL[i])
                        var pointerElem = document.getElementsByClassName("pointerDiv")
                        for (var index = 0; index < pointerElem.length; index++) {
                            if (index != ind) {
                                pointerElem[index].classList.remove("active")
                                /* for share panale hide and show code*/
                                if (elem_shareOptions.length != 0) {
                                    if (!pointerElemPar.classList.contains("notActive")) {
                                        if (elem_shareBtnParent[0].classList.contains("activeShare")) {
                                            elem_shareOptions[0].classList.add("active");
                                        }
                                    } else {
                                        elem_shareOptions[0].classList.remove("active");
                                        if (elem_shareBtnParent[0].classList.contains("activeShare")) {
                                            elem_shareBtnParent[0].children[1].style.display = "none";
                                            elem_shareBtnParent[0].children[0].style.display = "block";
                                        }
                                        elem_shareBtnParent[0].classList.remove("activeShare");
                                    }
                                }
                                /* for share panale hide and show code*/
                            } else {
                                pointerElem[index].classList.add("active")
                                pointerElemPar.classList.remove("notActive")
                                /* for share panale hide and show code*/
                                if (elem_shareOptions.length != 0) {
                                    if (!pointerElemPar.classList.contains("notActive")) {
                                        if (elem_shareBtnParent[0].classList.contains("activeShare")) {
                                            elem_shareOptions[0].classList.add("active");
                                        }
                                    } else {
                                        elem_shareOptions[0].classList.remove("active");
                                        if (elem_shareBtnParent[0].classList.contains("activeShare")) {
                                            elem_shareBtnParent[0].children[1].style.display = "none";
                                            elem_shareBtnParent[0].children[0].style.display = "block";
                                        }
                                        elem_shareBtnParent[0].classList.remove("activeShare");
                                    }
                                }
                                /*  for share panale hide and show code*/
                            }
                        }

                    } else {
                        pointerElemPar.classList.add("notActive")
                        /*  for share panale hide and show code*/
                        if (elem_shareOptions.length != 0) {
                            if (!pointerElemPar.classList.contains("notActive")) {
                                if (elem_shareBtnParent[0].classList.contains("activeShare")) {
                                    elem_shareOptions[0].classList.add("active");
                                }
                            } else {
                                elem_shareOptions[0].classList.remove("active");
                                if (elem_shareBtnParent[0].classList.contains("activeShare")) {
                                    elem_shareBtnParent[0].children[1].style.display = "none";
                                    elem_shareBtnParent[0].children[0].style.display = "block";
                                }
                                elem_shareBtnParent[0].classList.remove("activeShare");
                            }
                        }
                        /*  for share panale hide and show code*/
                    }
                    activeIndex = i;
                }
                break;
            }
        }
    }
    if (window.innerWidth > 992) {
        function changeNavColor(e) {
            let currPosition = position();
            sideScroll = true;
            var elemTop = position();
            for (var i = elemList.length - 1; i >= 0; i--) {
                if (!elemList[activeIndex].children[0].classList.contains("footer-bottom")) {
                    var elementOffset = elemList[activeIndex].offsetTop;
                }
                if (elementOffset == elemTop || elemTop == 0) {
                    if (elemList[i].classList.contains("grayNav")) {
                        document.getElementsByClassName('navbar')[0].classList.add('grayMenu');
                        if (nav[0].classList.contains("navBackground")) {
                            nav[0].classList.remove('navBackground');
                        }
                        // add and remove graymenu class on mouseover and mouseout event 
                        if (window.innerWidth > 991) {
                            var grayMenu = document.getElementsByClassName('grayMenu')[0];
                            var target_ul = grayMenu.getElementsByClassName('nav navbar-nav pull-right customNav paddingTopNav')[0];
                            var target_li = target_ul.getElementsByClassName('navText');
                            for (var j = 0; j < target_li.length; j++) {
                                target_li[j].onmouseover = function () {
                                    var el = this;
                                    megaMenuOnHover(el);
                                };
                                target_li[j].onmouseout = function () {
                                    var el = this;
                                    megaMenuHoverOut(el);
                                };
                            }
                        }
                    } else {
                        // remove the mouse events once the class is removed
                        target_li = document.getElementsByClassName('navText');
                        for (var j = 0; j < target_li.length; j++) {
                            target_li[j].onmouseover = function () { };
                            target_li[j].onmouseout = function () { };
                        }
                    }
                    if (elemTop == 0) {
                        if (!elemList[activeIndex].classList.contains("customScroll") && nav[0].classList.contains("navBackground")) {
                            nav[0].classList.remove('navBackground');
                        }
                        if (!elemList[activeIndex].classList.contains("grayNav") && nav[0].classList.contains("grayMenu")) {
                            nav[0].classList.remove('grayMenu');
                        }
                    }
                }
                if ((elemList[i].offsetTop <= elemTop) && ((elemList[i].offsetTop + elemList[i].scrollHeight > elemTop ))) {

                    if (elemList[i].classList.contains("grayNav")) {
                        document.getElementsByClassName('navbar')[0].classList.add('grayMenu');
                        if (nav[0].classList.contains("navBackground")) {
                            nav[0].classList.remove('navBackground');
                        }
                        //swati-- add and remove graymenu class on mouseover and mouseout event 
                        var grayMenu = document.getElementsByClassName('grayMenu')[0];
                        var target_ul = grayMenu.getElementsByClassName('nav navbar-nav pull-right customNav paddingTopNav')[0];
                        if (target_ul) {
                            var target_li = target_ul.getElementsByClassName('navText');
                            for (var j = 0; j < target_li.length; j++) {
                                target_li[j].onmouseover = function () {
                                    var el = this;
                                    megaMenuOnHover(el);
                                };
                                target_li[j].onmouseout = function () {
                                    var el = this;
                                    megaMenuHoverOut(el);
                                };
                            }
                        }
                        break;
                    }
                    let sectionList = [...document.querySelectorAll("section.customScroll")].filter((x) => { return ((x.scrollHeight > 0) && (!x.closest(".modal-dialog"))) });
                    let customScrollFlag = false
                    for (let section of sectionList) {
                        if ((section.offsetTop <= position()) && (section.offsetTop + section.scrollHeight > position())) {
                            customScrollFlag = true;
                        }
                    }
                    if (customScrollFlag && !nav[0].classList.contains("navBackground")) { // change added
                        nav[0].classList.add('navBackground');
                        nav[0].style.visibility = "visible";
                        if (manualSrollSet == true) {
                            if (!nav[0].classList.contains("navSlideDown")) {
                                nav[0].classList.add('navSlideDown'); //navBar appearance
                            }
                            setTimeout(function () {
                                manualSrollSet = false;
                            }, 300);
                        }
                        break;
                    } else {
                        document.getElementsByClassName('navbar')[0].classList.remove('grayMenu');
                        manualSrollSet = true;
                        break;
                    }
                }
            }
            let bannerHeader = false;
            for (let banner of banners) {
                if ((banner.offsetTop <= currPosition) && ((banner.offsetTop + banner.clientHeight) > currPosition)) {
                    if ((banner.offsetTop + 40 >= currPosition)) {
                        if (nav[0].style.opacity == 0) {
                            nav[0].style.opacity = 1;
                            nav[0].style.visibility = "visible";
                            nav[0].classList.add("navSlideDown");
                        }
                        nav[0].style.opacity = (40.0 - (currPosition - banner.offsetTop)) / 40.0;
                        
                    }
                    else {
                        nav[0].classList.remove("navSlideDown");
                        nav[0].style.visibility = "hidden";
                        nav[0].style.opacity = 0;
                    }
                    bannerHeader = true;
                    nav[0].classList.remove("navBackground");

                }

            }
            if (!bannerHeader) {
                nav[0].style.opacity = 1;
                nav[0].style.visibility = "visible";
                nav[0].classList.add("navSlideDown");
                nav[0].classList.add("navBackground");
                nav[0].classList.remove("grayMenu");
            }
            if (elemList.length && window.innerWidth > 992) {
                lastVideoStop(elemList);
            }
        }
    }

    var MenuBeforHoverClass = "";
    function megaMenuOnHover(el) {
        if (nav[0].classList.contains("navBackground")) {
            MenuBeforHoverClass = "navBackground";
        } else if (nav[0].classList.contains("grayMenu")) {
            MenuBeforHoverClass = "grayMenu";
        } else {
            MenuBeforHoverClass = "";
        }
        if (el.classList.contains("megaMenu")) {
            nav[0].classList.remove('grayMenu');
        } else if ((!nav[0].classList.contains("navBackground")) && (nav[0].classList.contains("grayMenu"))) {
            el.classList.add("hoverGray");
        }
    }
    function megaMenuHoverOut(el) {
        if (MenuBeforHoverClass === "navBackground") {
            nav[0].classList.remove('grayMenu');
            nav[0].classList.add('navBackground');
        } else if (MenuBeforHoverClass === "grayMenu") {
            nav[0].classList.remove('navBackground');
            nav[0].classList.add('grayMenu');
        } else {
            nav[0].classList.remove('navBackground');
            nav[0].classList.remove('grayMenu');
        }
        if (el.classList.contains("hoverGray")) {
            el.classList.remove("hoverGray");
        }
    }
    function removeActive(elemList, paramL) {
        for (var i = 0; i < elemList.length; i++) {
            if (elemList[i].classList.contains("active")) {
                elemList[i].classList.remove("active");
            }
        }
    }
    function animateFrame(elemA) {
        if (document.getElementsByClassName("captionBorder").length != 0) {
            setAnimationF(elemA, "captionBorder", "inView");
        }
        if (document.getElementsByClassName("headerCap").length != 0) {
            setAnimationF(elemA, "headerCap", "inView");
        }
        if (document.getElementsByClassName("infoWrapper").length != 0) {
            setAnimationF(elemA, "infoWrapper", "inView");
        }
        if (document.getElementsByClassName("animm").length != 0) {
            setAnimationF(elemA, "animm", "inView");
        }
		if (document.getElementsByClassName("echart").length != 0) {
            setAnimationF(elemA, "animm", "inView");
        }

        if (document.getElementsByClassName("coffContent").length != 0) {
            setAnimationF(elemA, "coffContent", "inView");
        }
        if (document.getElementsByClassName("aboutUsBorder").length != 0) {
            setAnimationF(elemA, "aboutUsBorder", "inView");
        }
        if (document.getElementsByClassName("overlayWrapper").length != 0) {
            setAnimationF(elemA, "overlayWrapper", "inView");
        }
    }

    function setAnimationF(elem, elemName, elemProp) {
        var doughnutDiv = document.getElementById("charts");

        if (doughnutDiv && startAni) {
            var companyNameFirst = document.getElementById("charts").getAttribute("companyNameFirst");
            var companyNameMiddle = document.getElementById("charts").getAttribute("companyNameMiddle");
            var companyNameLast = document.getElementById("charts").getAttribute("companyNameLast");
            var fontSizeValue;
            var companyName = "";
            if (companyNameFirst !== "") {
                if (companyNameFirst != null) {
                    companyName += companyNameFirst;
                    fontSizeValue = 20;
                }
            }
            if (companyNameMiddle !== "") {
                if (companyNameMiddle != null) {
                    companyName +=
                        "\n" + companyNameMiddle;
                    fontSizeValue = 15;
                }
            }
            if (companyNameLast) {
                if (companyNameLast != null) {
                    companyName +=
                        "\n" + companyNameLast;
                    fontSizeValue = 15;
                }
            }
            if (document.getElementsByClassName("excelPath").length !== 0 && document.getElementsByClassName("excelSheet").length !== 0) {
                var xhrRequest = new XMLHttpRequest();
                var excelPath = document.getElementsByClassName("excelPath")[0].innerHTML;
                var excelData;
                var excelCompanies = [];
                var excelSheet = document.getElementsByClassName("excelSheet")[0].innerHTML;
                xhrRequest.open('GET', "/bin/companyPieChartDataServlet?excelPath=" + excelPath + "&excelSheet=" + excelSheet, true);
                xhrRequest.onload = function () {
                    if (xhrRequest.status === 200) {
                        excelData = JSON.parse(xhrRequest.response).response;
                        for (var i = 0; i < excelData.length; i++) {
                            excelCompanies[i] = excelData[i].name;
                        }
                        // Initialize after dom ready
                        var myChart = echarts.init(document.getElementById('charts'), 'infographic');
                        option = {
                            title: {
                                text: companyName,
                                x: 'center',
                                y: 'center',
                                textStyle: {
                                    color: 'rgba(30,144,255,0.8)',
                                    fontSize: fontSizeValue,
                                    fontWeight: 'bolder'
                                },
                                subtextStyle: {
                                    color: 'rgba(30,144,255,0.8)',
                                    fontSize: 15,
                                    fontWeight: 'bolder'
                                }
                            },
                            tooltip: {
                                trigger: 'item',
                                formatter: "{a} <br/>{b} : {c} ({d}%)"
                            },
                            legend: {
                                selectedMode: false,
                                orient: 'horizontal',
                                y: 'bottom',
                                data: excelCompanies
                            },
                            toolbox: {
                                show: true,
                                feature: {}
                            },
                            calculable: false,

                            series: [{
                                name: document.querySelector(".echartHeading").innerHTML,
                                type: 'pie',
                                selectedMode: 'single',
                                radius: [100, 140],
                                emphasis: {
                                    label: {
                                        show: true,
                                        position: 'center',
                                        textStyle: {
                                            fontSize: '30',
                                            fontWeight: 'bold'
                                        }
                                    }
                                },
                                data: excelData
                            }]
                        };
                        // Load data into the ECharts instance 
                        myChart.setOption(option);
                    }
                }
                xhrRequest.send();
            }
            startAni = false;
            var echart = document.getElementsByClassName("echart")[0];
            var overflowChart = document.getElementsByClassName("overflowChart")[0];
            overflowChart.scrollBy((echart.offsetWidth - window.innerWidth) / 2 + 15, 0)
        }
        if (elem) {
            if (elem.getElementsByClassName(elemName).length != 0) {
                elemsList = elem.getElementsByClassName(elemName)
                for (var i = 0; i < elemsList.length; i++) {
                    if (!elemsList[i].classList.contains(elemProp)) {
                        elemsList[i].classList.add(elemProp)
                    }
                }
            }
        }
    }

    function animateCards(elemA) {
        setAnimationC(elemA, "fadeInUpSmall", "inView");
    }

    function setAnimationC(elem, elemName, elemProp) {
        if (elem.getElementsByClassName(elemName).length != 0) {
            elemsList = elem.getElementsByClassName(elemName)
            for (var i = 0; i < elemsList.length; i++) {
                if (!elemsList[i].classList.contains(elemProp)) {
                    elemsList[i].classList.add(elemProp
					)
                }
            }
        }
    }

    function position() {
        if (window.scrollY === 0 && document.documentElement.scrollTop === 0)
            return Math.ceil(document.documentElement.offsetTop || document.body.parentNode.offsetTop || document.body.offsetTop);
        else
            return Math.ceil(document.documentElement.scrollTop || document.body.parentNode.scrollTop || document.body.scrollTop);
    }
    var elemDir;

    function animateElem(e, flagG) {
        if (flagG != undefined)
            elemDir = flagG;
        else
            elemDir = (-e.deltaY) > 0 || e.detail < 0;
        if (elemDir) {
            ComunityFlagSet = false;
            if (anchorVal > 0) {
                //this if use for only returnScroll
                if (!document.getElementsByClassName("mainSliderElem")[anchorVal - 1].classList.contains("noSlider" && "customScroll")) {
                    stopSlide(findSlidingElem(elemList[anchorVal].getElementsByClassName("carouselDiv")))
                    stopSlide(findSlidingElem(elemList[anchorVal - 1].getElementsByClassName("carouselDiv")))
                    var elem = elemList[--anchorVal];
                    if (scrollFlagCountForManageTeam == true && frompagename == "managementTeamPage") {
                        var elem = elemList[--anchorVal];
                        downArrClicked = false;
                    }
                    removeActive(document.getElementsByClassName("mainSliderElem"), "active")
                    document.getElementsByClassName("mainSliderElem")[anchorVal].classList.add("active")
                    initSlide(findSlidingElem(elemList[anchorVal].getElementsByClassName("carouselDiv")))
                    scrollTo(elem.offsetTop, e, document.getElementsByClassName("mainSliderElem")[anchorVal], 1500);
                    scrolled = true;
                    scrollFlag = false;
                } else {
                    if (!nav[0].classList.contains("navBackground")) {
                        nav[0].classList.add('navBackground');
                    }
                    nav[0].style.visibility = "visible";
                    returnScroll = true;
                }

            } else if (downArrClicked) {
                stopSlide(findSlidingElem(elemList[anchorVal].getElementsByClassName("carouselDiv")))
                stopSlide(findSlidingElem(elemList[anchorVal + 1].getElementsByClassName("carouselDiv")))
                var elem = elemList[anchorVal];
                downArrClicked = false;
                removeActive(document.getElementsByClassName("mainSliderElem"), "active")
                document.getElementsByClassName("mainSliderElem")[anchorVal].classList.add("active")
                initSlide(findSlidingElem(elemList[anchorVal].getElementsByClassName("carouselDiv")))
                scrollTo(elem.offsetTop, e, document.getElementsByClassName("mainSliderElem")[anchorVal], 1500);
                scrolled = true;
                scrollFlag = false;
            }

        } else {
            if (elemList.length > (anchorVal + 1)) {
                stopSlide(findSlidingElem(elemList[anchorVal].getElementsByClassName("carouselDiv")));
                stopSlide(findSlidingElem(elemList[anchorVal + 1].getElementsByClassName("carouselDiv")));
                scrollFlagCountForManageTeam = false;
                if (downArrClicked) {
                    ComunityFlagSet = false;
                    if (anchorVal == 0) {
                        var elem = elemList[++anchorVal];
                    } else {
                        var elem = elemList[anchorVal];
                        downArrClicked = false;
                    }
                } else {
                    if (ComunityFlagSet == true && frompagename == "communityPage") {
                        var elem = elemList[anchorVal];
                        ComunityFlagSet = false;
                    } else {
                        var elem = elemList[++anchorVal];
                    }
                }
                removeActive(document.getElementsByClassName("mainSliderElem"), "active");
                document.getElementsByClassName("mainSliderElem")[anchorVal].classList.add("active");
                initSlide(findSlidingElem(elemList[anchorVal].getElementsByClassName("carouselDiv")));
                scrollTo(elem.offsetTop, e, document.getElementsByClassName("mainSliderElem")[anchorVal], 1500);
                scrolled = true;
                scrollFlag = false;
            }
        }
    }

    var requestAnimFrame = (function () {
        return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function (callback) {
            window.setTimeout(callback, 1000 / 60);
        };
    })();
var hasInViewPort = false;
var slidesCarousel = document.querySelectorAll('.slidesCarousel');
function isElementInViewport(el) {
    var rect = el.getBoundingClientRect();
    return (rect.top <= window.innerHeight) && ((rect.top + rect.height) >= 0);
}
function slideShowPlayPause(e) {
    for (var i = 0; i < slidesCarousel.length; i++) {
        if (isElementInViewport(slidesCarousel[i]) && !hasInViewPort) {
            scrollTo(slidesCarousel[i].offsetTop,slidesCarousel[i],document.getElementsByClassName("mainSliderElem")[anchorVal],2000);
            hasInViewPort = true;
            setTimeout(function () {
                nav[0].classList.remove('navBackground');
                for (var i = 0; i < slidesCarousel.length; i++) {
                    slidesCarousel[i].scrollIntoView({
                        behavior:"smooth"
                    });
                }
            }, 2500);
            
        }
        else if(!isElementInViewport(slidesCarousel[i]) && hasInViewPort ){  
            hasInViewPort = false;
        }
    }
}
window.addEventListener('scroll', function(e) {
    if(window.innerWidth > 991){
        slideShowPlayPause();
    }
});
    function scrollTo(to, callback, elemCur, duration) { //FIXME this always starts from '0', instead of the clicked element offsetTop -> This is because the position is calculated for the main <html> element, not the <iframe>'s <html> tag
        function move(amount) {
            document.documentElement.scrollTop = amount;
            document.body.parentNode.scrollTop = amount;
            document.body.scrollTop = amount;
        }
        var start = position(),
            to = to
        change = to - start,
            currentTime = 0,
            increment = 20;
        decrement = -20;
        var animateScroll = function () {
            currentTime += increment;
            var val = Math.easeInOutQuad(currentTime, start, change, duration);
            move(val);
            if (currentTime < duration) {
                requestAnimFrame(animateScroll);
            } else {
                /*Animation on one touch scroll*/
                animateFrame(elemCur);
                if (elemCur.classList.contains("noSlider")) {
                    modalOpen = true;
                    noSliderDiv = true;
                } else {
                    modalOpen = false;
                    noSliderDiv = false;
                }
                startSlide(findSlidingElem(elemList[anchorVal].getElementsByClassName("carouselDiv")))
                setTimeout(function () {
                    scrolled = false;
                    scrollFlag = true;
                    if (elemList[anchorVal].childNodes[1].classList === undefined || !elemList[anchorVal].childNodes[1].classList.contains("footer-bottom")) {
                        if (!nav[0].classList.contains("navSlideDown")) {
                            nav[0].classList.add('navSlideDown'); //nav appearance
                        }
                    }
                }, 100)
                if (elemList[anchorVal].getElementsByClassName("scrollableDiv").length != 0) {
                    modalOpen = true;
                }
            }
        };
        animateScroll();
    }
    window.addEventListener("hashchange", function () {
        if (document.URL.split("#")[1] == "/searchPanel") {
            nav[0].classList.add('navBackground');
        }
        else {
            nav[0].classList.remove('navBackground');
            init();
        }
    });
    init();
})();

Math.easeInOutQuad = function (t, b, c, d) {
    t /= d / 2;
    if (t < 1) {
        return c / 2 * t * t + b
    }
    t--;
    return -c / 2 * (t * (t - 2) - 1) + b;
};

function findSlidingElem(elemListG) {
    var arr = new Array();
    for (var i = 0; i < sliderObj.length; i++) {
        for (var j = 0; j < elemListG.length; j++) {
            if (elemListG[j] === sliderObj[i].el) {
                arr[arr.length] = sliderObj[i];
            }
        }
    }
    if (arr.length != 0)
        return arr
    else
        return -1;
}

function stopSlide(slideElem) {
    if (slideElem != -1) {
        for (var i = 0; i < slideElem.length; i++) {
            slideElem[i].stopImgTimer(slideElem[i]);
        }
    }
}

function startSlide(slideElem) {
    if (slideElem != -1) {
        for (var i = 0; i < slideElem.length; i++) {
            slideElem[i].startImgTimer(slideElem[i]);
        }
    }
}

function initSlide(slideElem) {
if (slideElem != -1) {
        for (var i = 0; i < slideElem.length; i++) {
            if (!slideElem[i].el.classList.contains("imgCarousel")) {
                slideElem[i].initElement(slideElem[i]);
            }
        }
    }
}

function findElemIndex(elmL, elemC) {
    for (var i = 0; i < elmL.length; i++) {
        if (elmL[i] === elemC)
            return i;
    }
}

function dropPar(elemList) {
    for (var i = 0; i < elemList.length; i++) {
        if (elemList[i].classList != undefined && (elemList[i].classList.contains("carouselDiv")) && !(elemList[i].classList.contains("carouselFade")) &&
            !event.target.parentNode.classList.contains("forBrands")) {
            return [true, elemList[i]];
        }
    }
    return [false, 0]
}

function compObj(elemLis, elemO) {
    for (var i = 0; i < elemLis.length; i++) {
        if (elemLis[i].el.classList === elemO.classList) {
            return i;
        }
    }
    return "false"
}

function swipeScroll(self, changedClientT, targetE, touchDirX) {
    self.stopImgTimer(self)
    if (changedClientT.clientX > touchDirX) {
        self.changeImageCar(true, self, false, targetE)
    } else {
        self.changeImageCar(false, self, false, targetE)
    }
    self.startImgTimer(self)

}

function lastVideoStop(elemList) {
    var videoDiv = document.querySelectorAll('.videodiv .jwplayer');
    if (!elemList[0].classList.contains('active')) {
        if (videoDiv.length) {
            for (var i = 0; i < videoDiv.length; i++) {
                if (jwplayer(videoDiv[i]).getState() == "playing" || jwplayer(videoDiv[i]).getState() == "buffering") {
                    jwplayer(videoDiv[i]).stop();
                }
            }
        }
    } else if (elemList[0].classList.contains('active')) {
        if (videoDiv.length) {
            for (var i = 0; i < videoDiv.length; i++) {
                if (jwplayer(videoDiv[i]).getState() == "idle" || jwplayer(videoDiv[i]).getState() == "stop") {
                    jwplayer(videoDiv[i]).play();
                }
            }
        }
    }
}

//Play pause HTML videos banner videos when scrolled based on scroll position
function playPauseHTMLVideos(HTMLVideo) {
    if ((HTMLVideo.hasAttribute("desktopVideo") && window.innerWidth > 991)
        || (HTMLVideo.hasAttribute("tabVideo") && window.innerWidth < 991 && window.innerWidth > 575)
        || (HTMLVideo.hasAttribute("mobileVideo") && window.innerWidth < 575)
    ) {
        if (HTMLVideo.getBoundingClientRect().top < 0 && HTMLVideo.paused === false) {
            HTMLVideo.pause();
        }
        else if (HTMLVideo.getBoundingClientRect().top >= 0 && HTMLVideo.paused === true) {
            HTMLVideo.play();
        }
    }
}
var HTMLBannerVideo = document.getElementById("bannerVideo");
if (HTMLBannerVideo) {
    document.addEventListener("scroll", function () {
        playPauseHTMLVideos(HTMLBannerVideo);
    })
    window.addEventListener("blur", function () {
        if (HTMLBannerVideo.paused === false) {
            HTMLBannerVideo.pause();
        }
    })
    window.addEventListener("focus", function () {
        playPauseHTMLVideos(HTMLBannerVideo);
    })
}
if (window.innerWidth <= 991) {
    window.addEventListener('touchmove', function () {
        if (document.getElementsByClassName('urlCopied')[0]) {
            document.getElementsByClassName("urlCopied")[0].style.display = "none";
            document.getElementsByClassName("urlCopied")[0].blur();
        }
    });
}

var button = document.getElementsByClassName('navBarBtn')[0];
var collapseNav = document.getElementsByClassName('collapseNav')[0];
var bodyElm = document.getElementsByTagName("body")[0];
var navBar = document.getElementsByClassName("navbar")[0];
var acc = document.getElementsByClassName("accordion");
var panelList = document.getElementsByClassName("panel");
var mainDiv = document.getElementsByTagName("main");
var menuOpen = false;

//this function is used t add menu background color on load
window.addEventListener("load", function (event) {
  /* code for adding black backgound for megaMenu*/
  if (window.innerWidth > 992) {
      addmenubackground();
  }
});
//this event is called on hamburger button to slide in menu panel in mobile device
button.onclick = function (e) {
  e.preventDefault();
  menuOpen = true;
  var itemA = document.getElementsByClassName("itemA");
  for (i = 0; i < itemA.length; i++) {
    if (itemA[i].classList.contains("colsm")) {
      itemA[i].classList.remove("colsm");
    }
    if (itemA[i].classList.contains("colsm2")) {
      itemA[i].classList.remove("colsm2");
    }
  }
  document.body.style.overflow = "hidden";
  document.body.style.position = "relative";
  document.documentElement.style.overflow = "hidden";
  document.documentElement.style.position = "relative";

  collapseNav.classList.toggle('d-block');
  collapseNav.classList.add("forSlideIn");

  document.getElementsByClassName("overlayDiv")[0].style.display = "block";

  stopBodyScrolling(true);
  bodyElm.addEventListener('click', function () {
    closeNav();
  });
};
/* script for accordion*/
function stopBodyScrolling(bool) {
  if (bool === true) {
    document.body.addEventListener("touchstart", freezeVp, true);
  } else {
    document.body.removeEventListener("touchstart", freezeVp, true);
  }
}
var freezeVp = function (event) {
  return false;
};
var closebtn = document.getElementsByClassName("closebtn")[0];
closebtn.addEventListener('click', function () {
  closeNav();
});

function position() {
  if (window.scrollY === 0 && document.documentElement.scrollTop === 0)
    return document.documentElement.offsetTop || document.body.parentNode.offsetTop || document.body.offsetTop;
  else
    return document.documentElement.scrollTop || document.body.parentNode.scrollTop || document.body.scrollTop;
}

function closeNav() {
  if (menuOpen) {
    menuOpen = false;
    collapseNav.classList.remove("d-block");
    collapseNav.classList.remove("forSlideIn");

    document.body.style.overflow = "";
    document.body.style.height = "";
    document.documentElement.style.overflow = "";
    document.documentElement.style.position = "";
    document.documentElement.style.position = "";
    document.getElementsByClassName("overlayDiv")[0].style.display = "none";

    stopBodyScrolling(false);
    var itemA = document.getElementsByClassName("itemA");
    itemA[0].classList.add("colsm");
    itemA[1].classList.add("colsm2");
    itemA[2].classList.add("colsm");
    if (panelList.length > 0) {
      for (var i = 0; i < panelList.length; i++) {
        acc[i].classList.remove("active");
        panelList[i].classList.remove("active");
        panelList[i].classList.add("displaynone");
      }
    }
  }
}
/* scripts separted for mobile-tab and desktop*/
if (window.innerWidth < 991) {
  for (var i = 0; i < acc.length; i++) {
    acc[i].addEventListener("click", accordianFun);
  }
} else {
  /*underline on hover over panel*/
  for (var i = 0; i < panelList.length; i++) {
    panelList[i].addEventListener("mouseover", mouseoverMegaMenu)
    panelList[i].addEventListener("mouseout", mouseoutMegaMenu)
  }

  function mouseoverMegaMenu() {
    el = this;
    el.parentNode.children[0].classList.add("underLine");
  }

  function mouseoutMegaMenu() {
    el = this;
    el.parentNode.children[0].classList.remove("underLine");
  }
}

function accordianFun(event) {
  var el = this;
  if (el.classList.contains("active")) {
    el.classList.toggle("active");
    el.parentNode.children[1].classList.add("displaynone");
    return false;
  }
  for (var i = 0; i < acc.length; i++) {
    if (acc[i].classList.contains("active") && !el.classList.contains("active")) {
      acc[i].classList.remove("active");
    }
  }
  el.classList.toggle("active");
  var panel = el.nextElementSibling;

  var active = document.querySelector(".accordion.active");
  if (active && active != this) {
    active.classList.toggle("active");
  }
  if (panelList.length > 0) {
    for (var i = 0; i < panelList.length; i++) {
      panelList[i].classList.remove("active");
      panelList[i].classList.add("displaynone");
    }
  }
  panel.classList.toggle("active");
  if (panel.classList.contains("displaynone")) {
    panel.classList.remove("displaynone");
  }
  panel.classList.add("displayblock");
  event.target.scrollIntoView();
}

if (!navBar.classList.contains("neverRestNav")) {
  navBar.addEventListener('click', function (e) {
  if ((e.target.tagName.toLowerCase() == 'a' )&&(e.target.href!= "")){
    var activeMenu = document.querySelector('.activeMenu');
    activeMenu.classList.remove("menuExpanded");
    navBar.classList.remove("backLight");
    // navBar.style.height = "";
    
    closeNav();
    for (var i = 0; i < panelList.length; i++) {
        panelList[i].parentNode.children[0].classList.remove("underLine");
    }
}
 e.stopPropagation();
});
}
window.addEventListener("resize", function (e) {
  if (window.innerWidth > 992) {
    for (var i = 0; i < panelList.length; i++) {
      if (panelList[i].classList.contains("displaynone")) {
        panelList[i].classList.remove("displaynone");
      } else if (panelList[i].classList.contains("displayblock")) {
        panelList[i].classList.remove("displayblock");
      }
    }
    addmenubackground();
    var active = document.querySelector(".accordion.active");
    if (active !== null) {
      if (active.classList.contains(active)) {
        active.classList.remove(active);
      }
    }
    var itemA = document.getElementsByClassName("itemA");
    itemA[0].classList.add("colsm");
    itemA[1].classList.add("colsm2");
    itemA[2].classList.add("colsm");
  } else {
    for (var i = 0; i < acc.length; i++) {
      acc[i].addEventListener("click", accordianFun);
      bodyElm.addEventListener('click', function () {
        closeNav();
      });
      if (acc[i].classList.contains("active") && !panelList[i].classList.contains("active")) {
        acc[i].classList.remove("active");
      }
    }
    var itemA = document.getElementsByClassName("itemA");
    itemA[0].classList.remove("colsm");
    itemA[1].classList.remove("colsm2");
    itemA[2].classList.remove("colsm");
  }
});

function addmenubackground() {
  var nav = document.getElementsByClassName("navText");
  var activeMenu = document.querySelector('.activeMenu');
  for (var i = 0; i < nav.length; i++) {
    nav[i].addEventListener('mouseenter', function () {
      if (activeMenu) {
        activeMenu.classList.add("menuExpanded");
      }
      // if (this.classList.contains("megaMenu")) {
      //   // navBar.classList.add("backLight");
      //   // var elem = this;
      //  // var menuheight = elem.getElementsByClassName("panel")[0].clientHeight;
      //  // navBar.style.height = (menuheight + 90) + "px";
      // }
    });
    nav[i].addEventListener('mouseleave', function () {
      if (activeMenu) {
        activeMenu.classList.remove("menuExpanded");
      }
      if (this.classList.contains("megaMenu")) {
        navBar.classList.remove("backLight");
        // navBar.style.height = "";
      }
    });



  }


}
var searchInput = document.getElementById("searchInputG");
var huge_list = document.getElementById('globalList');
var filters = document.getElementsByClassName("filters")[0];
var pagination = document.getElementsByClassName("pagination")[0];
var tagsEl = document.getElementsByClassName("tags")[0];
var pageNumbers = document.getElementsByClassName("pageNumbers")[0];
var navDiv = document.getElementsByTagName("nav");
var populateTagsFlag = false;
var grayNav;
var itemsPerPage = 10;
var displayDetails = {};
var nodeEl = [];
var hashVal;
var phoneFlags = [];
var searchBtnClicked = false;
var showCardsFlag = true;
var setStartCount;
var recordStartIndex = 0;
var setCount,
    setCardsCounts,
    currentPagination;
var globalSearchIcon = document.getElementsByClassName("globalSearchIcon")[0];
var searchIpBrands = document.getElementById("searchBrands");
var verSearchIp = document.getElementById("searchVerticals");
var localSearch = document.getElementsByClassName("searchImg")[0];
var myInput = document.getElementById("searchInputG");
var isSafari = /constructor/i.test(window.HTMLElement) || (function (p) {
        return p.toString() === "[object SafariRemoteNotification]";
    })(!window['safari'] || (typeof safari !== 'undefined' && safari.pushNotification));
var iOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;
if (navigator.platform === "MacIntel"){
    if (navigator.maxTouchPoints > 0){
        iOS = true;
    }
  }
  
var textareaOpen = false;
//this is called to open loader 
function openModalSpinner() {
    document.getElementsByClassName('modalGlobalSearch')[0].style.display = 'block';
    document.getElementsByClassName('fadeGlobalSearch')[0].style.display = 'block';
}
//this is called to close loader 
function closeModalSpinner() {
    document.getElementsByClassName('modalGlobalSearch')[0].style.display = 'none';
    document.getElementsByClassName('fadeGlobalSearch')[0].style.display = 'none';
}

//For handling keyboard events when clicked outside
document.addEventListener("touchend", function (e) {
    if(document.getElementById("searchSection")){
		if ((myInput != e.target) && (document.getElementById("searchSection").style.display == "block")) {
            document.activeElement.blur();
            var elem = document.getElementsByClassName("urlCopiediOs");
            if (elem.length !== 0) {
                elem[0].style.display = "none";
                elem[0].classList.remove("urlCopiediOs");
            }
        }
    }
}, true)
//For handling local search from verticals and brands pages
if (localSearch) {
    localSearch.addEventListener("click", function (event) {
        event.stopPropagation();
        searchBtnClicked = true;
        var ip = document.getElementById("searchVerticals").value;
        var inputEl = document.getElementsByClassName("inputSearch")[0];
        if (ip.replace(/\s/g, '').length > 0) {
            var searchBoxIcon = document.getElementsByClassName("searchBoxIcon")[0];
            localStorage.searchValue = ip;
            searchBoxIcon.click();
            searchDetails(event, 1);
            inputEl.addEventListener("focus", function () {
                inputEl.style.outline = "none";
                inputEl.style.color = "transparent";
                inputEl.style.textShadow = "0px 0px 0px #666";
            })
            if (window.innerWidth < 991) {
                inputEl.blur();
            }
        }
    });
}
window.onkeypress = testKeyEvent;
//Handling keyboard events for devices for verticals and brands pages (local search)
function testKeyEvent(e) {
    if (e.keyCode == 13){ //using Enter key press event for test purpose.
        document.activeElement.blur();
        if (verSearchIp) {
            var ip = document.getElementById("searchVerticals").value;
            var inputEl = document.getElementsByClassName("inputSearch")[0];
            if (ip.replace(/\s/g, '').length > 0) {
                var searchBoxIcon = document.getElementsByClassName("searchBoxIcon")[0];
                localStorage.searchValue = ip;
                searchBoxIcon.click();
                searchDetails(event, 1);
                inputEl.addEventListener("focus", function () {
                    inputEl.style.outline = "none";
                    inputEl.style.color = "transparent";
                    inputEl.style.textShadow = "0px 0px 0px #666";
                })
                if (window.innerWidth < 991) {
                    inputEl.blur();
                }
            }
        }
        if (searchIpBrands) {
            var ip = document.getElementById("searchBrands").value;
            var inputEl = document.getElementsByClassName("inputSearch")[0];
            if (ip.replace(/\s/g, '').length > 0) {
                var searchBoxIcon = document.getElementsByClassName("searchBoxIcon")[0];
                localStorage.searchValue = ip;
                searchBoxIcon.click();
                searchDetails(event, 1);
                inputEl.addEventListener("focus", function () {
                    inputEl.style.outline = "none";
                    inputEl.style.color = "transparent";
                    inputEl.style.textShadow = "0px 0px 0px #666";
                })
                if (window.innerWidth < 991) {
                    inputEl.blur();
                }
            }
        }
    }
}
// Handling input when clicked on seach icon
globalSearchIcon.addEventListener("click", function (event) {
    localStorage.hashValue = "";
    searchBtnClicked = true;
    nodeEl = [];
    event = event.currentTarget.previousElementSibling;
    if (validateInput(true)) {
        searchDetails(event, 1);
    }
});
// called on window load
window.addEventListener('DOMContentLoaded', function () {
    var hash = location.hash;
    if (hash === "") {
        localStorage.searchValue = "";
        if (localStorage.searchBar === false) {
            localStorage.hashValue = "";
        }
    }
    var searchIcon = document.getElementsByClassName("searchBoxIcon")[0];
    searchIcon.addEventListener("click", searchBoxFn);
    searchIcon.addEventListener("click", clearAll);
    // code for page refresh
    if (localStorage.searchBar == "true" && window.location.hash == "#/searchPanel") {
        populateTagsFlag = true;
        searchBtnClicked = true;
        searchBoxFn();
        if (validateInput(true)) {
            searchDetails(event, 1);
        }
    }
    window.onhashchange = function () {
        localStorage.searchValue = '';
        localStorage.hashValue = '';
        searchInput.value = '';
        if(window.location.hash != "#/searchPanel"){
        localStorage.searchBar = false;
        }
        var myButton = document.getElementsByClassName("myButton");
        if (myButton.length !== 0 && videoPopupFlag) {
            popupVideoPlayPause();
        }
        //added to close video on back button
        var modalD = document.getElementById('modalD');
        if (modalD) {
            modalD.innerHTML = '';
        }

        if (modalOpen) {
            var currentDiv = document.getElementsByTagName("section");
            if (modalOverlay.classList.contains("overlaySection")) {
                modalOverlay.classList.remove("overlaySection");
            }
            modalOpen = false;
            var self = document.getElementById("modalD");
            self.classList.remove('in');
            self.style.display = 'none';
            document.body.style = '';
            document.body.classList.remove('modal-open');
            if (document.getElementsByClassName('managementModal').length) {
                var elem = document.querySelector('.managementModal');
                elem.parentNode.removeChild(elem);
                var backdrop = document.getElementById('backdropM');
                if (backdrop !== null) {
                    document.body.removeChild(backdrop);
                }
            } else {
                var backdrop = document.getElementById('backdropM');
                if (backdrop !== null) document.body.removeChild(backdrop);
            }
            for (i = 0; i < currentDiv.length; i++) {
                if (currentDiv[i].classList.contains("active") && currentDiv[i].classList.contains("noSlider")) {
                    modalOpen = true;
                }
            }

        }
        if (window.location.hash != "#/searchPanel") {
            searchSection.style.display = "none";
            searchIcon.classList.add("searchBoxIcon");
            searchIcon.classList.remove("closeSearch");
            searchIcon.parentNode.classList.remove("closeActive");
            document.body.style.overflow = "auto";
            if (navDiv[0].style.visibility == "hidden" || !navDiv[0].style.visibility) {
                navDiv[0].classList.remove("navBackground");
                if (grayNav) {
                    grayNav = false;
                    navDiv[0].classList.add("grayMenu");
                }
            }
            localStorage.searchValue = '';
            clearAll();
        }
        var articleIcon1 = document.getElementsByClassName("articleIcon1");
        var articleIcon2 = document.getElementsByClassName("articleIcon2");
        var arrowSection = document.getElementsByClassName("arrowSection");
        var soundImg = document.getElementsByClassName("soundImg");
        if (soundImg.length !== 0) {
            soundImg[0].classList.remove("addOpacityIcons");
        }
        if (articleIcon1.length !== 0) {
            for (var i = 0; i < articleIcon1.length; i++) {
                articleIcon1[i].classList.remove("addOpacityIcons");
            }
        }
        if (arrowSection.length !== 0) {
            arrowSection[0].classList.remove("addOpacityIcons");
        }
        if (articleIcon2.length !== 0) {
            for (var i = 0; i < articleIcon2.length; i++) {
                articleIcon2[i].classList.remove("addOpacityIcons");
            }
        }
    }

    searchInput.addEventListener("keydown", function (event) {

        var suggest = document.querySelectorAll(".suggestions");
        var activeSuggest = document.querySelectorAll(".suggestions.active");
        if (event.keyCode === 13) {
            if (activeSuggest.length > 0) {
                searchInput.value = activeSuggest[0].value.replace(/<b>/g, "").replace(/<\/b>/g, "");
            }
            localStorage.hashValue = "";
            nodeEl = [];
            if (validateInput(false)) {
                searchDetails(event, 1);
            }
        } else {
            if (event.keyCode === 40) {
                if (activeSuggest.length > 0) {
                    if (activeSuggest[0].nextElementSibling) {
                        activeSuggest[0].nextElementSibling.focus();
                        activeSuggest[0].nextElementSibling.classList.add("active");
                        activeSuggest[0].classList.remove("active");
                    }
                } else {
                    suggest[0].classList.add("active");
                }
            } else if (event.keyCode === 38) {
                activeSuggest[0].classList.remove("active");
                if (activeSuggest.length > 0) {
                    if (activeSuggest[0].previousElementSibling) {
                        activeSuggest[0].previousElementSibling.focus();
                        activeSuggest[0].previousElementSibling.classList.add("active");
                    }
                } else {
                    suggest[0].classList.add("active");
                }
            } else {
                setTimeout(function () {
                    searchList(event);
                }, 10);
            }
        }
    });

    window.searchXHR = new XMLHttpRequest();
});

//Clears all the parameters when called
function clearAll() {
    filters.style.display = "none";
    pagination.style.display = "none";
    huge_list.innerHTML = "";
    tagsEl.innerHTML = "";
    huge_list.classList.remove("globalListMarginTop");
    if (localStorage.searchBar === false) {
        searchInput.value = '';
        localStorage.hashValue = '';
    }
}

//Validating input according to regex
function validateInput(isGlobal) {
    var regexInput = /(.*?){0,100}$/;
    var isRegexValidated = false;

    if (searchInput.value.replace(/[#|,|;]/g,"") !== "" && searchInput.value.replace(/[#|,|;]/g,"") != null && searchInput.value.replace(/[#|,|;]/g,"") !== "undefined") {
        localStorage.searchValue = searchInput.value;
        isRegexValidated = regexInput.test(searchInput.value);
        if (isRegexValidated) {
            if (isGlobal) {
                searchInput.value = localStorage.searchValue;
            }
            return true;
        } else {
            huge_list.style.display = "block"
            // huge_list.innerHTML = "No results found!";
            huge_list.innerHTML = "<div class='errorDesc'>"+"Sorry, we couldn't find a match for your search: \""+ searchInput.value +"\"</div><div class='errorDesc'>"+"Please check for spelling errors or try a broader search term."+"</div><div class='errorDesc'>"+"Alternatively, you could:"+"<br><ul><li><a class='globalSearchSuggestion'href='https://www.tata.com/about-us'>"+"Learn more about us"+"</a></li><li>"+"Browse "+"<a class='globalSearchSuggestion' href='https://www.tata.com/business/overview'>"+"businesses and companies"+"</a></li><li>"+"Read about "+"<a class='globalSearchSuggestion' href='https://www.tata.com/community'>"+" our community work"+"</a></li><li><a class='globalSearchSuggestion' href='https://www.tata.com/careers/jobs/'>"+"Find a job"+"</a></li><li>"+"Or "+"<a class='globalSearchSuggestion' href='https://www.tata.com/newsroom/community/dogs-bombay-house'>"+"meet our friends"+"</a></li></ul></div>";
            tagsEl.innerHTML = "";
            pagination.style.display = "none";
        }
    }

    return false;
}
// for globally search a keyword
function searchBoxFn() {
    setTimeout(function () {
        document.getElementById("searchInputG").focus();
    }, 0);
    hashVal = localStorage.hashValue;
    if (hashVal) {
        searchInput.value = hashVal;
    } else if (localStorage.searchValue !== "" && localStorage.searchValue !== undefined && localStorage.searchValue !== null) {
        searchInput.value = localStorage.searchValue;
    }
    if (!document.URL.split("#")[1] == "/searchPanel" || document.URL.split("#")[1] == undefined) {
        localStorage.setItem("prevUrl", window.location.href);
        history.pushState(null, document.URL, document.URL.split("#")[0] + "#/" + "searchPanel");
    }

    var searchIcon = document.querySelector(".searchBoxIcon");

    el = searchIcon || this;
    if (el !== undefined) {
        el.classList.toggle('closeSearch');
    } else {
        return false;
    }

    var vpH = window.innerHeight;
    document.documentElement.style.height = vpH.toString() + "px";
    document.body.style.height = vpH.toString() + "px";
    var searchSection = document.getElementsByClassName("searchSection")[0];

    if (el.classList.contains("searchBoxIcon") || localStorage.searchBar != "true") {
        document.body.style.overflow = "hidden";
        navDiv[0].classList.add("navBackground");
        if (navDiv[0].classList.contains("grayMenu")) {
            grayNav = true;
        }
        navDiv[0].classList.remove("grayMenu");

        searchIcon.classList.add("closeSearch");
        searchIcon.parentNode.classList.add("closeActive");
        searchIcon.classList.remove("searchBoxIcon");

        searchSection.style.display = "block";

        localStorage.setItem("searchBar", true);
        if (localStorage.searchBar === false) {
            searchInput.value = '';
            localStorage.hashValue = '';
        }
    } else if (el.classList.contains("closeSearch") || localStorage.searchBar != false) {

        window.history.back();
        document.body.style.overflow = "auto";

        searchIcon = el;
        searchIcon.classList.add("searchBoxIcon");
        searchIcon.classList.remove("closeSearch");
        searchIcon.parentNode.classList.remove("closeActive");
        if (navDiv[0].style.visibility == "hidden" || !navDiv[0].style.visibility) {
            navDiv[0].classList.remove("navBackground");
            if (grayNav) {
                grayNav = false;
                navDiv[0].classList.add("grayMenu");
            }
        }

        searchSection.style.display = "none";

        localStorage.setItem("searchBar", false);
        localStorage.removeItem("searchValue");
        localStorage.removeItem("hashValue");
        searchInput.value = '';
        var clearVerticalIp = document.getElementById("searchVerticals");
        var clearBrandsIp = document.getElementById("searchBrands");
        if (clearVerticalIp) {
            clearVerticalIp.value = "";
        }
        if (clearBrandsIp) {
            clearBrandsIp.value = "";
        }
    }
}

//Handles suggestions while searching
function searchList(event) {

    searchBtnClicked = true;
    var min_characters = 0;
    var inputValue;

    inputValue = document.getElementById("searchInputG").value.toLowerCase().replace(/[#|,|;]/g,"");

    var urlPath = "/bin/solrResultServlet?searchType=suggest&searchTerm=";
    var param = encodeURIComponent(inputValue.replace(/[’’]/g, "'").replace(/[“”]/g, "\"").replace(/[#|,|;]/g,"")) + "&start=0&rows=10&wt=json&template=[]";

    if (inputValue) {
        if (inputValue.length <= min_characters) {
            clearAll();
            return;
        } else {
            window.searchXHR.abort();
            window.searchXHR.onreadystatechange = function () {
                if (this.readyState == 4 && this.status == 200) {
                    var response = JSON.parse(this.responseText);
                    huge_list.innerHTML = "";
                    huge_list.style.display = "block";
                    filters.style.display = "none";
                    huge_list.classList.remove("globalListMarginTop");
                    pagination.style.display = "none";

                    var items = response.suggest.mySuggester[inputValue.trim()].suggestions;

                    for (var i = 0; i < items.length; i++) {
                        var option = document.createElement('div');
                        option.value = items[i].term;
                        option.innerHTML = option.value;
                        option.classList.add("suggestions");
                        option.addEventListener("click", function (event) {
                            searchInput.value = this.value.replace(/<b>/g, "").replace(/<\/b>/g, "");
                            dataLayer.push({
                                'event': 'GASearchEvent',
                                'eventCategory': 'SearchClick',
                                'eventAction': 'Click',
                                'eventLabel': searchInput.value
                            });


                            searchDetails(event, 1);
                        });
                        huge_list.appendChild(option);
                    }
                }
            };

            window.searchXHR.open("GET", urlPath + param, true);
            window.searchXHR.send();
        }
    } else {
        clearAll();
        return;
    }
}

//Handles search functionality
function searchDetails(event, currentPage) {
    openModalSpinner();
    var urlPath = "/bin/solrResultServlet?searchType=select&searchTerm=",
        recordRowCount = itemsPerPage;

    if (event || event.keyCode === 13) {
        displayDetails = {};
        rowCount = itemsPerPage;
        populateTagsFlag = true;

        if (searchInput.value === "" && localStorage.getItem("searchValue") !== "") {
            searchInput.value = localStorage.searchValue;
        } else if (searchInput.value === "" && localStorage.getItem("hashValue") !== "") {

            searchInput.value = localStorage.hashValue;
        } else if (searchInput.value !== "") {
            localStorage.searchValue = searchInput.value;
        } else if (searchInput.value === "") {
            return false;
        } else {
            localStorage.setItem("searchValue", searchInput.value);
        }
    } else if (searchInput.value !== "undefined") {
        localStorage.setItem("searchValue", searchInput.value);
    } else if (searchInput.value == "undefined") {
        searchInput.value = '';
        return false;
    }

    var isValidated = validateInput(true);
    if (isValidated) {
        // Check for empty object, to avoid calling getDisplayDetails for the first time, as no data has been fetched yet
        if (Object.keys(displayDetails).length !== 0 && displayDetails.constructor === Object) {
            var details = getDisplayDetails(displayDetails.cards.count, currentPage);
            recordStartIndex = details.records.startIndex;
            recordRowCount = details.records.rowCount === 0 ? 1 : details.records.rowCount; // Set as minimum 1 because rowCount = 0 not handled in Solr

        }

        if (nodeEl == null) {
            nodeEl = [];
        }
        if (localStorage.hashValue == "" && !localStorage.hashValue.trim()) {
            hashVal = '';
            localStorage.hashValue = '';
        }
        if (localStorage.searchValue == "" && !localStorage.searchValue.trim()) {
            localStorage.searchValue = ''
        }
        var param;
        if (("" + nodeEl)[0] === ',') {
            nodeEl = ("" + nodeEl).substring(1)
        }
        if (!showCardsFlag) {
            setCount = (currentPage - 1) * itemsPerPage - setCardsCounts;
            if (setCount < 0) {
                setCount = 0;
            }
            if (hashVal) {
                param = "" + encodeURIComponent(localStorage.searchValue.replace(/[‘’]/g, "'").replace(/[“”]/g, "\"").replace(/[#|,|;]/g,"")) + "&tags=true&start=" + setCount + "&rows=" + recordRowCount + "&wt=json&template=[" + nodeEl + "]";
            } else {
                param = encodeURIComponent(localStorage.searchValue.replace(/[‘’]/g, "'").replace(/[“”]/g, "\"").replace(/[#|,|;]/g,"")) + "&start=" + setCount + "&rows=" + recordRowCount + "&wt=json&template=[" + nodeEl + "]";
            }
        } else {
            if (hashVal)
                param = "" + encodeURIComponent(localStorage.searchValue.replace(/[‘’]/g, "'").replace(/[“”]/g, "\"").replace(/[#|,|;]/g,"")) + "&tags=true&start=" + recordStartIndex + "&rows=" + recordRowCount + "&wt=json&template=[" + nodeEl + "]";
            else
                param = encodeURIComponent(localStorage.searchValue.replace(/[‘’]/g, "'").replace(/[“”]/g, "\"").replace(/[#|,|;]/g,"")) + "&start=" + recordStartIndex + "&rows=" + recordRowCount + "&wt=json&template=[" + nodeEl + "]";

        }

        window.searchDetailsXHR = new XMLHttpRequest();

        window.searchDetailsXHR.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {
                var data = JSON.parse(this.responseText);

                huge_list.innerHTML = "";

                if (!populateTagsFlag) {
                    tagsEl.innerHTML = "";
                }
                huge_list.classList.add("globalListMarginTop");

                var tags = data.facet_counts.facet_fields.template,
                    recordsList = data.response.docs;

                var cardsList = populateCardsList(data);
                huge_list.style.display = "block";
                closeModalSpinner();
                if (cardsList.length == 0 && recordsList.length == 0) {
                    // huge_list.innerHTML = "No results found!";
                    huge_list.innerHTML = "<div class='errorDesc'>"+"Sorry, we couldn't find a match for your search: \""+ searchInput.value +"\"</div><div class='errorDesc'>"+"Please check for spelling errors or try a broader search term."+"</div><div class='errorDesc'>"+"Alternatively, you could:"+"<br><ul><li><a class='globalSearchSuggestion'href='https://www.tata.com/about-us'>"+"Learn more about us"+"</a></li><li>"+"Browse "+"<a class='globalSearchSuggestion' href='https://www.tata.com/business/overview'>"+"businesses and companies"+"</a></li><li>"+"Read about "+"<a class='globalSearchSuggestion' href='https://www.tata.com/community'>"+" our community work"+"</a></li><li><a class='globalSearchSuggestion' href='https://www.tata.com/careers/jobs/'>"+"Find a job"+"</a></li><li>"+"Or "+"<a class='globalSearchSuggestion' href='https://www.tata.com/newsroom/community/dogs-bombay-house'>"+"meet our friends"+"</a></li></ul></div>";
                    return false;
                }

                var displayDetails = getDisplayDetails(cardsList.length, currentPage);

                if (cardsList.length > 0 && displayDetails.cards.showCards) {
                    cardsToHtml(cardsList, displayDetails.cards);
                }
                if (recordsList.length != 0) {
                    if (searchBtnClicked || populateTagsFlag && event.keyCode === 13) {
                        tagsEl.innerHTML = "";
                        populateTags(tags, recordsList.length);
                        searchBtnClicked = false;
                    }

                    if (displayDetails.records.rowCount > 0)
                        recordsToHtml(recordsList, displayDetails.records.rowCount);
                }

                var itemCount = data.response.numFound + cardsList.length;
                paginate(itemCount);
            }
        };

        window.searchDetailsXHR.open("GET", urlPath + param, true);
        window.searchDetailsXHR.send();
    }
    setTimeout(function () {
        document.activeElement.blur();
    }, 0);
}
// Handling all the parameters for pagination and search requests
function getDisplayDetails(cardsCount, currentPage) {
    var maxPageNum = Math.ceil(cardsCount / itemsPerPage);
    var cards = {
        count: cardsCount,
        startIndex: (currentPage - 1) * itemsPerPage,
        endIndex: 0,
        showCards: true
    };
    var cardCountOnLastPage = cardsCount === itemsPerPage ? itemsPerPage : cardsCount % itemsPerPage;

    displayDetails = {
        prevPage: currentPage,
        cards: {},
        records: {}
    };

    // This is last page where cards are to be displayed
    if (maxPageNum === currentPage) {
        showCardsFlag = false;
        cards.endIndex = cardsCount - 1;
        records = {
            startIndex: 0,
            rowCount: itemsPerPage - cardCountOnLastPage
        }
    }
    // This is after the last page where cards are to be shown
    //ex: cards to be shown till page 3, so this is for page 4 onwards
    else if (maxPageNum < currentPage) {
        cards.showCards = false;
        showCardsFlag = false;
        var recordCountOnSharedPage = itemsPerPage - cardCountOnLastPage,
            currentPageAdditive = (currentPage - maxPageNum - 1) * itemsPerPage;
        records = {
            startIndex: recordCountOnSharedPage + currentPageAdditive,
            rowCount: itemsPerPage
        }
    }
    // This is where only cards are shown, no records
    else {
        cards.endIndex = cards.startIndex + itemsPerPage - 1;
        records = {
            startIndex: 0,
            rowCount: 0
        }
    }

    displayDetails.cards = cards;
    displayDetails.records = records;
    setCardsCounts = cards.count;
    return displayDetails;
}

//Storing card results from sonar
function populateCardsList(data) {
    var cards = data.facet_counts.facet_fields["cardset"];

    var cardsList = [];
    for (var i = 0; i < cards.length; i++) {
        var parseDoc = JSON.parse(cards[i]);
        if (i % 2 === 0) {
            for (j = 0; j < parseDoc.length; j++) {
                if (parseDoc[j].hasOwnProperty("cards")) {
                    var resultList = parseDoc[j]["cards"];
                    for (var k = 0; k < resultList.length; k++) {
                        var foundInTitle = resultList[k].title.toLowerCase().includes(
                            searchInput.value.toLowerCase()
                        );

                        if (foundInTitle) {
                            resultList[k]["isBrand"] = "false";
                            cardsList.push(resultList[k]);
                        }
                    }
                } else {
                    for (var j = 0; j < parseDoc.length; j++) {
                        var foundInTitle = parseDoc[j].title.toLowerCase().includes(
                            searchInput.value.toLowerCase()
                        );

                        if (foundInTitle) {
                            cardsList.push(parseDoc[j]);
                        }
                    }
                }
            }
        }
    }

    return cardsList;
}
var isSafariSearch = navigator.userAgent.match(/iPhone|iPad|iPod/i);
var isSafariIphone = navigator.userAgent.match(/iPhone|iPod/i);
if (isSafariIphone) {
    var pagination = document.getElementsByClassName("pagination")[0];
    if (!pagination.classList.contains("addMargin10")) {
        pagination.classList.add("addMargin10");
    }
} else {
    if (pagination.classList.contains("addMargin10")) {
        pagination.classList.remove("addMargin10");
    }
}

//Converting cards result to HTML
function cardsToHtml(cardsList, cardsToShow) {
    for (var i = cardsToShow.startIndex; i <= cardsToShow.endIndex; i++) {
        var card = document.createElement('div');
        card.setAttribute("class", "card")
        card.setAttribute("id", "card" + i);

        var detailsDiv = document.createElement('div');
        detailsDiv.setAttribute("class", "details")

        var img = document.createElement("img");
        img.setAttribute("class", "cardImg");
        if (
            cardsList[i].desktopImagePath != "white" &&
            cardsList[i].desktopImagePath != ""
        ) {
            img.setAttribute("src", "" + cardsList[i].desktopImagePath);
        } else {
            img.setAttribute(
                "src",
                "" + "/content/dam/tata/images/footer/Tata-logo-160x125.jpg"
            );
        }
        detailsDiv.appendChild(img);

        var textDiv = document.createElement('div');
        textDiv.setAttribute("class", textDiv)
        var titleDiv = document.createElement('div');
        titleDiv.setAttribute("class", "titleDiv")
        titleDiv.setAttribute("class", "cardTitle titleLink");
        
        titleDiv.innerHTML =
            "<a target = '_blank' href='" +
            cardsList[i].redirectLink.replace("/content/tata/en", "") +
            "' class='cardTitle titleLink'><span>" +
            cardsList[i].title +
            "</span></a>";
        
        titleDiv.children[0].addEventListener("click", GAEvent)
        textDiv.appendChild(titleDiv);

        var externalLink = document.createElement('a');
        externalLink.setAttribute(
            "href",
            cardsList[i].redirectLink.replace("/content/tata/en", "")
        );
        externalLink.setAttribute("class", "externalLink cursorPointer");
        externalLink.addEventListener("click", GAEvent)

        var exterImg = document.createElement("img");
        exterImg.setAttribute(
            "src",
            "/etc.clientlibs/tata/clientlibs/assets/resources/img/common/globalSearch/externalLinkIcon.svg"
        );
        exterImg.setAttribute("class", "exterImg");
        exterImg.setAttribute("alt", "Arrow");
       
        var interImg = document.createElement("img");
        interImg.setAttribute(
            "src",
            "/etc.clientlibs/tata/clientlibs/assets/resources/img/common/globalSearch/arrow_icon_yellow.svg"
        );
        interImg.setAttribute("class", "exterImg");
        interImg.setAttribute("alt", "Arrow");
      
        externalLink.setAttribute("target", "_blank");
        if (cardsList[i].redirectLink.includes("/content/tata/en")) {
            externalLink.appendChild(interImg);
        } else {
            externalLink.appendChild(exterImg);
        }

        var desDiv = document.createElement('div');
        desDiv.setAttribute("class", "description");
        if (cardsList[i].description && cardsList[i].description.length > 0) {
            desDiv.innerHTML = cardsList[i].description.substring(0, 165) + " " + '...';
            desDiv.appendChild(externalLink)
            textDiv.appendChild(desDiv);
            if (titleDiv.classList.contains("addMargin")) {
                titleDiv.classList.remove("addMargin")
            }
        } else {
            titleDiv.classList.add("addMargin")
        }
        var imgDiv = document.createElement("div");
        imgDiv.setAttribute("class", "imgDiv");

        textDiv.appendChild(imgDiv);

        var copyDiv = document.createElement("div");
        copyDiv.setAttribute("class", "copyDiv");
        var copyImg = document.createElement("img");
        copyImg.setAttribute(
            "src",
            "/etc.clientlibs/tata/clientlibs/assets/resources/img/common/globalSearch/copyIcon.svg"
        );
        copyImg.setAttribute("class", "copyImg cursorPointer normimg");
        copyImg.setAttribute("alt", "Copy");

        var copyImgActive = document.createElement("img");
        copyImgActive.setAttribute(
            "src",
            "/etc.clientlibs/tata/clientlibs/assets/resources/img/common/globalSearch/copyIconActive.svg"
        );
        copyImgActive.setAttribute("class", "copyImg cursorPointer hoverimg");
        copyImgActive.setAttribute("alt", "Copy");
        
        var textarea = document.createElement("textarea");
        textarea.setAttribute("id", "div" + i)
        textarea.setAttribute("class", "hiddenTxtSearch");
        if (cardsList[i].redirectLink.includes("/content/tata/en")) {
            textarea.innerHTML = window.location.origin + cardsList[i].redirectLink.replace("/content/tata/en", "");
        } else {
            textarea.innerHTML = cardsList[i].redirectLink.replace("/content/tata/en", "");
        }
        var CopyTooltip = document.createElement("div");
        CopyTooltip.setAttribute("class", "copyLinkTooltip noDisplay");
        CopyTooltip.innerHTML = "Copy";
        var span = document.createElement("span");
        span.classList.add("spnTextCopy");
        span.appendChild(textarea);
        copyDiv.appendChild(copyImg);
        copyDiv.appendChild(copyImgActive);
        copyDiv.appendChild(CopyTooltip);
        imgDiv.appendChild(copyDiv);
        imgDiv.appendChild(span);

        if (cardsList[i].twitterLink && cardsList[i].twitterLink.length != 0) {
            var twitterLink = document.createElement("a")
            twitterLink.setAttribute("href", cardsList[i].twitterLink);
            twitterLink.setAttribute("class", "twitterLink cursorPointer");
            twitterLink.setAttribute("target", "_blank");

            var twitterImg = document.createElement("img");
            twitterImg.setAttribute(
                "src",
                "/etc.clientlibs/tata/clientlibs/assets/resources/img/common/globalSearch/x-icon.svg"
            );
            twitterImg.setAttribute("class", "twitterImg");
			twitterImg.setAttribute("alt", "Twitter");

            var twitterImgActive = document.createElement("img");
            twitterImgActive.setAttribute(
                "src",
                "/etc.clientlibs/tata/clientlibs/assets/resources/img/common/globalSearch/x-icon-active.svg"
            );
            twitterImgActive.setAttribute("class", "twitterImg noDisplay");
			twitterImgActive.setAttribute("alt", "Twitter");

            var twitterTooltip = document.createElement("div");
            twitterTooltip.setAttribute("class", "twitterTooltip noDisplay");
            twitterTooltip.innerHTML = "Twitter";

            twitterLink.appendChild(twitterImg);
            twitterLink.appendChild(twitterImgActive);
            twitterLink.appendChild(twitterTooltip);

            imgDiv.appendChild(twitterLink);
        }

        if (cardsList[i].phoneDetails && cardsList[i].phoneDetails.length != 0) {
            var phoneDivSearch = document.createElement("div");
            phoneDivSearch.setAttribute("class", "phoneDivSearch");
            var phoneImg = document.createElement("img");
            phoneImg.setAttribute(
                "src",
                "/etc.clientlibs/tata/clientlibs/assets/resources/img/common/globalSearch/phoneIcon.svg"
            );
            phoneImg.setAttribute("class", "phoneImg cursorPointer");
            phoneImg.setAttribute("alt", "Contact");
        
            var phoneImgActive = document.createElement("img");
            phoneImgActive.setAttribute(
                "src",
                "/etc.clientlibs/tata/clientlibs/assets/resources/img/common/globalSearch/phoneIconActive.svg"
            );
            phoneImgActive.setAttribute("class", "phoneImg cursorPointer noDisplay");
            phoneImgActive.setAttribute("alt", "Contact");
        
            var phoneText = document.createElement("div");
            phoneText.setAttribute("class", "phoneTextDynamic noDisplay");
            var phonevalue = parseInt(cardsList[i].phoneDetails);

            var phoneAnchor = document.createElement("a");
            phoneAnchor.setAttribute("href", "tel:" + phonevalue);
            phoneAnchor.innerHTML = phonevalue;
            phoneText.appendChild(phoneAnchor);

            var phoneTooltip = document.createElement("div");
            phoneTooltip.setAttribute("class", "phoneTooltip noDisplay");
            phoneTooltip.innerHTML = "Contact";

            phoneDivSearch.appendChild(phoneImg);
            phoneDivSearch.appendChild(phoneImgActive);
            phoneDivSearch.appendChild(phoneTooltip);
            phoneDivSearch.appendChild(phoneText);

            phoneFlags[i] = true;
            phoneDivSearch.addEventListener(
                "click",
                function () {
                    if (
                        localStorage.searchBar == "true" &&
                        window.location.hash == "#/searchPanel"
                    ) {
                        var ph = document.querySelectorAll(".phoneDiv");
                        var tempflag = this.children[3].classList.contains("noDisplay");
                        flagPhone = true;
                        for (var j = 0; j < ph.length; j++) {
                            ph[j].children[3].classList.add("noDisplay");
                            // ph[j].children[0].classList.remove("noDisplay");
                            // ph[j].children[1].classList.add("noDisplay");
                        }

                        if (tempflag) {
                            this.children[3].classList.remove("noDisplay");
                            // this.children[0].classList.add("noDisplay");
                            // this.children[1].classList.remove("noDisplay");
                        } else {
                            this.children[3].classList.add("noDisplay");
                            // this.children[0].classList.remove("noDisplay");
                            // this.children[1].classList.add("noDisplay");
                        }
                    }
                },
                false
            );

            imgDiv.appendChild(phoneDivSearch);
        }

        var lineDiv = document.createElement("div");
        lineDiv.setAttribute("class", "hrLine")
        detailsDiv.appendChild(textDiv);
        card.appendChild(detailsDiv);
        card.appendChild(lineDiv);
        huge_list.appendChild(card)
    }
}

var flagPhone = false;
document.addEventListener("click", closePhoneText, true);

function closePhoneText() {
    if (localStorage.searchBar == "true" && window.location.hash == "#/searchPanel") {
        if (flagPhone) {
            var ph = document.querySelectorAll(".phoneDivSearch");
            for (var j = 0; j < ph.length; j++) {
                ph[j].children[3].classList.add("noDisplay");
                if (ph[j].children[0].classList.contains("noDisplay")) {
                    ph[j].children[0].classList.remove("noDisplay");
                    ph[j].children[1].classList.add("noDisplay");
                }
            }
        }
        flagPhone = false;
    }
}

document.addEventListener("click", openlinkCopy);

function openlinkCopy(e) {
    var linkCopy = document.querySelectorAll(".copyImg"),
        targetElement = e.target;
    if (linkCopy.length !== 0) {
        if ((targetElement.parentElement.classList.contains("copyDiv")) && !textareaOpen) {
            copyUrlModalSearch(targetElement);
            textareaOpen = false;
        } else {
            var elem = document.getElementsByClassName("urlCopiediOs");
            if (elem.length !== 0) {
                elem[0].style.display = "none";
                elem[0].classList.remove("urlCopiediOs");
            }
        }
    }
}

function copyUrlModalSearch(targetElement) {
    var linkCopy = targetElement.parentElement;
   // linkCopy.classList.add("activeUrl");
   // setTimeout(function () {
    //     if (linkCopy.classList.contains("activeUrl")) {
    //         linkCopy.classList.remove("activeUrl");
    //     }
    // }, 200);
    var textArea = linkCopy.nextElementSibling.children[0];

    if ((isSafari || iOS) && window.innerWidth < 991) {
        textArea.readOnly = false;
        var elem = document.getElementsByClassName("urlCopied" && "urlCopiediOs");
        if (elem.length !== 0) {
            elem[0].style.display = "none";
            elem[0].classList.remove("urlCopiediOs");
        }
        textArea.style.display = "block";
        textArea.classList.add("urlCopiediOs");
        textArea.focus();
        textArea.setSelectionRange(0, 99999);
        textArea.readOnly = true;
        flagCopy = true;
        textareaOpen = true;
    } else {
        textArea.style.display = "block";
        textArea.style.width = "0";
        textArea.style.height = "0";
        textArea.style.opacity = "0";
        textArea.style.zIndex = "2";
        textArea.readOnly = true;
        var copyText = textArea;
        copyText.select();
        document.execCommand("copy");
    }
}

//  Displaying checkboxes for templates shown on left panel
function populateTags(tags, recordsCount) {
    if (tags && recordsCount != 0) {
        filters.style.display = "block";

        for (var i = 0; i < tags.length; i++) {
            if ((i % 2) === 0 && tags[i + 1] !== 0) {
                var element = document.createElement('div');

                var checkbox = document.createElement("input");
                checkbox.setAttribute("class", "searchCheck chkbox");
                checkbox.setAttribute("type", "checkbox");
                checkbox.setAttribute("id", tags[i]);

                var tagLabel = document.createElement("label");
                tagLabel.setAttribute("class", "tagName");
                tagLabel.setAttribute("for", tags[i]);
                tagLabel.innerHTML = tags[i];

                var tagCount = document.createElement("div");
                tagCount.innerHTML = " (" + tags[i + 1] + ")";
                tagCount.setAttribute("class", "tagCount");

                tagLabel.appendChild(tagCount);

                element.appendChild(checkbox);
                element.appendChild(tagLabel);
                element.setAttribute("class", "tagLists");

                tagsEl.appendChild(element);
            }
        }

        var searchCheck = document.querySelectorAll(".searchCheck");
        for (var i = 0; i < searchCheck.length; i++) {
            searchCheck[i].checked = true;
            nodeEl = [];
            searchCheck[i].addEventListener("click", searchWithTags);
        }
    }
}

//Search functionality with templates check uncheck
function searchWithTags(event) {
    showCardsFlag = true;
    var searchCheck = document.querySelectorAll(".searchCheck"),
        currentSelected = this.nextSibling.htmlFor;
    if (this.id != "all") {
        var selectAllTagsFlag = true;
        for (var i = 1; i < searchCheck.length; i++) {
            var item = searchCheck[i];
            if (!item.checked)
            selectAllTagsFlag = false;
        }
        if (selectAllTagsFlag)
            searchCheck[0].checked = true;
    }

    if (!currentSelected) {
        nodeEl = [];
        for (var i = 0; i < searchCheck.length; i++) {
            var item = searchCheck[i];
            if (this.checked && this.id == 'all') {
                if (item.nextSibling.innerHTML != "All") {
                    nodeEl.push(item.nextSibling.htmlFor);
                }
                item.checked = true;
            } else if (!this.checked && this.id == 'all') {
                item.checked = false;
            } else if (this.checked) {
                if (!searchCheck[0].checked) {
                    nodeEl.push(currentSelected);
                }
            } else {
                if (item.checked) {
                    nodeEl.push(item.nextSibling.htmlFor);
                }
                searchCheck[0].checked = false;
            }
        }
    } else {
        if (this.checked) {
            nodeEl.push(currentSelected);
        } else {
            nodeEl = [];
            for (var i = 0; i < searchCheck.length; i++) {
                if (searchCheck[i].checked) {
                    searchCheck[0].checked = false;
                    nodeEl.push(searchCheck[i].nextSibling.htmlFor);
                }
            }
        }
    }

    searchDetails(event, 1);
}

//Records converted to HTML
function recordsToHtml(recordsList, recordsCountToShow) {
    if (recordsCountToShow > recordsList.length)
        recordsCountToShow = recordsList.length;

    for (var i = 0; i < recordsCountToShow; i++) {
        var option = document.createElement('div');
        option.innerHTML =
            "<img src='" +
            recordsList[i].thumbnail[0] +
            "'>" +
            "<a target = '_blank' href=' " +
            recordsList[i].url +
            " '><span>" +
            recordsList[i].title +
            "</span></a>";
        option.classList.add("searchTitle");
        option.addEventListener("click", GAEvent)
        huge_list.appendChild(option);

        var anchorUrl = document.createElement('a');
        anchorUrl.setAttribute("href", "" + recordsList[i].url);
        anchorUrl.setAttribute("target", "_blank");
        anchorUrl.value = recordsList[i].url;
        anchorUrl.innerHTML ="<span>" + window.location.origin + anchorUrl.value + "</span>";
        anchorUrl.classList.add("anchorUrl");
        anchorUrl.addEventListener("click", GAEvent)
        huge_list.appendChild(anchorUrl);

        if (recordsList[i].description) {
            var description = document.createElement('div');
            description.innerHTML = recordsList[i].description;
            description.classList.add("description");
            huge_list.appendChild(description);
        }
    }

    return recordsList;
}

//Handling Pagination
function paginate(itemCount) {
    pageNumbers.innerHTML = "";

    if (itemCount > itemsPerPage) {
        var totalPages = Math.ceil(itemCount / itemsPerPage);

        // IMPORTANT: This assumes that 'currentPage' is updated in 'displayDetails' before pagination is called
        var currentPage = displayDetails.prevPage; // Stored as 'prevPage' for use elsewhere
        var pages = getPaginationBounds(totalPages, currentPage);

        // For show-hide, can check if totalPages == getElementsByClass('pageDigits').length
        // If true, just show/hide
        // if false, create (first time)

        for (var pageNum = pages.start; pageNum <= pages.end; pageNum++) {
            var lists = document.createElement("li");
            lists.innerHTML = "<span>" + pageNum + "</span>";
            lists.classList.add("pageDigits");
            lists.addEventListener("click", function () {
                currentPage = parseInt(this.children[0].innerHTML);
                searchDetails(event, currentPage);
            });

            // This assumes that pagination is called only once on fresh search
            if (pageNum === currentPage) lists.classList.add("active");

            pageNumbers.appendChild(lists);
        }

        var arrows = document.getElementsByClassName("arrows");
        for (var i = 0; i < arrows.length; i++) {
            if (
                (currentPage === 1 &&
                    (arrows[i].classList.contains("jumpFirst") ||
                        arrows[i].classList.contains("leftArw"))) ||
                (currentPage === totalPages &&
                    (arrows[i].classList.contains("rightArw") ||
                        arrows[i].classList.contains("jumpLast")))
            ) {
                arrows[i].classList.add('disabled');
            } else {
                arrows[i].classList.remove('disabled');

                // This copies only HTML with attributes, hence DOM event listeners are removed (to avoid multiple event listeners)
                arrows[i].outerHTML = arrows[i].outerHTML;
                arrows[i].addEventListener("click", handleArrowClicks);
            }
        }
        pagination.style.display = "flex";
    } else {
        pagination.style.display = "none";
    }

    //Handling google like pagination style : active page in center
    function getPaginationBounds(totalPages, currentPage) {
        var startPage = 0,
            endPage = 0,
            maxPages = 5;

        if (totalPages <= maxPages) {
            startPage = 1;
            endPage = totalPages;
        }
        // More than total pages so calculate start and end pages
        else {
            var center = Math.round(maxPages / 2);
            // For starting page till center page
            if (currentPage <= center) {
                startPage = 1;
                endPage = maxPages;
            }
            // For pages towards the end
            else if (currentPage + center - 1 >= totalPages) {
                startPage = totalPages - (maxPages - 1);
                endPage = totalPages;
            }
            // For middle pages
            else {
                if (maxPages % 2 === 0)
                    startPage = currentPage - center;
                else
                    startPage = currentPage - (center - 1);

                endPage = currentPage + (center - 1);
            }
        }

        return {
            start: startPage,
            end: endPage
        }
    }

    //Handling current page on click of respective arrows in pagination
    function handleArrowClicks() {
        var currentPage = 0,
            prevPage = displayDetails.prevPage;

        if (this.classList.contains("jumpFirst")) {
            currentPage = 1;
        } else if (this.classList.contains("leftArw")) {
            currentPage = prevPage - 1;
        } else if (this.classList.contains("rightArw")) {
            currentPage = prevPage + 1;
        } else if (this.classList.contains("jumpLast")) {
            currentPage = totalPages;
        }

        searchDetails(event, currentPage);
    }
}
window.addEventListener("hashchange", ()=>{
    if (document.URL.split("#")[1] == "/searchPanel"){
        searchBoxFn();
    }
});

function GAEvent() {
    if (this.getAttribute("href") != null)
        dataLayer.push({
            'event': 'GAEventSearchTermPage',
            'eventCategory': 'SearchClick',
            'eventAction': 'Click',
            'eventLabel':
                window.location.href.replace(window.location.origin, "") +
                " ? " +
                searchInput.value +
                " & " +
                this.getAttribute("href")
        });
    else
        dataLayer.push({
            'event': 'GAEventSearchTermPage',
            'eventCategory': 'SearchClick',
            'eventAction': 'Click',
            'eventLabel':
                window.location.href.replace(window.location.origin, "") +
                " ? " +
                searchInput.value +
                " & " +
                this.getElementsByTagName("a")[0].getAttribute("href")
        });
}

urlF = "/bin/socialFeedsServlet?socialTypes=twitter";
//code for dropdown

var customSelect, i, j, selElmnt, div, div2, div3;
customSelect = document.getElementsByClassName("custom-select");
for (i = 0; i < customSelect.length; i++) {
  selElmnt = customSelect[i].getElementsByTagName("select")[0];
  div = document.createElement("DIV");
  div.setAttribute("class", "select-selected");
  div.innerHTML = selElmnt.options[selElmnt.selectedIndex].innerHTML;
  customSelect[i].appendChild(div);
  div2 = document.createElement("DIV");
  div2.setAttribute("class", "select-items select-hide");
  for (j = 0; j < selElmnt.length; j++) {
    div3 = document.createElement("DIV");
    div3.innerHTML = selElmnt.options[j].innerHTML;
    div3.addEventListener("click", function (e) {
      var y, i, k, s, h;
      s = this.parentNode.parentNode.getElementsByTagName("select")[0];
      h = this.parentNode.previousSibling;
      for (i = 0; i < s.length; i++) {
        if (s.options[i].innerHTML == this.innerHTML) {
          s.selectedIndex = i;
          h.innerHTML = this.innerHTML;
          y = this.parentNode.getElementsByClassName("same-as-selected");
          for (k = 0; k < y.length; k++) {
            y[k].removeAttribute("class");
          }
          this.setAttribute("class", "same-as-selected");
          break;
        }
      }
      h.click();
    });
    div2.appendChild(div3);
  }
  customSelect[i].appendChild(div2);
  div.addEventListener("click", function (e) {
    e.stopPropagation();
    closeAllSelect(this);
    this.nextSibling.classList.toggle("select-hide");
    this.classList.toggle("select-arrow-active");
  });
}

function closeAllSelect(elmnt) {
  var x, y, i, arrNo = [];
  x = document.getElementsByClassName("select-items");
  y = document.getElementsByClassName("select-selected");
  for (i = 0; i < y.length; i++) {
    if (elmnt == y[i]) {
      arrNo.push(i)
    } else {
      y[i].classList.remove("select-arrow-active");
    }
  }
  for (i = 0; i < x.length; i++) {
    if (arrNo.indexOf(i)) {
      x[i].classList.add("select-hide");
    }
  }
}
document.addEventListener("click", closeAllSelect);
customSelect[0].addEventListener("click", function () {});
var bannerVideoTag = document.getElementById("bannerVideo");
var bannerImage = document.querySelector(".bannerSection img");

function bannerReload(){
    if(window.innerWidth > 991){
        if(bannerVideoTag.hasAttribute("desktopVideo")){
            bannerVideoTag.children[0].setAttribute("src",bannerVideoTag.getAttribute("desktopVideo"));
            bannerVideoTag.setAttribute("poster",bannerVideoTag.getAttribute("desktopPoster"));
            bannerVideoTag.load();
            bannerImage.classList.add("noDisplay");
        }else{
			bannerVideoTag.classList.add("noDisplay");
        }
    }else if(window.innerWidth > 575){
        if(bannerVideoTag.hasAttribute("tabVideo")){
            bannerVideoTag.children[0].setAttribute("src",bannerVideoTag.getAttribute("tabVideo"));
            bannerVideoTag.setAttribute("poster",bannerVideoTag.getAttribute("tabPoster"));
            bannerVideoTag.load();
            bannerImage.classList.add("noDisplay");
        }else{
			bannerVideoTag.classList.add("noDisplay");
        }
    }else{
        if(bannerVideoTag.hasAttribute("mobileVideo")){
            bannerVideoTag.children[0].setAttribute("src",bannerVideoTag.getAttribute("mobileVideo"));
            bannerVideoTag.setAttribute("poster",bannerVideoTag.getAttribute("mobilePoster"));
            bannerVideoTag.load();
            bannerImage.classList.add("noDisplay");
        }else{
			bannerVideoTag.classList.add("noDisplay");
        }
    }
}

document.addEventListener('DOMContentLoaded', function () {
    if(bannerVideoTag){
        bannerReload();
    }
});
var selectedPopularity = "false";
var currentTimestamps = [];
var newTimestamps = [];
var newTweets = [];
var count = 0;
var startTweet = 0;
var endTweet = 12;
var selectedItem = document.getElementsByClassName("select-selected")[0].innerHTML;
var tweetResponse;
var viewNextTweet = document.getElementById("viewNext");


function onLoadTweets() {
   var urlF = "/bin/twitterWallServlet?socialTypes=twitter_wall&industries="
        + document.getElementsByClassName("select-selected")[0].innerHTML
        + "&isPopularityRequired=" + selectedPopularity;

    var xhttp = new XMLHttpRequest();
    xhttp.open("GET", urlF, true);


 
    xhttp.onload = function () {
        if (xhttp.readyState == 4 && xhttp.status === 200) {
            
            var currentTweetsFeed = JSON.parse(xhttp.response).response;
            updateCurrentTweetStamps(currentTweetsFeed);

           
            tweetResponse = xhttp;
            populateTweets(xhttp, newTweets)
        } else {
            console.log('Request failed.  Returned status of ' + xhttp.status);
        }
    };

    xhttp.send();
}

//on window load show tweets
onLoadTweets();

function checkForNewTweets() {
    setInterval(function () {
        count++;
        if (count === 30) {
            
            var NewTweetServlet = "/bin/twitterRefreshServlet?socialTypes=twitter_wall&industries=" + selectedItem + "&isPopularityRequired=" + selectedPopularity + "&timeStamps=";

            
            var tweetDates = "";
            for (var i = 0; i < currentTimestamps.length; i++) {
                if ((i + 1) === currentTimestamps.length) {
                    
                    tweetDates += currentTimestamps[i];
                } else {
                    
                    tweetDates += currentTimestamps[i] + ",";
                }
            }
            NewTweetServlet += tweetDates;
            
            var xhttpForNewTweets = new XMLHttpRequest();
            xhttpForNewTweets.open("GET", NewTweetServlet, true);

            xhttpForNewTweets.onload = function () {
                if (xhttpForNewTweets.readyState == 4 && xhttpForNewTweets.status === 200) {
                
                    if (/*New tweets are available*/JSON.parse(xhttpForNewTweets.response).response !== "no names") {
                        
                       

                        if (document.getElementsByClassName("NewTweetLoadButton").length !== 0) {
                            document.getElementsByClassName("NewTweetLoadButton")[0].classList.add("Visiblility");
                        }
                        if (window.innerWidth < 575) {
                            setTimeout(function () {
                                if (document.getElementsByClassName("NewTweetLoadButton").length !== 0) {
                                    document.getElementsByClassName("NewTweetLoadButton")[0].classList.remove("Visiblility");
                                }
                            }, 5000);
                        }

                        if (document.getElementsByClassName("twitterRefreshButton").length !== 0) {
                            document.getElementsByClassName("twitterRefreshButton")[0].classList.add("noDisplay");
                        }
                        if (document.getElementsByClassName("twitterRefreshButtonActive").length !== 0) {
                            document.getElementsByClassName("twitterRefreshButtonActive")[0].classList.remove("noDisplay");
                        }
                    }
                    count = 0;
                } else {
                    console.log('Request failed.  Returned status of ' + xhttp.status);
                }
            };
            xhttpForNewTweets.send();
        }
    }, 1000)
}

//check if new tweets have come
checkForNewTweets();

function refreshButtonClick() {
    if (document.getElementsByClassName("twitterRefreshButtonActive").length !== 0) {
        document.getElementsByClassName("twitterRefreshButtonActive")[0].addEventListener("click", function () {
            newTimestamps = [];
            viewNextTweet.classList.add("hide");
            TweetAjax(false);
        })
    }
}

//add refresh button click event
refreshButtonClick();

function addDropdownClickEvents() {

    var dropdowns = document.getElementsByClassName("select-items");
    if (dropdowns.length > 0) {
        for (var i = 0; i < dropdowns.length; i++) {
            var dropdown = dropdowns[i]
            for (var j = 0; j < dropdown.childElementCount; j++) {
                dropdownClickEvents(dropdown, j);
            }
        }
    }

    function dropdownClickEvents(dropdown, j) {
        dropdown.children[j].addEventListener("click", function (event) {
            viewNextTweet.classList.add("hide");
            loadTweets(event, j);
        })
    }
}

//add dropdown click events
addDropdownClickEvents();

//loadTweets function to read dropdown industry and popularity
function loadTweets(e, index) {
    if (index === 1) {
        selectedItem = e.currentTarget.parentElement.children[0].innerHTML;
        selectedPopularity = true;
    } else {
        selectedItem = e.currentTarget.innerHTML;
        selectedPopularity = false;
    }
    currentTimestamps = [];
    TweetAjax(true);
}

//Ajax call to load tweets
function TweetAjax(isCurrent) {
    startTweet = 0;
    endTweet = 12;
    
    if (document.getElementsByClassName("NewTweetLoadButton").length !== 0) {
        document.getElementsByClassName("NewTweetLoadButton")[0].classList.remove("Visiblility");
    }
    if (document.getElementsByClassName("twitterRefreshButton").length !== 0) {
        document.getElementsByClassName("twitterRefreshButton")[0].classList.remove("noDisplay");
    }
    if (document.getElementsByClassName("twitterRefreshButtonActive").length !== 0) {
        document.getElementsByClassName("twitterRefreshButtonActive")[0].classList.add("noDisplay");
    }
    document.getElementsByClassName("noTweetMessage")[0].classList.add("noDisplay");

    document.getElementsByClassName("tweetContainer")[0].children[1].innerHTML = "";
    document.getElementsByClassName("tweetContainer")[0].children[2].innerHTML = "";
    document.getElementsByClassName("tweetContainer")[0].children[3].innerHTML = "";
    var tweetUrl = "/bin/twitterWallServlet?socialTypes=twitter_wall";
    tweetUrl += "&industries=" + selectedItem + "&isPopularityRequired=" + selectedPopularity;
    var xhttpTweet = new XMLHttpRequest();
    xhttpTweet.open("GET", tweetUrl, true);
    xhttpTweet.onload = function () {
        if (xhttpTweet.readyState == 4 && xhttpTweet.status === 200) {
            var currentTweetsFeed = JSON.parse(xhttpTweet.response).response;
            if (isCurrent) {
                updateCurrentTweetStamps(currentTweetsFeed);
            } else {
                updateNewTweetStamp(currentTweetsFeed);
                findNewTweets();
                updateCurrentTweetStamps(currentTweetsFeed);
            }
         

            tweetResponse = xhttpTweet;
            populateTweets(xhttpTweet, newTweets);
            newTweets = [];
            setTimeout(function () {
                window.scrollBy(0, 1);
                window.scrollBy(0, -1);
            }), 1000;
            count = 0;
        } else {
            console.log('Request failed.  Returned status of ' + xhttpTweet.status);
        }
    };
    xhttpTweet.send();
}



//populateTweets function to populate tweets
function populateTweets(xhttp, newTweetStamps) {
    var tweets = [];
    var allTweets = [];
    var tweetContainer = document.getElementsByClassName("tweetContainer")[0];

    for (var i = 0; i < JSON.parse(xhttp.response).response.length; i++) {
        allTweets = allTweets.concat(JSON.parse(xhttp.response).response[i].feeds)
    }


    if (allTweets.length === 0) {
        document.getElementsByClassName("noTweetMessage")[0].classList.remove("noDisplay");
        return false;
    }
    if (endTweet >= allTweets.length) {

        endTweet = allTweets.length;
        viewNextTweet.classList.add("hide");
    }else{
        viewNextTweet.classList.remove("hide");

    }
    for (var i = startTweet; i < endTweet; i++) {
        tweets.push(allTweets[i]);
    }

    if (window.innerWidth > 575) {
        for (var i = 0; i < tweets.length; i++) {
            tweetContainer.children[(i % 3)+1].appendChild(createTweet(tweets[i]));
        }
    } else {
        var tweetsLength = tweets.length;
        
       
        
        
        

        
        for (var i = 0; i < tweetsLength; i++) {
            tweetContainer.children[1].appendChild(createTweet(tweets[i]));
        }
    }
   
    newTweets = [];
}

//craeteTweets function to create tweets
function createTweet(columnTweets) {
    // console.log(columnTweets);
    // console.log(newStamps);
    //var currentColumn = document.createElement("div");
    //currentColumn.classList = "col-lg-4 col-md-4 col-sm-4 col-xs-12 ";
    //for (var i = 0; i < columnTweets.length; i++) {
    var newTweetTimestampFlag = false;
    for (var j = 0; j < newTweets.length; j++) {
        //if (columnTweets[i].publishedTimeStamp === newStamps[j]) {
        if (columnTweets.publishedTimeStamp === newTweets[j]) {
            // console.log("done")
            newTweetTimestampFlag = true;
            break;
        }
    }
    var tweet = document.createElement("div");
    tweet.classList = "tweetContent module tweetCard";
    if (newTweetTimestampFlag) {

        tweet.classList.add("newTweet");
    }
    tweet.innerHTML = "<div class=\"flexDivTweet\">\
    <a href=\"#\" class=\"twitterPoster\">\
        <img src=\"images/nav/tata_group_logo_grey.svg\" alt=\"Tata group logo\" class=\"img-responsive profileImg\">\
        <div class=\"twitterPosterDesc\">\
            <div class=\"displayName\"></div>\
            <div class=\"screenName\"></div>\
        </div>\
    </a>\
    <a href=\"#\">\
        <img src=\"/etc.clientlibs/tata/clientlibs/assets/resources/img/common/globalSearch/x-icon.svg\" alt=\"Twitter\">\
    </a>\
</div>\
<div class=\"contextBox\">\
    <div class=\"contentDesc\">\
        <a href=\"#\"></a>\
    </div>\
    <img class=\"img-responsive tWallImg\" src=\"images/newsroom/desktop/tcs.jpg\" alt=\"TCS\" />\
</div>\
<a href=\"#\" target=\"_blank\" class=\"hoverCard\"></a>";

    // tweet.getElementsByClassName("displayName")[0].innerHTML = columnTweets[i].name;
    // tweet.getElementsByClassName("profileImg")[0].src = columnTweets[i].profileImage;
    // tweet.getElementsByClassName("screenName")[0].innerHTML = columnTweets[i].title;
    // tweet.getElementsByClassName("hoverCard")[0].setAttribute("href", columnTweets[i].link);
    // tweet.getElementsByClassName("contentDesc")[0].innerHTML = columnTweets[i].content;
    // tweet.setAttribute("timeStamp", columnTweets[i].publishedTimeStamp);
    // //insert image if media is present
    // if (columnTweets[i].media) {
    //     if (columnTweets[i].media.url != "undefined") {
    //         tweet.getElementsByClassName("tWallImg")[0].src = columnTweets[i].media.url;
    //     }
    // } else {
    //     {
    //         tweet.getElementsByClassName("tWallImg")[0].classList.add("noDisplay");
    //     }
    // }

    tweet.getElementsByClassName("displayName")[0].innerHTML = columnTweets.name;
    tweet.getElementsByClassName("profileImg")[0].src = columnTweets.profileImage;
    tweet.getElementsByClassName("profileImg")[0].alt = columnTweets.title;
    tweet.getElementsByClassName("screenName")[0].innerHTML = columnTweets.title;
    tweet.getElementsByClassName("hoverCard")[0].setAttribute("href", columnTweets.link);
    tweet.getElementsByClassName("contentDesc")[0].innerHTML = columnTweets.content;
    tweet.setAttribute("timeStamp", columnTweets.publishedTimeStamp);
    //insert image if media is present
    if (columnTweets.media) {
        if (columnTweets.media.url != "undefined") {
            tweet.getElementsByClassName("tWallImg")[0].src = columnTweets.media.url;
        }
    } else {
        {
            tweet.getElementsByClassName("tWallImg")[0].classList.add("noDisplay");
        }
    }

    //currentColumn.appendChild(tweet);
    //}
    //return currentColumn;
    return tweet;
}

//update current Tweets tweetStamp
function updateCurrentTweetStamps(currentTweetsFeed) {
    currentTimestamps = [];
    for (var i = 0; i < currentTweetsFeed.length; i++) {
        for (var j = 0; j < currentTweetsFeed[i].feeds.length; j++) {
            currentTimestamps.push(currentTweetsFeed[i].feeds[j].publishedTimeStamp);
        }
    }
}

//update new Tweets tweetStamp
function updateNewTweetStamp(currentTweetsFeed) {
    newTimestamps = [];
    for (var i = 0; i < currentTweetsFeed.length; i++) {
        for (var j = 0; j < currentTweetsFeed[i].feeds.length; j++) {
            newTimestamps.push(currentTweetsFeed[i].feeds[j].publishedTimeStamp);
        }
    }
}

//find new Tweets
function findNewTweets() {
    newTweets = [];
    for (var i = 0; i < newTimestamps.length; i++) {
        var newTweetFlag = true;
        for (var j = 0; j < currentTimestamps.length; j++) {
            if (newTimestamps[i] === currentTimestamps[j]) {
                newTweetFlag = false;
                break;
            }
        }
        if (newTweetFlag) {
            newTweets.push(newTimestamps[i]);
        }
    }
}

viewNextTweet.addEventListener("click", function(){
    startTweet += 12;
    endTweet += 12;
    populateTweets(tweetResponse, newTweets);
    setTimeout(function () {
        window.scrollBy(0, 1);
        window.scrollBy(0, -1);
    }), 1000;
})

var modalOpen;
var noSliderDiv;
var appendFlag = true;
var modalOverlay = document.getElementById("modalOverlay");
var urlRef = "";
var activecaritem;
var modelOpenCurrentFlag = true;

var openModel = document.getElementsByClassName("saltModal");
for (var i = 0; i < openModel.length; i++) {
  openModel[i].addEventListener("click", function (event) {
    var el = event.currentTarget;
    activecaritem = el.getAttribute("data-index");
  });
}

//code for copy url Link
var flagCopy = false;
var isSafari = /constructor/i.test(window.HTMLElement) || (function (p) {
  return p.toString() === "[object SafariRemoteNotification]";
})(!window['safari'] || (typeof safari !== 'undefined' && safari.pushNotification));
var iOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;
if (navigator.platform === "MacIntel"){
  if (navigator.maxTouchPoints > 0){
      iOS = true;
  }
}

var textareaOpen = false;
function initializeWrapper(){
  let inViewList = document.getElementsByClassName("overlayWrapper");
  for (let wrapper of inViewList){
  var rect = wrapper.getBoundingClientRect();

    if (
        rect.top >= 0 &&
        rect.bottom <= (window.innerHeight || document.documentElement.clientHeight)
        
    ){
      wrapper.classList.add("inView");
      wrapper.children[0].classList.add("inView");
      wrapper.children[2].classList.add("inView");
       wrapper.children[2].children[1].classList.add("inView");
    };
} 
}
(function () {
  var Modal = function (el, options) {
    var self = this;
    self.el = document.querySelector(el);
    self.options = options;
  };
  //modal prototype
  Modal.prototype = {
    // to show modal
    show: function () {
            /*Removed code for ReCaptcha error*/ 
            // (function () {
            //     var CFG = '___grecaptcha_cfg';
            //     if (!window[CFG]) {
            //         window[CFG] = {};
            //     }
            //     var GR = 'grecaptcha';
            //     if (!window[GR]) {
            //         window[GR] = {};
            //     }
            //     window[GR].ready = window[GR].ready || function (f) {
            //         (window[CFG]['fns'] = window[CFG]['fns'] || []).push(f);
            //     };
            //     (window[CFG]['render'] = window[CFG]['render'] || []).push('onload');
            //     window['__google_recaptcha_client'] = true;
            //     var po = document.createElement('script');
            //     po.type = 'text/javascript';
            //     po.async = true;
            //     po.src = 'https://www.gstatic.com/recaptcha/api2/v1531759913576/recaptcha__en.js';
            //     var elem = document.querySelector('script[nonce]');
            //     var n = elem && (elem['nonce'] || elem.getAttribute('nonce'));
            //     if (n) {
            //         po.setAttribute('nonce', n);
            //     }
            //     var s = document.getElementsByTagName('script')[0];
            //     s.parentNode.insertBefore(po, s);
            // })();
      //update new code for neverest people overlay section background color change
            //added code for modal overlay background color transperent
            let nrstorypopup = document.querySelector('.neverRestStoryPopUp');
            if(nrstorypopup){
            let nrPreviousSib = nrstorypopup.closest('section');
            let overlycls = nrPreviousSib.nextElementSibling;
            if(overlycls == null || overlycls.id !== "modalOverlay"){
                let addoverlaysec = document.createElement("SECTION");
                addoverlaysec.setAttribute("id", "modalOverlay");
                nrPreviousSib.insertAdjacentElement('afterend', addoverlaysec);
            }}

      let lengvalue = 0;
      let current = document.querySelector('#modalOverlay');
      if(current.previousElementSibling){
        let prevSiblings = current.previousElementSibling;
        lengvalue = prevSiblings.getElementsByClassName("neverRestStoryPopUp").length;
      }

      if (!modalOverlay.classList.contains("overlaySection") && lengvalue == 0) {
        modalOverlay.classList.add("overlaySection");
        var articleIcon1 = document.getElementsByClassName("articleIcon1");
        var articleIcon2 = document.getElementsByClassName("articleIcon2");
        var arrowSection = document.getElementsByClassName("arrowSection");
        var soundImg = document.getElementsByClassName("soundImg");
        if (soundImg.length !== 0) {
          soundImg[0].classList.add("addOpacityIcons");
        }
        if (arrowSection.length !== 0) {
          arrowSection[0].classList.add("addOpacityIcons");
        }
        if (articleIcon1.length !== 0) {
          for (var i = 0; i < articleIcon1.length; i++) {
            articleIcon1[i].classList.add("addOpacityIcons");
          }
        }
        if (articleIcon2.length !== 0) {
          for (var i = 0; i < articleIcon2.length; i++) {
            articleIcon2[i].classList.add("addOpacityIcons");
          }
        }
      }
      modelOpenCurrentFlag = modalOpen;
      modalOpen = true;
      noSliderDiv = false;
      var self = this;
      if (self.options.backdrop) {
        var backdrop = document.getElementById('backdropM');
        if (backdrop === null) {
          backdrop = document.createElement('div');
          backdrop.id = "backdropM";
          backdrop.className = "modal-backdrop fade in";
          document.body.appendChild(backdrop);
        }
      }
      self.el.classList.add('in');
      self.el.style.display = 'block';
      document.body.classList.add('modal-open');
      document.getElementById("modalD").scrollTop = 0;
      //share functionality
      var fb = document.querySelectorAll(".fb > .fbAnchor");
      var twitter = document.querySelectorAll(".twitter > .twitterAnchor");
      var linkedin = document.querySelectorAll(".linkedin > .linkedinAnchor");
      var mailto = document.querySelectorAll(".mailto > .mailtoAnchor");
      for (var i = 0; i < fb.length; i++) {
        if (fb || twitter || linkedin || mailto) {
          if (fb[i]) {
            fb[i].addEventListener("mouseenter", chngImgColorfb);
            function chngImgColorfb() {
              this.style.backgroundImage = "url(/etc.clientlibs/tata/clientlibs/assets/resources/img/common/shareOptions/color/FB.svg)";
            }
            fb[i].addEventListener("mouseleave", chngImgfb);
            function chngImgfb() {
              this.style.backgroundImage = "url(/etc.clientlibs/tata/clientlibs/assets/resources/img/common/shareOptions/FB.svg)";
            }
          }
          if (twitter[i]) {
            twitter[i].addEventListener("mouseenter", chngImgColortwitter);
            function chngImgColortwitter() {
              this.style.backgroundImage = "url(/etc.clientlibs/tata/clientlibs/assets/resources/img/common/shareOptions/color/x-icon.svg)";
            }
            twitter[i].addEventListener("mouseleave", chngImgtwitter);
            function chngImgtwitter() {
              this.style.backgroundImage = "url(/etc.clientlibs/tata/clientlibs/assets/resources/img/common/shareOptions/x-icon.svg)";
            }
          }
          if (linkedin[i]) {
            linkedin[i].addEventListener("mouseenter", chngImgColorlinkedin);
            function chngImgColorlinkedin() {
              this.style.backgroundImage = "url(/etc.clientlibs/tata/clientlibs/assets/resources/img/common/shareOptions/color/LinkedIn.svg)";
            }
            linkedin[i].addEventListener("mouseleave", chngImglinkedin);
            function chngImglinkedin() {
              this.style.backgroundImage = "url(/etc.clientlibs/tata/clientlibs/assets/resources/img/common/shareOptions/LinkedIn.svg)";
            }
          }
          if (mailto[i]) {
            mailto[i].addEventListener("mouseenter", chngImgColormailto);
            function chngImgColormailto() {
              this.style.backgroundImage = "url(/etc.clientlibs/tata/clientlibs/assets/resources/img/common/shareOptions/color/Contact_Us.svg)";
            }
            mailto[i].addEventListener("mouseleave", chngImgmailto);
            function chngImgmailto() {
              this.style.backgroundImage = "url(/etc.clientlibs/tata/clientlibs/assets/resources/img/common/shareOptions/Contact_Us.svg)";
            }
          }
          var currentUrl = window.location.href;
          fb[i].setAttribute("href", "https://www.facebook.com/sharer/sharer.php?u=" + currentUrl);
          twitter[i].setAttribute("href", "https://twitter.com/share?url=" + currentUrl);
          linkedin[i].setAttribute("href", "http://www.linkedin.com/shareArticle?mini=true&url=" + currentUrl.split('#//management-team')[0] + currentUrl.split('#//management-team')[1]);
          mailto[i].setAttribute("href", "mailto:?Subject= Tata.com url&Body=%20" + currentUrl);
          var isMobile = {
            Android: function () {
              return navigator.userAgent.match(/Android/i);
            },
            BlackBerry: function () {
              return navigator.userAgent.match(/BlackBerry/i);
            },
            iOS: function () {
              return navigator.userAgent.match(/iPhone|iPad|iPod/i);
            },
            Opera: function () {
              return navigator.userAgent.match(/Opera Mini/i);
            },
            Windows: function () {
              return navigator.userAgent.match(/IEMobile/i);
            },
            any: function () {
              return (isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows());
            }
          };
          var whatsApp = document.getElementsByClassName("whatsApp");
          for (var j = 0; j < whatsApp.length; j++) {
            whatsApp[j].addEventListener("click", function () {
              if (isMobile.any()) {
                var whatsapp_url = "whatsapp://send?text=" + currentUrl;
                window.location.href = whatsapp_url;
              } else {
                console.log("Please share this article in mobile device");
              }
            });
          }
        }
      }
    },
    //to hide modal
    hide: function () {
      var currentDiv = document.getElementsByTagName("section");
      if (modalOverlay.classList.contains("overlaySection")) {
        modalOverlay.classList.remove("overlaySection");
        var articleIcon1 = document.getElementsByClassName("articleIcon1");
        var articleIcon2 = document.getElementsByClassName("articleIcon2");
        var arrowSection = document.getElementsByClassName("arrowSection");
        var soundImg = document.getElementsByClassName("soundImg");
        if (soundImg.length !== 0) {
          soundImg[0].classList.remove("addOpacityIcons");
        }
        if (articleIcon1.length !== 0) {
          for (var i = 0; i < articleIcon1.length; i++) {
            articleIcon1[i].classList.remove("addOpacityIcons");
          }
        }
        if (arrowSection.length !== 0) {
          arrowSection[0].classList.remove("addOpacityIcons");
        }
        if (articleIcon2.length !== 0) {
          for (var i = 0; i < articleIcon2.length; i++) {
            articleIcon2[i].classList.remove("addOpacityIcons");
          }
        }
      }
      modalOpen = false;
      var self = this;
      self.el.classList.remove('in');
      self.el.innerHTML = '';
      self.el.style.display = 'none';
      document.body.classList.remove('modal-open');
      //window.history.back(); //  for backbutton
      if (document.getElementsByClassName('managementModal').length) {
        var elem = document.querySelector('.managementModal');
        elem.parentNode.removeChild(elem);
        if (self.options.backdrop) {
          var backdrop = document.getElementById('backdropM');
          if (backdrop !== null) document.body.removeChild(backdrop);
        }
      }
      if (self.options.backdrop) {
        var backdrop = document.getElementById('backdropM');
        if (backdrop !== null) document.body.removeChild(backdrop);
      }
      for (i = 0; i < currentDiv.length; i++) {
        if (currentDiv[i].classList.contains("active") && currentDiv[i].classList.contains("noSlider")) {
          modalOpen = true;
        }
      }
      modalOpen = modelOpenCurrentFlag; //   set current modelStatus open
    }
  }
  //this function is called on domloaded for loading of modal data 
  document.addEventListener('DOMContentLoaded',()=>{showModal();initializeWrapper();});
  window.addEventListener('hashchange',showModal);
  window.addEventListener('pageshow',initializeWrapper);
  function showModal() {
    var url = "";
    var modalN = new Modal('#modalD', {
      backdrop: true
    });
    var Links = document.getElementsByClassName("openModel")
    document.addEventListener("click", function (e) {
      if (e.target.parentNode) {
        if ((e.target.classList != undefined && e.target.classList.contains("openModel")) || (e.target.parentNode.classList != undefined && e.target.parentNode.classList.contains("openModel"))) {
          if (e) e.preventDefault();
          var evTar;
          if (e.target.classList != undefined && e.target.classList.contains("openModel"))
            evTar = e.target
          else
            evTar = e.target.parentNode
          if (evTar.classList.contains("externalSite")) {
            urlRef = evTar.getAttribute("data-redirectionLink")
          }
          if (window.location.hash != ("#/" + evTar.getAttribute("href").split(".html")[0])){
          history.pushState('', document.URL, document.URL.split("#")[0] + "#/" + evTar.getAttribute("href").split(".html")[0]);
          }
          url = evTar.getAttribute("href");
          var xmlhttp;
          if (window.XMLHttpRequest) {
            // code for modern browsers
            xmlhttp = new XMLHttpRequest();
          } else {
            // code for old IE browsers
            xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
          }
          xmlhttp.onreadystatechange = function (event, response) {
            if (this.readyState == 4 && this.status == 200) {
              // Typical action to be performed when the document is ready:
              document.getElementById("modalD").innerHTML = this.responseText;
              if (document.getElementById("modalD").getElementsByClassName("modal-dialog")[0].classList.contains("popUpModalBox")) {
                document.getElementById("modalD").getElementsByClassName("redirect")[0].setAttribute("href", urlRef)
              }
              if (document.getElementById("modalD").getElementsByClassName("modal-dialog")[0].classList.contains("modalVideo")) {
                var currElement = document.getElementById("modalD")
                var elemListC = currElement.getElementsByClassName("carItem");
                var videoObj = new Array();
                videoObj[0] = new videoComp(elemListC[0]);
                for (var i = 0; i < elemListC.length; i++) {
                  elemListC[i].classList.remove("active");
                  var elemDataAttr = elemListC[i].getAttribute("data-step");
                  if (activecaritem === elemDataAttr) {
                    elemListC[i].classList.add("active");
                    activecaritem = "";
                  }
                  //for maintaining position of video in saltstory
                  if (window.innerWidth < 992 && window.innerWidth > 767) {
                    if (elemListC[i].children[0].classList.contains("jwplayer")) {
                      elemListC[i].style.height = "66.6rem";
                    }
                  } else if (window.innerWidth < 767) {
                    if (elemListC[i].children[0].classList.contains("jwplayer")) {
                      elemListC[i].style.height = "28rem";
                    }
                  }
                }
                var objs = new Array();
                for (var i = 0; i < document.getElementsByClassName("videoCarousel").length; i++) {
                  objs[objs.length] = new CarousalComp(document.getElementsByClassName("videoCarousel")[i], 0);
                }
              }
              var linkList = document.getElementById("modalD").getElementsByClassName("closeIcon");
              for (var i = 0; i < linkList.length; i++) {
                linkList[i].addEventListener('click', function (e) {
                  modalN.hide();
                })
              }
              var videoModalClose = document.getElementById("modalD").getElementsByClassName("vidcloseIcon");
              for (var i = 0; i < videoModalClose.length; i++) {
                videoModalClose[i].addEventListener('click', function (e) {
                  modalN.hide();
                })
              }
              var shareBtnParent = document.querySelectorAll(".shareBtnParentModal")[0];
              if (shareBtnParent) {
                shareBtnParent.addEventListener("click", shareIcons);
              }
              //for NChandraModal icon arrangements in mobile
              var modalIcons = document.getElementsByClassName("modalIcons");
              if (modalIcons) {
                if (window.innerWidth < 767) {
                  for (var i = 0; i < modalIcons.length; i++) {
                    modalIcons[i].classList.add("iconsMobile");
                  }
                }
              }
              modalN.show();

              let firstSlide = document.querySelectorAll("div.modal-dialog div.videoContainer div.innerCarousel > div.carItem")[0];
              let activeSlide = document.querySelectorAll("div.modal-dialog div.videoContainer div.innerCarousel > div.carItem.active");
              if (firstSlide && (activeSlide.length < 1)) {
                  firstSlide.classList.add("active");
              }
            }
          };
          xmlhttp.open("GET", url, true);
          xmlhttp.send();
        } else {
          if ((e.target.parentNode.classList != undefined && e.target.parentNode.classList.contains("openModel"))) {
            if (e) e.preventDefault();
            var evTar;
            if (e.target.classList != undefined && e.target.classList.contains("openModel"))
              evTar = e.target
            else
              evTar = e.target.parentNode
            if (evTar.classList.contains("externalSite")) {
              urlRef = evTar.getAttribute("data-redirectionLink")
            }
            if (window.location.hash != ("#/" + evTar.getAttribute("href").split(".html")[0])){
            history.pushState('', document.URL, document.URL.split("#")[0] + "#/" + evTar.getAttribute("href").split(".html")[0]);
            }
            url = evTar.getAttribute("href");
            var xmlhttp;
            if (window.XMLHttpRequest) {
              // code for modern browsers
              xmlhttp = new XMLHttpRequest();
            } else {
              // code for old IE browsers
              xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
            }
            xmlhttp.onreadystatechange = function (event, response) {
              if (this.readyState == 4 && this.status == 200) {
                // Typical action to be performed when the document is ready:
                document.getElementById("modalD").innerHTML = this.responseText;
                if (document.getElementById("modalD").getElementsByClassName("modal-dialog")[0].classList.contains("popUpModalBox")) {
                  document.getElementById("modalD").getElementsByClassName("redirect")[0].setAttribute("href", urlRef)
                }
                if (document.getElementById("modalD").getElementsByClassName("modal-dialog")[0].classList.contains("modalVideo")) {
                  var currElement = document.getElementById("modalD")
                  var elemListC = currElement.getElementsByClassName("carItem");
                  var videoObj = new Array()
                  videoObj[0] = new videoComp(elemListC[0])
                  for (var i = 0; i < elemListC.length; i++) {
                    elemListC[i].classList.remove("active");
                    var elemDataAttr = elemListC[i].getAttribute("data-step");
                    if (activecaritem === elemDataAttr) {
                      elemListC[i].classList.add("active");
                      activecaritem = "";
                    }
                    //for maintaining position of video in saltstory
                    if (window.innerWidth < 992 && window.innerWidth > 767) {
                      var carItem = document.getElementsByClassName("carItem")[0];
                      if (elemListC[i].children[0].classList.contains("jwplayer")) {
                        carItem.style.height = "56rem";
                      }
                    } else if (window.innerWidth < 767) {
                      var carItem = document.getElementsByClassName("carItem")[0];
                      if (elemListC[i].children[0].classList.contains("jwplayer")) {
                        carItem.style.height = "28rem";
                      }
                    }
                  }
                  var objs = new Array();
                  for (var i = 0; i < document.getElementsByClassName("videoCarousel").length; i++) {
                    objs[objs.length] = new CarousalComp(document.getElementsByClassName("videoCarousel")[i], 0);
                  }
                }
                var linkList = document.getElementById("modalD").getElementsByClassName("closeIcon");
                for (var i = 0; i < linkList.length; i++) {
                  linkList[i].addEventListener('click', function (e) {
                    modalN.hide();
                  })
                }
                var videoModalClose = document.getElementById("modalD").getElementsByClassName("vidcloseIcon");
                for (var i = 0; i < videoModalClose.length; i++) {
                  videoModalClose[i].addEventListener('click', function (e) {
                    modalN.hide();
                  })
                }
                var shareBtnParent = document.querySelectorAll(".shareBtnParentModal")[0];
                if (shareBtnParent) {
                  shareBtnParent.addEventListener("click", shareIcons);
                }
                //for NChandraModal icon arrangements in mobile
                var modalIcons = document.getElementsByClassName("modalIcons");
                if (modalIcons) {
                  if (window.innerWidth < 767) {
                    for (var i = 0; i < modalIcons.length; i++) {
                      modalIcons[i].classList.add("iconsMobile");
                    }
                  }
                }
                modalN.show();
              }
            };
            xmlhttp.open("GET", url, true);
            xmlhttp.send();
          }
        }
      }
    });
    //share icons
    var shareBtnParent = document.getElementsByClassName("shareBtnParentModal");
    var shareOptions = document.getElementsByClassName("shareOptions");
    var sharePanelOpen = false;
    var tool = document.getElementsByClassName("tooltiptext");
    //share icons
    function shareIcons() {
      if (!sharePanelOpen) {
        sharePanelOpen = true;
        for (var i = 0; i < tool.length; i++) {
          tool[i].style.visibility = "hidden"
        }
        var el = this;
        el.classList.toggle("activeShare");
        var sharePanel = el.parentElement.nextElementSibling;
        sharePanel.classList.toggle("active");
        if (el.classList.contains("activeShare") && sharePanelOpen == true) {
          shareFlag = true; //from common js
          document.addEventListener("click", function (el) {
            closeSharePanel(el);
          });
        }
      } else {
        sharePanelOpen = true;
        for (var i = 0; i < tool.length; i++) {
          tool[i].style.visibility = "";
        }
        var el = this;
        el.classList.toggle("activeShare");
        var sharePanel = el.parentElement.nextElementSibling;
        sharePanel.classList.toggle("active");
      }
    }
    //close the share panel
    function closeSharePanel(el) {
      shareFlag = false; //from common js
      if (el.target.classList.contains("shareBtnParentModal") && !sharePanelOpen) {
        sharePanelOpen = false;
        for (var i = 0; i < shareBtnParent.length; i++) {
          shareBtnParent[i].classList.toggle("activeShare");
          shareOptions[i].classList.toggle("active");
        }
      } else if (!el.target.parentNode.classList.contains("activeShare")) {
        sharePanelOpen = false;
        for (var i = 0; i < shareBtnParent.length; i++) {
          shareBtnParent[i].classList.remove("activeShare");
          //to handle when there is share panel on both story page as well on modal
          var shareOpt = shareBtnParent[i].parentElement.nextElementSibling;
          shareOpt.classList.remove("active");
        }
        for (var i = 0; i < tool.length; i++) {
          tool[i].style.visibility = "";
        }
      }
    }
    for (var i = 0; i < Links.length; i++) {
      if (document.URL.split("#/").length > 1) {
        if (Links[i].getAttribute("href").split(".html")[0] === document.URL.split("#/")[1]) {
          Links[i].click();
          break;
        }
      }
    }
  };
  document.addEventListener('click', checkModalOutsideClick);
  // event is called when outside click of modal
  function checkModalOutsideClick(e) {
    if (modalOpen == true || window.location.hash !== "") {
if ((e.target.closest(".closeIcon")) || ((!e.target.closest(".modal-dialog") && !e.target.closest(".searchSection")) && ((document.querySelectorAll(".modal-dialog").length > 0) || (document.getElementById("searchSection").style.display == "block"))) || e.target.closest(".closeImg") || e.target.closest(".closeTxt")) {
			history.pushState(null, null, ' ');
    
  }
      var modalDialog = document.getElementsByClassName("modal-dialog");
      if (modalDialog.length !== 0) {
        var flyoutElement = document.getElementsByClassName("modal-dialog")[0].parentElement,
          flyoutElement1 = document.getElementById("modalD"),
          linkCopy = document.querySelectorAll(".linkCopyModal"),
          copyAll = document.querySelectorAll(".copyBtnModal"),
          targetElement = e.target; // clicked element
        if ((targetElement == flyoutElement || targetElement == flyoutElement1) && document.getElementById("modalD").getElementsByClassName("jw-orientation-portrait").length == 0) {
          var currentDiv = document.getElementsByTagName("section");
          var modalOverlay = document.getElementById("modalOverlay");
          if (modalOverlay.classList.contains("overlaySection")) {
                        modalOverlay.classList.remove("overlaySection");
            var articleIcon1 = document.getElementsByClassName("articleIcon1");
            var articleIcon2 = document.getElementsByClassName("articleIcon2");
            var arrowSection = document.getElementsByClassName("arrowSection");
            var soundImg = document.getElementsByClassName("soundImg");
            if (soundImg.length !== 0) {
              soundImg[0].classList.remove("addOpacityIcons");
            }
            if (articleIcon1.length !== 0) {
              for (var i = 0; i < articleIcon1.length; i++) {
                articleIcon1[i].classList.remove("addOpacityIcons")
              }
            }
            if (arrowSection.length !== 0) {
              arrowSection[0].classList.remove("addOpacityIcons");
            }
            if (articleIcon2.length !== 0) {
              for (var i = 0; i < articleIcon2.length; i++) {
                articleIcon2[i].classList.remove("addOpacityIcons");
              }
            }
          }
          modalOpen = false;
          var self = document.getElementById("modalD");
          self.classList.remove('in');
          self.innerHTML = '';
          self.style.display = 'none';
          document.body.style = '';
          document.body.classList.remove('modal-open');
          //window.history.back();
          if (document.getElementsByClassName('managementModal').length) {
            var elem = document.querySelector('.managementModal');
            elem.parentNode.removeChild(elem);
            var backdrop = document.getElementById('backdropM');
            if (backdrop !== null) document.body.removeChild(backdrop);
          } else {
            var backdrop = document.getElementById('backdropM');
            if (backdrop !== null) document.body.removeChild(backdrop);
          }
          for (i = 0; i < currentDiv.length; i++) {
            if (currentDiv[i].classList.contains("active") && currentDiv[i].classList.contains("noSlider")) {
              modalOpen = true;
            }
          }
        } else if (linkCopy.length !== 0 || copyAll.length !== 0) {
          if ((targetElement.parentElement.classList.contains("linkCopyModal")) && !textareaOpen) {
            copyUrlModal();
            textareaOpen = false;
          } else if ((targetElement.parentElement.classList.contains("copyBtnModal")) && !textareaOpen) {
            copyAllFunction();
            textareaOpen = false;
          } else {
            var copyAll = document.querySelectorAll(".copyBtnModal");
            var linkCopy = document.querySelectorAll(".linkCopyModal");
            if (copyAll.length !== 0) {
              var urlCopiedall = copyAll[0].nextElementSibling.nextElementSibling.children[0];
              urlCopiedall.style.display = "none";
              if (urlCopiedall.classList.contains("urlCopiediOs")) {
                urlCopiedall.classList.remove("urlCopiediOs");
              }
            }
            if (linkCopy.length !== 0) {
              var urlCopied = linkCopy[0].nextElementSibling.nextElementSibling.children[0];
              urlCopied.style.display = "none";
              if (urlCopied.classList.contains("urlCopiediOs")) {
                urlCopied.classList.remove("urlCopiediOs");
              }
            }
          }
        } else {
          return false;
        }
      }
    }
  }

  //All text selection in modal
  function copyAllFunction() {
    var copyAll = document.querySelectorAll(".copyBtnModal")[0];
    copyAll.classList.add("activeText");
    setTimeout(function () {
      if (copyAll.classList.contains("activeText")) {
        copyAll.classList.remove("activeText");
      }
    }, 200);
    var paraDiv = document.getElementsByClassName("copyText");
    var allText = [];
    var textArea = copyAll.nextElementSibling.nextElementSibling.children[0];
    for (var i = 0; i < paraDiv.length; i++) {
      allText.push(paraDiv[i].innerHTML);
    }
    var str = allText.join(" ");
    if ((isSafari || iOS) && window.innerWidth < 991) {
      textArea.readOnly = false;
      var elem = document.getElementsByClassName("urlCopied" && "urlCopiediOs");
      if (elem.length !== 0) {
        elem[0].style.display = "none";
        elem[0].classList.remove("urlCopiediOs");
      }
      textArea.style.display = "block";
      textArea.classList.add("urlCopiediOs");
      textArea.innerHTML = str;
      textArea.focus();
      textArea.setSelectionRange(0, 99999);
      flagCopy = true;
      textareaOpen = true;
      textArea.readOnly = true;
    } else {
      textArea.style.display = "block";
      textArea.style.width = "0";
      textArea.style.height = "0";
      textArea.style.opacity = "0";
      textArea.style.zIndex = "2";
      textArea.innerHTML = str;
      textArea.readOnly = true;
      var copyText = textArea;
      copyText.select();
      document.execCommand("copy");
    }
  }

  // copy url link
  function copyUrlModal() {
    var linkCopy = document.querySelectorAll(".linkCopyModal")[0];
    linkCopy.classList.add("activeUrl");
    setTimeout(function () {
      if (linkCopy.classList.contains("activeUrl")) {
        linkCopy.classList.remove("activeUrl");
      }
    }, 200);
    var textArea = linkCopy.nextElementSibling.nextElementSibling.children[0];
    if ((isSafari || iOS) && window.innerWidth < 991) {
      textArea.readOnly = false;
      var elem = document.getElementsByClassName("urlCopied" && "urlCopiediOs");
      if (elem.length !== 0) {
        elem[0].style.display = "none";
        elem[0].classList.remove("urlCopiediOs");
      }
      textArea.style.display = "block";
      textArea.classList.add("urlCopiediOs");
      textArea.innerHTML = window.location.href;
      textArea.focus();
      textArea.setSelectionRange(0, 99999);
      textArea.readOnly = true;
      flagCopy = true;
      textareaOpen = true;
    } else {
      textArea.style.display = "block";
      textArea.style.width = "0";
      textArea.style.height = "0";
      textArea.style.opacity = "0";
      textArea.style.zIndex = "2";
      textArea.innerHTML = window.location.href;
      textArea.readOnly = true;
      var copyText = textArea;
      copyText.select();
      document.execCommand("copy");
    }
  }
  window.onhashchange = function () {
    var currentDiv = document.getElementsByTagName("section");
    if (modalOverlay.classList.contains("overlaySection")) {
            modalOverlay.classList.remove("overlaySection");
    }
    modalOpen = false;
    var self = document.getElementById("modalD");
    self.classList.remove('in');
    self.style.display = 'none';
    document.body.style = '';
    document.body.classList.remove('modal-open');
    if (modalOpen) {
      window.history.back();
    }
    if (document.getElementsByClassName('managementModal').length) {
      var elem = document.querySelector('.managementModal');
      elem.parentNode.removeChild(elem);
      var backdrop = document.getElementById('backdropM');
      if (backdrop !== null) {
        document.body.removeChild(backdrop);
      }
    } else {
      var backdrop = document.getElementById('backdropM');
      if (backdrop !== null) document.body.removeChild(backdrop);
    }
    for (i = 0; i < currentDiv.length; i++) {
      if (currentDiv[i].classList.contains("active") && currentDiv[i].classList.contains("noSlider")) {
        modalOpen = true;
      }
    }
  }
})();
